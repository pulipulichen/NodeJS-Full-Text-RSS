<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-16607461</id><updated>2021-10-11T18:33:30.004+08:00</updated><category term="日記"/><category term="輔大圖資"/><category term="電腦軟體"/><category term="政大圖檔"/><category term="期刊論文閱讀"/><category term="Programming/JavaScript"/><category term="作品"/><category term="Blogger"/><category term="網路管理"/><category term="記事"/><category term="DSpace"/><category term="JavaScript"/><category term="OS/Proxmox VE"/><category term="程式寫作"/><category term="碩士畢業論文"/><category term="Proxmox"/><category term="Android"/><category term="OS/Android"/><category term="Presentation"/><category term="OS/Linux"/><category term="Software/Weka"/><category term="Course"/><category term="研究方法"/><category term="虛擬機器"/><category term="Data Mining"/><category term="Linux"/><category term="DLLL-CIAS"/><category term="OS/Windows"/><category term="Software/Zotero"/><category term="Work/Widget"/><category term="Zotero"/><category term="新玩具"/><category term="Software/Windows"/><category term="程式語言/JavaScript"/><category term="網站服務"/><category term="雲端科技與圖書館行動服務研習班(2014)"/><category term="Software/LibreOffice"/><category term="Programming/PHP"/><category term="Software/GoogleDoc"/><category term="作業報告"/><category term="研究所推甄"/><category term="演講心得"/><category term="Windows/電腦軟體"/><category term="資訊計量學"/><category term="Series/Big Data Analysis Course"/><category term="無題"/><category term="課程/圖書資訊學研究趨勢"/><category term="PHP"/><category term="Programming/AutoIt"/><category term="GitHub"/><category term="Programming/R"/><category term="Statistics"/><category term="圖資學術界"/><category term="Software/Word"/><category term="課程/國際檔案學"/><category term="Series/LibreOffice Calc Template"/><category term="Software/OwnCloud"/><category term="Software/R"/><category term="Virtual Machine/VirtualBox"/><category term="VirtualBox"/><category term="極短"/><category term="AutoIt"/><category term="NetBeans"/><category term="Server/ownCloud"/><category term="Software"/><category term="Software/NetBeans"/><category term="Zentyal"/><category term="KALS"/><category term="Programing/PHP"/><category term="Programming/PhoneGap"/><category term="Research"/><category term="Research/Text Mining"/><category term="作業系統/Linux"/><category term="教學課程"/><category term="課程/檔案應用研究"/><category term="輔漫"/><category term="GLPI"/><category term="Koha"/><category term="OS/Chromebook"/><category term="OS/Koha"/><category term="Series/NOU Word"/><category term="Software/Google"/><category term="Software/SPSS"/><category term="政大平價美食"/><category term="數位圖書館"/><category term="CSS"/><category term="OS/Zentyal"/><category term="Plurk"/><category term="Programming/CSS"/><category term="Programming/Node.js"/><category term="Work"/><category term="Drawing"/><category term="OS/FreeNAS"/><category term="Programming/APP"/><category term="Service/GitHub"/><category term="Software/PostgreSQL"/><category term="Software/PostreSQL"/><category term="Tool/NetBeans"/><category term="Virtual Machine/OpenVZ"/><category term="報告/教學課程"/><category term="發表"/><category term="2009詐欺案件"/><category term="Note/Paper"/><category term="Programming/Electron"/><category term="Programming/Java"/><category term="Software/Firefox"/><category term="Software/Inkscape"/><category term="Work/Windows"/><category term="評論"/><category term="3C"/><category term="IDE"/><category term="Library/ORCID"/><category term="LibreOffice Calc Course"/><category term="Programming/Database"/><category term="Programming/Python"/><category term="Programming/SeleniumIDE"/><category term="Programming/Vue.js"/><category term="Research/Sequential Analysis"/><category term="Selenium"/><category term="Server/OCS"/><category term="Software/Notepad++"/><category term="Software/PDF"/><category term="Web Service"/><category term="博士班考試"/><category term="問答訪談"/><category term="課程/資訊行為與資訊服務"/><category term="讀者服務研討"/><category term="CKEditor"/><category term="Drupal"/><category term="GAME"/><category term="Google Analytics"/><category term="Hardware"/><category term="Hardware/Notebook"/><category term="OCS"/><category term="Programming/CKEditor"/><category term="Series/Weka Image Classification"/><category term="Server/Apache Solr"/><category term="Software/Browser"/><category term="Software/Drupal"/><category term="Software/Pentaho"/><category term="Virtual Machine"/><category term="活動籌辦"/><category term="演講"/><category term="生活/日記"/><category term="網站系統/ownCloud"/><category term="課程/檔案學"/><category term="遊戲"/><category term="閱讀學習"/><category term="AngularJS"/><category term="EMAIL-KM"/><category term="GAME/PokemonGO"/><category term="IPFire"/><category term="OS/IPFire"/><category term="OS/pfSense"/><category term="OSSIM"/><category term="Programming/AdonisJs"/><category term="Research/Social Network Analysis"/><category term="Server/GitLab"/><category term="Software/CWISE"/><category term="Software/Office"/><category term="Software/Open Live Writer"/><category term="Software/WordPress"/><category term="Software/mRemoteNG"/><category term="Sponsored"/><category term="Virtual Machine/Docker"/><category term="pfSense"/><category term="ニコニコ動画"/><category term="國立政治大學"/><category term="圖書資訊學研討"/><category term="布丁通信"/><category term="技術服務研討"/><category term="生活/政大平價美食"/><category term="研究方法\序列分析"/><category term="研究領域/閱讀學習"/><category term="硬體設備"/><category term="系統/WordPress"/><category term="輕小說"/><category term="電腦軟體/R"/><category term="3C/Note 8"/><category term="Auto"/><category term="Hardware/Teclast"/><category term="Linux/WINE"/><category term="Programming/AngularJS"/><category term="Programming/SVG"/><category term="Programming/Svelte"/><category term="Programming/Web Design"/><category term="Programming/Webpack"/><category term="Publication/Conference"/><category term="Research/Infometric"/><category term="Second Life"/><category term="Server/Apache"/><category term="Software/Apache Tika"/><category term="Software/DSpace"/><category term="Software/FileZilla"/><category term="Software/ImageMagick"/><category term="Software/中州韻輸入法"/><category term="Timemark to SSA"/><category term="Travel"/><category term="Userscript"/><category term="國家考試"/><category term="國立空中大學"/><category term="專題"/><category term="課程/計算智能與商業分析"/><category term="販售"/><category term="資訊管理/網站管理"/><category term="電視"/><title type='text'>布丁布丁吃什麼？</title><subtitle type='html'>我不是在實驗室，就是在前往實驗室的路上。</subtitle><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/'/><link rel='hub' href='http://pubsubhubbub.appspot.com/'/><link rel='next' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default?start-index=26&amp;max-results=25'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/13614721642960940190</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='http://photos1.blogger.com/blogger/7060/785/200/pudding%2850px%29.jpg'/></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>1421</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-16607461.post-2669184128743285712</id><published>2021-09-14T20:55:00.002+08:00</published><updated>2021-09-14T20:55:34.193+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="OS/Chromebook"/><category scheme="http://www.blogger.com/atom/ns#" term="Sponsored"/><title type='text'>課堂學習的最佳Chromebook：ASUS Chromebook Detachable CZ1 / The Best Learning partner: ASUS Chromebook Detachable CZ1</title><content type='html'>&lt;p style=&quot;text-align: left;&quot;&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-n62j8tq-PiU/YTJQnKPYspI/AAAAAAAFBas/eqQI01PExPkMmX2R8BDoLaGDIrSylpYBgCLcBGAsYHQ/s1600/4-cover-Chromebook_ASUS_Chromebook_Detachable.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-n62j8tq-PiU/YTJQnKPYspI/AAAAAAAFBas/eqQI01PExPkMmX2R8BDoLaGDIrSylpYBgCLcBGAsYHQ/s1600/4-cover-Chromebook_ASUS_Chromebook_Detachable.png&quot; title=&quot;4-cover-Chromebook_ASUS_Chromebook_Detachable.png&quot; alt=&quot;4-cover-Chromebook_ASUS_Chromebook_Detachable.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;哈囉，大家最近在吃什麼呢？這裡是感嘆Chromebook發展日新月異的布丁。&lt;/p&gt;
&lt;p&gt;上一次我介紹了&lt;a href=&quot;/2021/08/chromebooklinuxasus-chromebook-flip-cx5.html&quot;&gt;適合開發者的ASUS Chromebook Flip CX 5&lt;/a&gt;，這次我們來看看ASUS在Chromebook主力戰場的教學環境中推出最新的機型：&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;ASUS Chromebook Detachable CZ1 (CZ1000)&lt;/span&gt;吧。&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;ASUS Chromebook Detachable CZ1 (CZ1000)&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;本身是一台運作Chrome作業系統的平板。整體大概1公斤與10.1吋觸控螢幕的&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;ASUS Chromebook Detachable CZ1 (CZ1000)&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;，特別適合帶出門或拿在手上使用。&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;ASUS Chromebook Detachable CZ1 (CZ1000)&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;搭配了具有橫向立架的保護套、可拆卸的超薄鍵盤，使它也可以作爲筆電使用。更棒的是，&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;ASUS Chromebook Detachable CZ1 (CZ1000)&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;的平板具有可收納USI觸控筆的空間，收納USI觸控筆後也會自動充電，再也不用擔心USI觸控筆被我擺到弄丟了呢。&lt;/p&gt;
&lt;p&gt;如果你也對輕薄小巧又有多種實用功能的&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;ASUS Chromebook Detachable CZ1 (CZ1000)&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;感興趣的話，就讓我們繼續看下去吧！&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;簡介 / Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-JNGzNzowbRw/YSIzcjxE4_I/AAAAAAAFBQ8/O1nRR-Z5C38zsUVI2PltCGy4ukR-ElReQCLcBGAsYHQ/s1600/2021-0822-191849.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-JNGzNzowbRw/YSIzcjxE4_I/AAAAAAAFBQ8/O1nRR-Z5C38zsUVI2PltCGy4ukR-ElReQCLcBGAsYHQ/s450/2021-0822-191849.png&quot; title=&quot;2021-0822-191849.png&quot; alt=&quot;2021-0822-191849.png&quot; width=&quot;450&quot; height=&quot;308&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.asus.com/tw/Laptops/For-Students/Chromebook/ASUS-Chromebook-Detachable-CZ1-CZ1000/&quot;&gt;ASUS&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;
  &lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;ASUS Chromebook Detachable CZ1 (CZ1000)(以下簡稱CZ1000)&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;是ASUS在2021年8月推出的Chromebook新機型。10.1吋螢幕、含鍵盤及保護套後僅1公斤多的重量，以及內建觸控螢幕、USI觸控筆與可拆卸鍵盤的設計，完全就是主打教育市場的一項產品。
&lt;/p&gt;
&lt;p&gt;在日前經過疫情警戒的洗禮後，許多人開始逐漸重視數位學習的價值。而Chromebook核心的Chrome作業系統能夠提供快速、穩定的網頁瀏覽體驗。學生不僅可以使用&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;隨時隨地上網學習，它內建的前後雙向攝影機，也能讓學生立即參與線上課程的討論。&lt;/p&gt;
&lt;p&gt;在方便移動的同時，&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;還加入了橡膠防撞條、不留指紋與刮痕的3D質感飾面、以及織布造型的吸震立架保護套等設計。只要把保護套裝好，別說是稍微碰撞、擠壓這種程度，就連從1.5公尺的高度掉下、或是被15公斤重物壓著，&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;都能正常使用。這種MIL-STD 810H美國軍規級的堅固性與耐用性，也是我最喜歡ASUS Chromebook的一大原因呢。&lt;/p&gt;
&lt;p&gt;爲了方便學生用草稿發想創意與閱讀文件，&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;也內建了USI觸控筆功能。但比起其他Chromebook更便利的是，&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;用可收納凹槽設計來收納USI觸控筆，降低USI觸控筆弄丟的風險。而USI觸控筆需要供電的問題，&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;也在凹槽中加了充電設計，讓你收納USI觸控筆就能同時進行充電，充電15秒即可使用45分鐘，真是超級方便的設計啊！&lt;/p&gt;
&lt;p&gt;接下來，就讓我們繼續來看看&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;ASUS Chromebook Detachable CZ1 (CZ1000)&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;的各種細節吧。&lt;/p&gt;
&lt;h2&gt;規格 / Specification&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Dk3g15yd4UU/YTJQnDgY6hI/AAAAAAAFBa8/T310VQtMr_Mily3eMPlmPhcfuT-hfmDtACLcBGAsYHQ/s1600/20210903_222126_edited.jpeg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-Dk3g15yd4UU/YTJQnDgY6hI/AAAAAAAFBa8/T310VQtMr_Mily3eMPlmPhcfuT-hfmDtACLcBGAsYHQ/s450/20210903_222126_edited.jpeg&quot; title=&quot;20210903_222126_edited.jpeg&quot; alt=&quot;20210903_222126_edited.jpeg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的包裝相當迷你。打開箱子，可以看到&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的內容物如上面照片所示，有平板、鍵盤與保護套組成的&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;本體、電源、保固說明書。平板已經預先裝上了防震保護套與可拆卸的鍵盤，而平板右上角則已經收納了USI觸控筆。&lt;/p&gt;
&lt;p&gt;以下是&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;ASUS Chromebook Detachable CZ1 (CZ1000)&lt;/u&gt;&lt;/b&gt;規格：&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;table table-bordered&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;作業系統&lt;/td&gt;
      &lt;td&gt;Chrome OS (Chrome作業系統)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;處理器&lt;/td&gt;
      &lt;td&gt;MediaTek Kompanio 500 2.0 GHz (2M Cache, up to 2.0 GHz, 8 cores)&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;顯示晶片&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;Arm Mali-G72 MP3&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;螢幕&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;10.1 吋，WUXGA (1920 x 1200) 16:10,鏡面顯示器&lt;/li&gt;
          &lt;li&gt;亮度400 尼特&lt;/li&gt;
          &lt;li&gt;色彩sRGB：100%&lt;/li&gt;
          &lt;li&gt;螢幕占比68 ％&lt;/li&gt;
          &lt;li&gt;支援觸控螢幕、觸控筆&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;記憶體&lt;/td&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;內建4G LPDDR4X記憶體，最大4GB。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;儲存空間&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;128G eMMC (我這臺是128GB) 或 64G eMMC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;介面&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;USB Gen 2 Type-C 支援顯示/供電/充電 x1&lt;/li&gt;
          &lt;li&gt;3.5mm複合音源線插孔 x1&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;鍵盤及觸控板&lt;/td&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;軟式鍵盤&lt;/li&gt;
          &lt;li&gt;鍵程 1.5mm&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;攝影機&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;前鏡頭：2.0M&lt;/li&gt;
          &lt;li&gt;後鏡頭：8.0M&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;音效&lt;/td&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;內建雙聲道立體聲喇叭&lt;/li&gt;
          &lt;li&gt;內建麥克風&lt;/li&gt;
          &lt;li&gt;支援Google助理語音辨識&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;電池&lt;/td&gt;
      &lt;td&gt;27WHrs，1S2P，2 芯鋰離子&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;電源&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;ø4.0，45W AC 變壓器&lt;/li&gt;
          &lt;li&gt;輸出：19V DC，2.37A，45W&lt;/li&gt;
          &lt;li&gt;輸入：100~240V AC 50/60Hz 萬用&lt;/li&gt;
          &lt;li&gt;採用USB Type-C接孔充電&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;重量&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;平板本體：500g&lt;/li&gt;
          &lt;li&gt;鍵盤：250g&lt;/li&gt;
          &lt;li&gt;防震保護套：285g&lt;/li&gt;
          &lt;li&gt;整體重量：1035g&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;尺寸&lt;/td&gt;
      &lt;td&gt;寬25.64cm x 長16.82cm x 高0.9cm&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;耐用性軍規等級&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;US MIL-STD-810H 軍規級標準&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;特色功能 / Features&lt;/h2&gt;
&lt;p&gt;把玩&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的時候，有四個特色功能立刻吸引了我的目光。接下來就讓我們來看看&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的橡膠防撞條、可摺疊立架、可收納觸控筆、以及可拆卸鍵盤四個特色功能吧。&lt;/p&gt;
&lt;h3&gt;橡膠防撞條 /&amp;nbsp;Durable rubber trim&lt;/h3&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-892uFqR9x3g/YTJQnEVPWmI/AAAAAAAFBaw/lmlyPiV_jiQ32TQBLcFZ3K2_eLP95OOogCLcBGAsYHQ/s1600/20210903_215557_edited.jpeg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-892uFqR9x3g/YTJQnEVPWmI/AAAAAAAFBaw/lmlyPiV_jiQ32TQBLcFZ3K2_eLP95OOogCLcBGAsYHQ/s450/20210903_215557_edited.jpeg&quot; title=&quot;20210903_215557_edited.jpeg&quot; alt=&quot;20210903_215557_edited.jpeg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;&quot;&gt;要說我最喜歡&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的地方，可能就是它那達到&lt;/span&gt;&lt;u&gt;US MIL-STD-810H 軍規級標準&lt;/u&gt;的耐用性設計了。這個軍規級標準是美國國防部針對軍用產品設計的測試標準，確保電子產品能夠在極端環境下依然能夠保持相同性能。像&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;這種輕薄小巧的Chromebook，必然會有許多拿著移動、到處擺放的使用場景。而對我這種粗魯的使用者來說，普通的平板總是傷痕累累、殘破不堪。但符合&lt;u&gt;US MIL-STD-810H 軍規級標準&lt;/u&gt;等級的&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;，它的耐用性和堅固程度讓我很有信心。&lt;/p&gt;
&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;耐用性最直觀的設計就是平板機身邊緣與角落的&lt;u&gt;橡膠防撞條&lt;/u&gt;。橡膠防撞條是防震保護套上的側邊，質感相當止滑、好握。把&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;拿在手上時，橡膠防撞條可以降低手滑摔落的風險。而且我之前選擇&lt;a href=&quot;/2018/12/chromebook-getting-started-with.html#postcatachromebook-getting-started-with.html0_anchor3&quot;&gt;購買Chromebook時挑選了&lt;/a&gt;&lt;a href=&quot;/2018/12/chromebook-getting-started-with.html#postcatachromebook-getting-started-with.html0_anchor3&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;的主要理由，就是因爲這種耐用性設計，讓我相信它可以成爲我最可靠的戰友。&lt;/p&gt;
&lt;h3&gt;&lt;span style=&quot;font-weight: 700; color: inherit;&quot;&gt;可摺疊立架 / Flexible stand design&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-QYlnXQdyE5Q/YTJQnJFhtGI/AAAAAAAFBbA/RHhVhj_J1xA9yM4WNgf6kALnqkRpbEqMACLcBGAsYHQ/s1600/20210903_225636c_edited.jpeg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-QYlnXQdyE5Q/YTJQnJFhtGI/AAAAAAAFBbA/RHhVhj_J1xA9yM4WNgf6kALnqkRpbEqMACLcBGAsYHQ/s450/20210903_225636c_edited.jpeg&quot; title=&quot;20210903_225636c_edited.jpeg&quot; alt=&quot;20210903_225636c_edited.jpeg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;接著來看到&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;的&lt;u&gt;立架&lt;/u&gt;設計。&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;的&lt;u&gt;立架&lt;/u&gt;與防震保護套合爲一體。平時可摺疊起來，作爲保護套的一部分。在需要的時候則可以打開來，成爲平板的&lt;u&gt;立架&lt;/u&gt;。&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;的&lt;u&gt;立架&lt;/u&gt;是無段式設計，你可以依照自己的需求調整平板的角度。從上圖也可以看到，&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;的鍵盤具有ErgoLift設計，吸附在平板上的位置會使鍵盤稍微擡升6度，讓使用者打字的時候非常舒服。&lt;/p&gt;
&lt;h3&gt;可收納觸控筆 / Garaged USI stylus&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-mxbiYVF0GiI/YSIzc6w3wKI/AAAAAAAFBRE/9vjVk3cW3W07MKKXE055KWm73Fce4AJNgCLcBGAsYHQ/s1600/20210822_181300_edited.jpeg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-mxbiYVF0GiI/YSIzc6w3wKI/AAAAAAAFBRE/9vjVk3cW3W07MKKXE055KWm73Fce4AJNgCLcBGAsYHQ/s450/20210822_181300_edited.jpeg&quot; title=&quot;20210822_181300_edited.jpeg&quot; alt=&quot;20210822_181300_edited.jpeg&quot; width=&quot;367&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;內建了&lt;u&gt;USI觸控筆&lt;/u&gt;。這可不是電磁筆，而是主動式的&lt;u&gt;USI觸控筆&lt;/u&gt;。&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;在平板的右上角設計了&lt;u&gt;USI觸控筆&lt;/u&gt;的收納空間。需要使用&lt;u&gt;USI觸控筆&lt;/u&gt;的時候，只要從收納處後方「摳」一下就可以拉出&lt;u&gt;USI觸控筆&lt;/u&gt;。不使用的時候，把&lt;u&gt;USI觸控筆&lt;/u&gt;放入收納口，它就會流暢地滑入收納空間。
&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-rii0Q9Uvcyw/YSIzc7AVrlI/AAAAAAAFBRI/ikT9Tz5A024n9YP5YO0B8bAVMuAkFx6BQCLcBGAsYHQ/s1600/20210822_181746_edited.jpeg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-rii0Q9Uvcyw/YSIzc7AVrlI/AAAAAAAFBRI/ikT9Tz5A024n9YP5YO0B8bAVMuAkFx6BQCLcBGAsYHQ/s450/20210822_181746_edited.jpeg&quot; title=&quot;20210822_181746_edited.jpeg&quot; alt=&quot;20210822_181746_edited.jpeg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有人可能會問了：「&lt;u&gt;USI觸控筆&lt;/u&gt;不是要供電的嗎？它小小一隻筆，要怎麼放電池啊？」這你大可放心，&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;的&lt;u&gt;USI觸控筆&lt;/u&gt;採用了內建充電電池的設計。一次最多可以使用45分鐘。而上圖&lt;u&gt;USI觸控筆&lt;/u&gt;末端的金屬接點，就是&lt;u&gt;USI觸控筆&lt;/u&gt;在收納空間裡的充電接頭。平常把&lt;u&gt;USI觸控筆&lt;/u&gt;收納到&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;&lt;/font&gt;的時候，它就會自動進行快速充電。只要短短的15秒，最長即可使用45分鐘。當有立即的需求時，&lt;u&gt;USI觸控筆&lt;/u&gt;的快充功能就十分便利。&lt;/p&gt;
&lt;h3&gt;可拆卸鍵盤 / Detachable keyboard&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-pb39Yu34mG0/YTdVYx-m-JI/AAAAAAAFBf8/0fWsSyprE7wlEOeYLk5OK6nFoY5mHNc9wCLcBGAsYHQ/s1600/20210903_221743_edited.jpeg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-pb39Yu34mG0/YTdVYx-m-JI/AAAAAAAFBf8/0fWsSyprE7wlEOeYLk5OK6nFoY5mHNc9wCLcBGAsYHQ/s450/20210903_221743_edited.jpeg&quot; title=&quot;20210903_221743_edited.jpeg&quot; alt=&quot;20210903_221743_edited.jpeg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的&lt;u&gt;鍵盤&lt;/u&gt;採用了與大部分Chromebook相同的設計，並附有相當大的觸控板。用慣了Chromebook之後，真心覺得這種配置非常舒服啊。&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的&lt;u&gt;鍵盤&lt;/u&gt;可以作爲螢幕的保護蓋。把&lt;u&gt;鍵盤&lt;/u&gt;蓋到螢幕上，就可以避免放在包包裡面誤觸螢幕。由於&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;整體輕薄小巧的設計，&lt;u&gt;鍵盤&lt;/u&gt;本身也是走輕薄路線，鍵程僅有1.5mm。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-XMW0WHgeT8c/YSIzbNYp76I/AAAAAAAFBQ4/PqKGFxmEJNUSacXoTN9xjDX0LgVQld1wQCLcBGAsYHQ/s1600/20210822_180656_1.jpg&quot;&gt;&amp;nbsp;&lt;img src=&quot;//lh3.googleusercontent.com/-XMW0WHgeT8c/YSIzbNYp76I/AAAAAAAFBQ4/PqKGFxmEJNUSacXoTN9xjDX0LgVQld1wQCLcBGAsYHQ/s450/20210822_180656_1.jpg&quot; title=&quot;20210822_180656.jpg&quot; alt=&quot;20210822_180656.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的&lt;u&gt;鍵盤&lt;/u&gt;採用了可拆卸的磁吸設計。&lt;u&gt;鍵盤&lt;/u&gt;與平板採用了5個金屬節點連接，並透過兩條磁鐵來將&lt;u&gt;鍵盤&lt;/u&gt;吸附在平板上。隨著&lt;u&gt;鍵盤&lt;/u&gt;是否裝在&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;上的不同，Chrome作業系統的操作邏輯也會隨之改變。也就是說，在裝上&lt;u&gt;鍵盤&lt;/u&gt;的時候，Chrome作業系統會採用筆電模式。畫面會顯示較多資訊，也預設使用者會以&lt;u&gt;鍵盤&lt;/u&gt;和觸控板來操作多個浮動視窗。如果將&lt;u&gt;鍵盤&lt;/u&gt;拆下，Chrome作業系統會採用平板模式。此時平板的畫面偏向以全螢幕顯示現在操作應用程式，並預設使用者會以手勢操作Chrome作業系統。&lt;/p&gt;
&lt;h3&gt;3D質感飾面 / Durable 3D-textured finish&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-DJLzNeZBnns/YTJQnCFOfAI/AAAAAAAFBa0/B0hHD_tjtAcWSGyO2M1Du8BqRwI2VACcQCLcBGAsYHQ/s1600/20210903_215804_edited.jpeg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-DJLzNeZBnns/YTJQnCFOfAI/AAAAAAAFBa0/B0hHD_tjtAcWSGyO2M1Du8BqRwI2VACcQCLcBGAsYHQ/s450/20210903_215804_edited.jpeg&quot; title=&quot;20210903_215804_edited.jpeg&quot; alt=&quot;20210903_215804_edited.jpeg&quot; width=&quot;450&quot; height=&quot;377&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;拿掉&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的防震保護套與可拆卸鍵盤後，即可將重量僅有500克的&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;當做平板直接使用。Chromebook近年的改版大幅強化了平板模式的操作功能，我們可以用各種方便的手勢來呼叫啓動器(launcher)或切換視窗，就算不接鍵盤滑鼠也能輕鬆操作&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-2Pc283TpO1E/YTdVY4KumUI/AAAAAAAFBgA/o-KaJw6GoG4fp0f9CuaIRJg5pfqSZCGfACLcBGAsYHQ/s1600/20210907_192924.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-2Pc283TpO1E/YTdVY4KumUI/AAAAAAAFBgA/o-KaJw6GoG4fp0f9CuaIRJg5pfqSZCGfACLcBGAsYHQ/s450/20210907_192924.jpg&quot; title=&quot;20210907_192924.jpg&quot; alt=&quot;20210907_192924.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的平板本體也另有玄機喔！仔細看看&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的背後，那個&lt;u&gt;3D質感飾面&lt;/u&gt;兼具了止滑和不沾指紋的功能，讓人能夠安心地放在手上使用。而且，就算我們把&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;放在桌面上操作，因爲&lt;u&gt;3D質感飾面&lt;/u&gt;的保護，即使&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;跟桌面摩擦也不會有刮痕喔。&lt;/p&gt;
&lt;p&gt;在&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;本體500克的平板上，裝上了防震保護套、可拆卸鍵盤後，就成爲一台打開可以立起來當筆電、拆掉鍵盤可以拿著當平板、摺疊後又有完整保護套的最佳戰友。下面我們直接用影片來看看&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;收納與開啓的轉換，是不是非常簡單易用呢？&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;iframe frameborder=&quot;0&quot; src=&quot;https://www.youtube.com/embed/41EPIR4XkHg&quot; width=&quot;640&quot; height=&quot;360&quot; class=&quot;note-video-clip&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;&lt;iframe frameborder=&quot;0&quot; src=&quot;https://www.youtube.com/embed/Ha1cCyjyneU&quot; width=&quot;640&quot; height=&quot;360&quot; class=&quot;note-video-clip&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;實機體驗 /&amp;nbsp;Experience&lt;/h2&gt;
&lt;p&gt;在瞭解&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的特色功能之後，接下來就讓我們來看看&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的各種使用場景吧。&lt;/p&gt;
&lt;h3&gt;學習與辦公 / Learning and working&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-UIBSCpp0Lkc/YTJQqrPFtPI/AAAAAAAFBbQ/OA5r2UnN9kokzQTbCTmqBP2BtvIlyV4GgCLcBGAsYHQ/s1600/20210903_222356_edited2.jpeg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-UIBSCpp0Lkc/YTJQqrPFtPI/AAAAAAAFBbQ/OA5r2UnN9kokzQTbCTmqBP2BtvIlyV4GgCLcBGAsYHQ/s450/20210903_222356_edited2.jpeg&quot; title=&quot;20210903_222356_edited2.jpeg&quot; alt=&quot;20210903_222356_edited2.jpeg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;在上課作筆記、同學間討論或是開會做記錄的時候，具有鍵盤和USI觸控筆的&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;都非常好用。我們可以使用&lt;a href=&quot;https://keep.google.com/u/0/&quot;&gt;Google Keep&lt;/a&gt;的繪圖記事，用USI觸控筆快速記下老師講課的重點，或是把會議上的討論的內容記錄下來。也可以將與同學或同事討論的內容繪製成草稿，將抽象的概念描繪成具體的畫面。再搭配&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;方便的鍵盤輸入，就能把講課筆記和討論結果，好好地記錄與保存下來。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-A4msTSqfGzA/YSIzaw8q_VI/AAAAAAAFBQ0/DfWv0ZbbwPgPH7vr3nYynwTwMThGLT-bACLcBGAsYHQ/s1600/20210822_190959_edited_edited.jpeg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-A4msTSqfGzA/YSIzaw8q_VI/AAAAAAAFBQ0/DfWv0ZbbwPgPH7vr3nYynwTwMThGLT-bACLcBGAsYHQ/s450/20210822_190959_edited_edited.jpeg&quot; title=&quot;20210822_190959_edited_edited.jpeg&quot; alt=&quot;20210822_190959_edited_edited.jpeg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的USI觸控筆在閱讀文件時，也可以搭配在Google Play商店安裝Android應用程式一起使用。其中我最喜歡的&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.xodo.pdf.reader&amp;amp;hl=zh_TW&amp;amp;gl=US&quot;&gt;PDF閱讀器Xodo PDF Reader &amp;amp; Editor&lt;/a&gt;就有支援觸控筆的功能。在搭配觸控筆使用的時候，手指操作是選取和移動文件，而觸控筆則可以直接在PDF文件上繪圖註記。從認知心理學的觀點來看，在文件上註記可說是一種確認你正在學習內容的主動學習活動，這樣小小的動作會幫助你加深學習的印象、提高你的學習成效喔。&lt;/p&gt;
&lt;h3&gt;記錄與描物 / Photo and draw&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-5Jpc4l4bUIU/YSIzaxh0jlI/AAAAAAAFBQw/t1C3XZNzbI4Nhy9m30Y6PCuChiGDBX9dgCLcBGAsYHQ/s1600/20210822_154651_edited.jpeg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-5Jpc4l4bUIU/YSIzaxh0jlI/AAAAAAAFBQw/t1C3XZNzbI4Nhy9m30Y6PCuChiGDBX9dgCLcBGAsYHQ/s450/20210822_154651_edited.jpeg&quot; title=&quot;20210822_154651_edited.jpeg&quot; alt=&quot;20210822_154651_edited.jpeg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;輕薄小巧的尺寸與重量，以及它內建了800萬像素後鏡頭與USI觸控筆的功能，這些特色加在一起，就讓我們可以用它拍照記錄，並且用拍照的圖片來繪圖。首先，先讓我們拆掉鍵盤，用平板模式來到外面拍張照吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-czwVeetsfoY/YSIza96yQiI/AAAAAAAFBQs/ZX283icDwDMAxz-XWBu1KnY8wZ9WdDskACLcBGAsYHQ/s1600/20210822_181652_edited.jpeg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-czwVeetsfoY/YSIza96yQiI/AAAAAAAFBQs/ZX283icDwDMAxz-XWBu1KnY8wZ9WdDskACLcBGAsYHQ/s450/20210822_181652_edited.jpeg&quot; title=&quot;20210822_181652_edited.jpeg&quot; alt=&quot;20210822_181652_edited.jpeg&quot; width=&quot;450&quot; height=&quot;339.5&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著我們可以在&lt;a href=&quot;https://play.google.com/store/apps/details?id=jp.ne.ibis.ibispaintx.app&amp;amp;hl=zh_TW&amp;amp;gl=US&quot;&gt;愛筆思画 X&lt;/a&gt;中，把剛剛拍下來的照片作爲底圖，使用USI觸控筆來描繪照片中的內容。這樣的搭配操作，是不是能夠激發你更多的創作靈感呢？&lt;/p&gt;
&lt;h3&gt;休閒 / Leisure&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-6yEk9Akejoo/YSIO-2aPbjI/AAAAAAAFBP0/VVf_fbGsE5IDYmrMesSGBTmzEmMFhxm_QCLcBGAsYHQ/s1600/20210822_160325b.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-6yEk9Akejoo/YSIO-2aPbjI/AAAAAAAFBP0/VVf_fbGsE5IDYmrMesSGBTmzEmMFhxm_QCLcBGAsYHQ/s450/20210822_160325b.jpg&quot; title=&quot;20210822_160325b.jpg&quot; alt=&quot;20210822_160325b.jpg&quot; width=&quot;450&quot; height=&quot;310&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;認真學習與工作之餘，我們也能把&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;當做追劇神器，看個影片讓自己充個電，好讓自己走得更遠。&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;採用了ARM架構，搭配2 芯鋰離子的電池。根據ASUS的統計，在顯示器預設高於80尼特的亮度下，最高可以連續播放11個小時的本機影片。&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-9YFCQIreRg4/YTdVYPlAoGI/AAAAAAAFBf4/hfensbGfDkAmAwQrlQlYLvmObZddhjNTACLcBGAsYHQ/s1600/IMG_20210907_194942_copy__edited.jpeg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-9YFCQIreRg4/YTdVYPlAoGI/AAAAAAAFBf4/hfensbGfDkAmAwQrlQlYLvmObZddhjNTACLcBGAsYHQ/s450/IMG_20210907_194942_copy__edited.jpeg&quot; title=&quot;IMG_20210907_194942_copy__edited.jpeg&quot; alt=&quot;IMG_20210907_194942_copy__edited.jpeg&quot; width=&quot;450&quot; height=&quot;301&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;是能夠滿足個人的休閒影音裝置，拿來玩遊戲當然也是沒問題的囉。身爲Chromebook，&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;支援了Google Play商店裡海量的Android遊戲。它的所擁有的128GB龐大儲存空間，讓你可以安心安裝各種遊戲。不論是在國產優質&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.rayark.cytus2&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Ctyus II&lt;/a&gt;上玩場音樂節奏遊戲，或是在&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.gameloft.android.ANMP.GloftA9HM&quot;&gt;狂野飆車9&lt;/a&gt;裡面開著跑車盡情奔馳，&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;的10.1吋觸控螢幕都能給你帶來小螢幕手機無法達到的樂趣！不過還是要提醒大家，在玩到&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;沒電之前，要記得適時地讓眼睛休息一下喔。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-enGp6hTkePk/YSIO-yRNUnI/AAAAAAAFBPw/1EKNyTF9rnASc9V-spbOCWXoeTdwL-SjwCLcBGAsYHQ/s1600/IMG_20210822_161058b.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-enGp6hTkePk/YSIO-yRNUnI/AAAAAAAFBPw/1EKNyTF9rnASc9V-spbOCWXoeTdwL-SjwCLcBGAsYHQ/s450/IMG_20210822_161058b.jpg&quot; title=&quot;IMG_20210822_161058b.jpg&quot; alt=&quot;IMG_20210822_161058b.jpg&quot; width=&quot;450&quot; height=&quot;376.984&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;在拿著&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;CZ1000&lt;/u&gt;&lt;/b&gt;看影片時，我特別喜歡把手指架在摺疊立架張開時的夾角上。這樣子我就可以不用「握著」平板，而是可以「架住」平板，輕鬆觀看影片囉。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;購買方式 / Where to buy&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-pi5Q0aQUEYs/YSIza1jdJoI/AAAAAAAFBQk/d-0MuxbwtrEmw9yT64InQHc35AgnZzreACLcBGAsYHQ/s1600/2021-0822-192104.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-pi5Q0aQUEYs/YSIza1jdJoI/AAAAAAAFBQk/d-0MuxbwtrEmw9yT64InQHc35AgnZzreACLcBGAsYHQ/s450/2021-0822-192104.png&quot; title=&quot;2021-0822-192104.png&quot; alt=&quot;2021-0822-192104.png&quot; width=&quot;450&quot; height=&quot;277.328&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://store.asus.com/tw/item/202107DM290000019&quot;&gt;ASUS商店&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;ASUS&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;Chromebook Detachable CZ1 (CZ1000)&lt;/span&gt;現在已經在ASUS的線上商店上架。目前建議售價是臺幣10,990元；而64GB eMMC版本售價為9,990元臺幣。以一台10.1吋的平板，有可摺疊支架、可收納觸控筆與可拆卸鍵盤等多種好用的功能，居然只賣這樣平實的價錢，真是出乎我意料之外。看來ASUS把&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;ASUS&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;Chromebook Detachable CZ1&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;(CZ1000)&lt;/span&gt;主打爲「堅固、靈活、學習良伴」的口號，的確是貨真價實的呢！&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;ASUS&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;Chromebook Detachable CZ1&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;(CZ1000)&lt;/span&gt;的購買連結如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;128GB eMMC：&lt;a href=&quot;https://store.asus.com/tw/item/202107DM290000019&quot;&gt;https://store.asus.com/tw/item/202107DM290000019&amp;nbsp;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
  &lt;li&gt;64GB eMMC：&lt;a href=&quot;https://store.asus.com/tw/item/202107DM290000018&quot;&gt;https://store.asus.com/tw/item/202107DM290000018&lt;/a&gt;&lt;/li&gt;
  &amp;nbsp;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-GXUCOTYTQ6o/YTJQqrf-IkI/AAAAAAAFBbE/ymk7i-9gBII5XEzTGtHUMOT_uKP_IDq2QCLcBGAsYHQ/s1600/inCollage_20210904_004111138.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-GXUCOTYTQ6o/YTJQqrf-IkI/AAAAAAAFBbE/ymk7i-9gBII5XEzTGtHUMOT_uKP_IDq2QCLcBGAsYHQ/s450/inCollage_20210904_004111138.jpg&quot; title=&quot;inCollage_20210904_004111138.jpg&quot; alt=&quot;inCollage_20210904_004111138.jpg&quot; width=&quot;450&quot; height=&quot;450&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;ASUS&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;Chromebook Detachable CZ1 (CZ1000)&lt;/span&gt;以10.1吋螢幕的尺寸和1公斤的重量，搭配了內建觸控螢幕、USI觸控筆與可拆卸鍵盤等多種特色功能，又具有耐摔與耐撞的軍規級耐用性，可說是重新定義了Chromebook在教育市場的標杆。而除了學習應用外，輕薄小巧的機身不僅方便攜帶，又可配合使用情景在筆電或平板等不同模式來轉換操作，以及搭配上Chromebook雲端作業的特性，作為隨身攜帶的辦公機種，也可說是非常適合。透過觸控筆來記錄學習和會議筆記，或是在團隊討論時以流程草圖進行溝通，都能大幅提升學習成效和團隊合作效率。同時滿足個人休閒影音、遊戲的娛樂應用，這樣多功能的&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;ASUS&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;Chromebook Detachable CZ1 (CZ1000)&lt;/span&gt;，居然可以不用萬元的價格就能買到，真讓我這個之前購買了&lt;a href=&quot;/2018/12/chromebook-getting-started-with.html#postcatachromebook-getting-started-with.html0_anchor3&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;的使用者不禁感嘆，科技真是一直以驚人的速度進步啊！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次對於&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;ASUS&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;Chromebook Detachable CZ1&lt;/span&gt;的介紹就到這裡了。寫到最後，我來調查一下大家對於學習用筆電的看法：&lt;/p&gt;
&lt;p&gt;&lt;b&gt;在學校上課時，&lt;/b&gt;&lt;b&gt;你&lt;/b&gt;&lt;b&gt;都用什麼電子設備來幫助你學習呢？&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;A. 手機&lt;/b&gt;：輕巧容易攜帶，而且我本來就拿著手機了。&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;B. 平板&lt;/b&gt;：大螢幕方便查看文件，視訊上課也比較容易看到老師的畫面。&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;C. 筆電&lt;/b&gt;：我需要完整功能的電腦來應付課堂作業，而且有鍵盤才方便撰寫報告。&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;D. 其他&lt;/b&gt;：我有更好的學習神器可以跟大家分享。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在&lt;a href=&quot;#comment-editor&quot;&gt;下面的留言處&lt;/a&gt;跟大家分享你的想法。你的意見都是我繼續分享的動力喔！&lt;/p&gt;
&lt;p&gt;如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚，或是將這篇分享到Facebook等社群媒體吧！想在社群媒體追蹤我的話，歡迎到我的Facebook粉絲專頁「&lt;a href=&quot;https://www.facebook.com/pulipuli.blogspot&quot; target=&quot;FB&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;」按個讚喔！&lt;/p&gt;
&lt;p&gt;不知道這篇文章有沒有讓你吃到什麼有趣的東西呢？我是布丁，期待下次見！&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/2669184128743285712/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2021/09/the-best-learning-partner-asus-chromebook-detachable-cz1.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/2669184128743285712'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/2669184128743285712'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2021/09/the-best-learning-partner-asus-chromebook-detachable-cz1.html' title='課堂學習的最佳Chromebook：ASUS Chromebook Detachable CZ1 / The Best Learning partner: ASUS Chromebook Detachable CZ1'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//lh3.googleusercontent.com/-n62j8tq-PiU/YTJQnKPYspI/AAAAAAAFBas/eqQI01PExPkMmX2R8BDoLaGDIrSylpYBgCLcBGAsYHQ/s72-c/4-cover-Chromebook_ASUS_Chromebook_Detachable.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-3850955289909884546</id><published>2021-08-28T02:14:00.004+08:00</published><updated>2021-08-28T02:16:34.325+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Linux/WINE"/><category scheme="http://www.blogger.com/atom/ns#" term="Software/Notepad++"/><category scheme="http://www.blogger.com/atom/ns#" term="Software/Windows"/><title type='text'>釋放Notepad++黑暗力量：開啓黑暗模式 / How to Enable Dark Mode in Notepad++ 8</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-UaYamksy8ug/YSkqq_LqRWI/AAAAAAAFBW0/0FcovU7wA_08lAE2qTuBX20NQQy0phIFwCLcBGAsYHQ/s1600/5-cover-Notepad_How_to_enable_the_Dark_Mode.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-UaYamksy8ug/YSkqq_LqRWI/AAAAAAAFBW0/0FcovU7wA_08lAE2qTuBX20NQQy0phIFwCLcBGAsYHQ/s1600/5-cover-Notepad_How_to_enable_the_Dark_Mode.png&quot; title=&quot;5-cover-Notepad_How_to_enable_the_Dark_Mode.png&quot; alt=&quot;5-cover-Notepad_How_to_enable_the_Dark_Mode.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;哈囉，大家最近在吃什麼呢？這裡是努力讓藍牙耳機配對到Linux電腦上的布丁。&lt;/p&gt;
&lt;p&gt;程式開發者爲了閱讀以文字爲主的大量程式碼，通常偏好將程式編輯器改成偏暗的黑暗模式，可以讓閱讀程式的時候舒服許多。知名的Windows專用軟體&lt;a href=&quot;https://notepad-plus-plus.org/&quot;&gt;Notepad++&lt;/a&gt;是程式開發者不可或缺的編輯器。早期Notepad++必須&lt;a href=&quot;https://murphymind.blogspot.com/2019/12/notepad-dark-theme.html&quot;&gt;設定主題來啓用黑暗模式&lt;/a&gt;。在2021年發佈的&lt;a href=&quot;https://notepad-plus-plus.org/downloads/v8/&quot;&gt;8.0版本&lt;/a&gt;，Notepad++直接加入了黑暗模式(Dark Mode)，設定起來更加直覺了。&lt;/p&gt;
&lt;p&gt;接下來就讓我們來看看，怎麼在Notepad++裡面開啓黑暗模式吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;不過，在文章開始之前，我們還是先來個沒工商版面吧。&lt;/p&gt;
&lt;h2&gt;沒工商版面：神族H2領夾式藍牙音樂接收器 / SAMZU Bluetooth Headset&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-0Bbh-ZuzV4I/YSkqq6Lg6YI/AAAAAAAFBWw/oSX5OIMCIWcqsIKx6oAx54ju6lgsSqdUgCLcBGAsYHQ/s1600/2017-09-08_220250_2_.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-0Bbh-ZuzV4I/YSkqq6Lg6YI/AAAAAAAFBWw/oSX5OIMCIWcqsIKx6oAx54ju6lgsSqdUgCLcBGAsYHQ/s450/2017-09-08_220250_2_.jpg&quot; title=&quot;2017-09-08_220250_2_.jpg&quot; alt=&quot;2017-09-08_220250_2_.jpg&quot; width=&quot;450&quot; height=&quot;225&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(照片來源：&lt;a href=&quot;/2017/09/android-how-to-solve-bluetooth-randomly.html&quot; target=&quot;_blank&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;最近我想把桌上型電腦的有線耳機改爲走藍牙的無線耳機。測試了多款藍牙耳機後，沒想到我在4年前使用的&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;居然能夠在&lt;a href=&quot;https://www.wikiwand.com/zh-tw/Manjaro_Linux&quot; target=&quot;_blank&quot;&gt;Manjaro Linux&lt;/a&gt;裡正常使用！既然它讓我如此驚豔，那這次沒工商版面就非&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;莫屬啦。&lt;/p&gt;
&lt;p&gt;聽音樂已經是現代人相當常見的休閒娛樂。而每位喜歡聽音樂的人，大多都有自己偏好的耳機機型。不過，大部分的耳機仍然是需要透過3.5mm AUX音源線的有線耳機。如果你想要邁向無線的自由，那最簡單的方式，就是使用藍牙音頻接收器，例如這臺&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;在使用多臺藍牙音樂接收器之後，我發現&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;的大小、操作手感、電力續航力、以及相容性上都有不錯的表現。跟其他迷你到容易弄丟的藍牙耳機不同，&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;適中的大小配有相當容易操作的&lt;u&gt;控制圓盤&lt;/u&gt;。我可以用手指輕易地開機、關機、調整音量大小聲、以及進行歌曲的切換。我特別喜歡&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;背後的&lt;u&gt;大領夾&lt;/u&gt;，可以讓我輕鬆別在領口或口袋上。此外，&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;的&lt;u&gt;大電池&lt;/u&gt;足以讓你連續播放20小時的音樂。最後，沒想到我在2017年買的&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;，儘管只有藍牙4.1版本，到2021年的現在還能在電腦上用A2DP播放立體音，可見&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;的&lt;u&gt;藍牙晶片相容性&lt;/u&gt;很不錯。&lt;/p&gt;
&lt;p&gt;綜合以上所述，&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;讓我喜愛的三大特色如下：&lt;br&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;適中的大小所具備的控制圓盤和大領夾。&lt;/li&gt;
  &lt;li&gt;長效電池支撐長時間的音樂播放，而且多年後仍然可用。&lt;/li&gt;
  &lt;li&gt;相容性很不錯的藍牙晶片，可適用於手機與桌機。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;現今&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;神族H2藍牙音樂接收器&lt;/span&gt;已經沒有在市面上販售，不過藍牙音樂接收器這種特別的設備仍然存在於3C市場的一隅。如果你也想讓心愛的有線耳機用藍牙無線來聆聽手機音樂，或是跟我一樣只是單純想讓桌機的有線耳機轉爲無線的話，不妨也可以試試其他藍牙音樂接受器。如果你也用過型藍牙音樂接收器設備的話，歡迎&lt;a href=&quot;#comment-form-iframe&quot;&gt;在下面留個言&lt;/a&gt;，分享一下你的使用經驗吧。喔、對了，&lt;u&gt;我不建議買500元以下太便宜的款式，不然恐怕會有相容性問題喔。&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;好的，讓我們結束沒工商版面，回到今天要講的主題吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;關於Notepad++ / Introduce Notepad++&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-RCpdB-tBbSM/YSkDfUdIL2I/AAAAAAAFBU4/ux3EQwmpXNADZdEUje4pJxbE_8dQS6IKACLcBGAsYHQ/s1600/notepad-plus-plus.org__iPad_.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-RCpdB-tBbSM/YSkDfUdIL2I/AAAAAAAFBU4/ux3EQwmpXNADZdEUje4pJxbE_8dQS6IKACLcBGAsYHQ/s450/notepad-plus-plus.org__iPad_.png&quot; title=&quot;notepad-plus-plus.org__iPad_.png&quot; alt=&quot;notepad-plus-plus.org__iPad_.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://notepad-plus-plus.org/&quot;&gt;Notepad++&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Notepad++是一個原始碼編輯器的自由軟體。它作爲Windows記事本(Notepad)的替代品，支援許多不同的程式語言。Notepad++在Microsoft Windows環境下運作，採用&lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0.html&quot;&gt;GNU授權&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我以前多次介紹Notepad++的相關使用方式，例如：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/2016/12/utf-8notepad-how-to-convert-plain-text.html&quot;&gt;如何把純文字檔案轉換成UTF-8格式：使用Notepad++&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2019/10/notepad-how-to-merge-plain-files-in.html&quot;&gt;如何合併多個純文字檔案並加上換行：使用Notepad++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Linux中的Notepad++ / Notepad++ in Linux&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Ck9Vnh_SuNo/YSkEGQkkv0I/AAAAAAAFBVQ/GhdE5npNfkQBiftrfXbipnNeMOCSR3HlwCLcBGAsYHQ/s1600/snapcraft.io_notepad-plus-plus_iPad.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Ck9Vnh_SuNo/YSkEGQkkv0I/AAAAAAAFBVQ/GhdE5npNfkQBiftrfXbipnNeMOCSR3HlwCLcBGAsYHQ/s450/snapcraft.io_notepad-plus-plus_iPad.png&quot; title=&quot;snapcraft.io_notepad-plus-plus_iPad.png&quot; alt=&quot;snapcraft.io_notepad-plus-plus_iPad.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://snapcraft.io/notepad-plus-plus&quot;&gt;snapscraft&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;有趣的是，本來是在Windows環境運作的Notepad++，因爲它既小巧又好用，就連Linux的使用者也想用Notepad++。一般來說，我們可以在Linux環境下使用WINE來開啓Notepad++。從&lt;a href=&quot;https://appdb.winehq.org/objectManager.php?sClass=application&amp;amp;iId=2983&quot;&gt;WINE HQ的應用程式資料庫&lt;/a&gt;來看，Notepad++ 7.x版本的支援度達到了&lt;a href=&quot;https://wiki.winehq.org/AppDB_Rating_Definitions&quot;&gt;銀牌等級(Silver)&lt;/a&gt;，表示大部分時候都能正常使用。如果你的Linux發佈版支援Snap的話，那可以直接安裝&lt;a href=&quot;https://snapcraft.io/notepad-plus-plus&quot;&gt;Notepad-Plus-Plus (WINE)&lt;/a&gt;，以Snap應用程式直接開啓。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-cTxYph2hzbw/YSkDfdotbCI/AAAAAAAFBU8/YKwWhH9ILP04q4w1XX9440fY2efv3l4pQCLcBGAsYHQ/s1600/notepadqq.com_s__iPad_.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-cTxYph2hzbw/YSkDfdotbCI/AAAAAAAFBU8/YKwWhH9ILP04q4w1XX9440fY2efv3l4pQCLcBGAsYHQ/s450/notepadqq.com_s__iPad_.png&quot; title=&quot;notepadqq.com_s__iPad_.png&quot; alt=&quot;notepadqq.com_s__iPad_.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://notepadqq.com/s/&quot;&gt;Notepadqq&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;上述在Linux裡使用的Notepad++都還是要配合WINE才能使用。&lt;a href=&quot;https://notepadqq.com/wp/members/&quot;&gt;danieleds&lt;/a&gt;等人便發起了在Linux環境中實作Notepad++功能的專案，它的名字就是&lt;a href=&quot;https://notepadqq.com/s/&quot;&gt;Notepadqq&lt;/a&gt;。Notepadqq一樣是開放原始碼的自由軟體，原始碼保存在&lt;a href=&quot;https://github.com/notepadqq/notepadqq&quot;&gt;GitHub&lt;/a&gt;中。Magic Len的「&lt;a href=&quot;https://magiclen.org/notepadqq/&quot;&gt;Linux上的Notepad++──Notepadqq&lt;/a&gt;」這篇文章介紹了Notepadqq的安裝及改變主題的方法，看起來的確是不輸Notepad++呢。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-gzSSkf-M2mA/YSkDfbli5JI/AAAAAAAFBVA/0irAlbStAhgTJ0ymhbg8zFZTJxrFe5SIACLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210827224029.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-gzSSkf-M2mA/YSkDfbli5JI/AAAAAAAFBVA/0irAlbStAhgTJ0ymhbg8zFZTJxrFe5SIACLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210827224029.png&quot; title=&quot;DeepinScreenshot_select-area_20210827224029.png&quot; alt=&quot;DeepinScreenshot_select-area_20210827224029.png&quot; width=&quot;450&quot; height=&quot;287&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;話說回來，我們這篇的主題還是要講Notepad++。由於我現在已經幾乎只用Chromebook和Linux桌面環境來工作，這篇介紹的Notepad++是從&lt;a href=&quot;https://www.inote.tw/notepad-plus-plus&quot;&gt;海芋小站「[下載] NotePad++ Portable 8.1.3 中文可攜免安裝版 ~ 超好用的程式編輯軟體」&lt;/a&gt;下載而來的Notepad++ 8.1.3版本，再直接使用WINE開啓notepad++.exe來執行。這個WINE是以Windows XP爲模擬對象，所以Notepad++的介面看起來有點復古。不過整個功能看起來還是挺正常的，就讓我們用透過WINE開啓的Notepad++ 8.1.3來介紹，看看要如何開啓黑暗模式吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;在Notepad++開啓黑暗模式 / Enable the Dark Mode in Notepad++&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-QSe2kycaXj4/YSkUGxhVSxI/AAAAAAAFBVo/pdsTHAvdPvkBVH6gXjaSUj0RCCeHbAUkACLcBGAsYHQ/s1600/2021-0827-235335.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-QSe2kycaXj4/YSkUGxhVSxI/AAAAAAAFBVo/pdsTHAvdPvkBVH6gXjaSUj0RCCeHbAUkACLcBGAsYHQ/s450/2021-0827-235335.png&quot; title=&quot;2021-0827-235335.png&quot; alt=&quot;2021-0827-235335.png&quot; width=&quot;450&quot; height=&quot;287&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所謂的「黑暗模式」(Dark Mode)，是指將編輯器的佈景主題從白底、暗字的色調改成暗底、亮字的色調。以往Notepad++的黑暗模式是要透過「設定程式語言格式…」(Style Configurator...)的「主題選取」(Select theme)來調整，做法可以參考Murphy的書房所寫的「&lt;a href=&quot;https://myshare.url.com.tw/note/1865091&quot;&gt;如何在 Notepad++ 啟用「黑暗模式」 (dark theme)&lt;/a&gt;」。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://notepad-plus-plus.org/downloads/v8/&quot;&gt;Notepad++ 8.0&lt;/a&gt;之後，黑暗模式(Dark Mode)已經被直接加入設定(Settings)之中，我們可以用更簡單的方式啓用黑暗模式。以下我就用Notepad++ 8.1.3爲例子，說明如何操作吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-1S_9zjDpzd8/YSkUG449DfI/AAAAAAAFBVc/eCQhEloOTjsb3OzCesDnImrRSfAiqi7nwCLcBGAsYHQ/s1600/2021-0827-233336.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-1S_9zjDpzd8/YSkUG449DfI/AAAAAAAFBVc/eCQhEloOTjsb3OzCesDnImrRSfAiqi7nwCLcBGAsYHQ/s450/2021-0827-233336.png&quot; title=&quot;2021-0827-233336.png&quot; alt=&quot;2021-0827-233336.png&quot; width=&quot;450&quot; height=&quot;197&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在Notepad++開啓後，我們打開選單欄中的「設定」(Settings)，進入「偏好設定」(Preferences...)。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-c3YTXO0C7kU/YSkUG4WOa3I/AAAAAAAFBVg/2BnKQZxxYxMBTfZ8sHh-bSHGtN_WV3OzACLcBGAsYHQ/s1600/2021-0827-233542.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-c3YTXO0C7kU/YSkUG4WOa3I/AAAAAAAFBVg/2BnKQZxxYxMBTfZ8sHh-bSHGtN_WV3OzACLcBGAsYHQ/s450/2021-0827-233542.png&quot; title=&quot;2021-0827-233542.png&quot; alt=&quot;2021-0827-233542.png&quot; width=&quot;450&quot; height=&quot;253.125&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在偏好設定視窗中，進入左邊的「黑暗模式」(Dark Mode)，然後把「啓動黑暗模式」(Enable dark mode)勾選起來。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-2-JwrYkgWDU/YSkUG8rB_YI/AAAAAAAFBVY/j3HDzJuoViYBWTh5gsyNtC4eH7mJKH9BQCLcBGAsYHQ/s1600/2021-0828-001324.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-2-JwrYkgWDU/YSkUG8rB_YI/AAAAAAAFBVY/j3HDzJuoViYBWTh5gsyNtC4eH7mJKH9BQCLcBGAsYHQ/s450/2021-0828-001324.png&quot; title=&quot;2021-0828-001324.png&quot; alt=&quot;2021-0828-001324.png&quot; width=&quot;450&quot; height=&quot;252&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候可以看到整個Notepad++採用了「黑色調」的主題。程式碼從原本的白底、暗字的色調變成暗底、亮字的色調。讓我們先按下「儲存並關閉」(Close)，回到Notepad++的主視窗。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-v6BJZYP_4N8/YSkUG9h_q7I/AAAAAAAFBVk/Ye8-mNWxc6k-6AupaffZ1Ml_R3HATB58wCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210827233730.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-v6BJZYP_4N8/YSkUG9h_q7I/AAAAAAAFBVk/Ye8-mNWxc6k-6AupaffZ1Ml_R3HATB58wCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210827233730.png&quot; title=&quot;DeepinScreenshot_select-area_20210827233730.png&quot; alt=&quot;DeepinScreenshot_select-area_20210827233730.png&quot; width=&quot;450&quot; height=&quot;287&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打開XML程式碼來看看，總覺得背景還是有點亮。讓我們再把它調得更暗一些吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-KAsTdRpL27o/YSkUG9L95QI/AAAAAAAFBVs/6HPWbe7pxAsba6hrm5BzXJW_buyz-d2FACLcBGAsYHQ/s1600/2021-0827-233902.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-KAsTdRpL27o/YSkUG9L95QI/AAAAAAAFBVs/6HPWbe7pxAsba6hrm5BzXJW_buyz-d2FACLcBGAsYHQ/s450/2021-0827-233902.png&quot; title=&quot;2021-0827-233902.png&quot; alt=&quot;2021-0827-233902.png&quot; width=&quot;450&quot; height=&quot;160&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打開選單欄中的「設定」(Settings)，進入「語法樣式配置器...」(Style Configurator...)。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-zgCAItxGOhI/YSkULYNgGkI/AAAAAAAFBWE/p1Q4WO8qyqw1Tj_l46ElP4T7cpot8Vx7ACLcBGAsYHQ/s1600/2021-0827-234248.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-zgCAItxGOhI/YSkULYNgGkI/AAAAAAAFBWE/p1Q4WO8qyqw1Tj_l46ElP4T7cpot8Vx7ACLcBGAsYHQ/s450/2021-0827-234248.png&quot; title=&quot;2021-0827-234248.png&quot; alt=&quot;2021-0827-234248.png&quot; width=&quot;450&quot; height=&quot;244&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候可以看到色彩佈景主題設定(Style Configurator)選取的主題是「DarkModeDefault」，不過這個背景有點太亮了，我希望它更黑一點。接下來我們點選「背景色彩」(Background colour)旁邊的顏色，把它改成黑色。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-2-m_QLGHKlM/YSkULdL2mbI/AAAAAAAFBVw/7-KczQ_r3OUVwAiH6zguR7u9Jyove1UTgCLcBGAsYHQ/s1600/2021-0827-234847.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-2-m_QLGHKlM/YSkULdL2mbI/AAAAAAAFBVw/7-KczQ_r3OUVwAiH6zguR7u9Jyove1UTgCLcBGAsYHQ/s450/2021-0827-234847.png&quot; title=&quot;2021-0827-234847.png&quot; alt=&quot;2021-0827-234847.png&quot; width=&quot;450&quot; height=&quot;244&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著勾選「開啓共用背景色彩」(Enable global background colour)，按下「儲存並關閉」(Save &amp;amp; Close)。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-JZp-oTpYYGc/YSkULQpK1bI/AAAAAAAFBWA/i2sH6MpXFp8JFIpex-vgQBcGPf2DWinsgCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210827234905.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-JZp-oTpYYGc/YSkULQpK1bI/AAAAAAAFBWA/i2sH6MpXFp8JFIpex-vgQBcGPf2DWinsgCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210827234905.png&quot; title=&quot;DeepinScreenshot_select-area_20210827234905.png&quot; alt=&quot;DeepinScreenshot_select-area_20210827234905.png&quot; width=&quot;450&quot; height=&quot;287&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候程式碼的背景就會是黑色囉。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;黑暗模式跟黑暗主題的差別 / The difference between Dark Mode and Dark theme&lt;/h2&gt;
&lt;p&gt;看到這裡，也許會有人發現到一個很矛盾的設定。既然色彩佈景主題設定(Style Configurator)裡面已經有黑暗模式的佈景主題DarkModeDefault，那爲什麼我們不要直接改佈景主題就好了呢？&lt;br&gt;&lt;/p&gt;
&lt;p&gt;那我們來做個比較好了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-wjXD5ATTk3s/YSkULYrmH-I/AAAAAAAFBV8/LTwWMWXssX0qWUbmExJcKZailSCePiN2QCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210828000235.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-wjXD5ATTk3s/YSkULYrmH-I/AAAAAAAFBV8/LTwWMWXssX0qWUbmExJcKZailSCePiN2QCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210828000235.png&quot; title=&quot;DeepinScreenshot_select-area_20210828000235.png&quot; alt=&quot;DeepinScreenshot_select-area_20210828000235.png&quot; width=&quot;450&quot; height=&quot;288&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上圖是只有將佈景主題改成DarkModeDefault，但沒有開啓黑暗模式的樣子。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-nlSeALufhGw/YSkULXfUraI/AAAAAAAFBV4/2o2ltQeWegIFI-DErrn6sE_VeqxW4hDawCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210828000545.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-nlSeALufhGw/YSkULXfUraI/AAAAAAAFBV4/2o2ltQeWegIFI-DErrn6sE_VeqxW4hDawCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210828000545.png&quot; title=&quot;DeepinScreenshot_select-area_20210828000545.png&quot; alt=&quot;DeepinScreenshot_select-area_20210828000545.png&quot; width=&quot;450&quot; height=&quot;286&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;上圖是以本文的做法，開啓黑暗模式的樣子。從這兩張圖，我們可以發現到佈景主題只適用於程式碼本身，並不適用於Notepad++的圖形化操作介面。但黑暗模式則會將Notepad++的整個圖形化操作介面也套用了深色主題。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Go5ld4-P9-o/YSkULc5P8tI/AAAAAAAFBV0/85l8fMV_B70N6WuQj1qsDvcV8cCVDWuSACLcBGAsYHQ/s1600/2021-0828-001448.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Go5ld4-P9-o/YSkULc5P8tI/AAAAAAAFBV0/85l8fMV_B70N6WuQj1qsDvcV8cCVDWuSACLcBGAsYHQ/s450/2021-0828-001448.png&quot; title=&quot;2021-0828-001448.png&quot; alt=&quot;2021-0828-001448.png&quot; width=&quot;450&quot; height=&quot;210&quot;&gt;
  &lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;在黑暗模式右邊，我們還可以「自訂色調」(Customized tone)，調整Notepad++圖形化操作介面各個細節的顏色。這部分就留給大家來探索囉。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-hR-9nE23kyc/YSkUe2mRQ-I/AAAAAAAFBWk/hf1G2p1Dn44OmqvwkCAi5Wo_uv3DNql_ACLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210828000325b.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-hR-9nE23kyc/YSkUe2mRQ-I/AAAAAAAFBWk/hf1G2p1Dn44OmqvwkCAi5Wo_uv3DNql_ACLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210828000325b.png&quot; title=&quot;DeepinScreenshot_select-area_20210828000325b.png&quot; alt=&quot;DeepinScreenshot_select-area_20210828000325b.png&quot; width=&quot;450&quot; height=&quot;286&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本篇介紹了如何在Notepad++ 8.1.3版開啓黑暗模式(Dark Mode)的操作，並進一步在色彩佈景主題設定(Style Configurator)中，讓背景顏色變得更深。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-60SmgklAMqo/YSkUN28VfaI/AAAAAAAFBWI/MVi2gEdF0y8qvjWrgiC85L3xrH4QVFKTgCLcBGAsYHQ/s1600/you-don-t-know-the-power-of-the-dark-side-darth-vader-wallpaper-2560x1080_14.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-60SmgklAMqo/YSkUN28VfaI/AAAAAAAFBWI/MVi2gEdF0y8qvjWrgiC85L3xrH4QVFKTgCLcBGAsYHQ/s450/you-don-t-know-the-power-of-the-dark-side-darth-vader-wallpaper-2560x1080_14.jpg&quot; title=&quot;you-don-t-know-the-power-of-the-dark-side-darth-vader-wallpaper-2560x1080_14.jpg&quot; alt=&quot;you-don-t-know-the-power-of-the-dark-side-darth-vader-wallpaper-2560x1080_14.jpg&quot; width=&quot;450&quot; height=&quot;190&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.besthdwallpaper.com/movies/you-don-t-know-the-power-of-the-dark-side-darth-vader-dt_en-US-60171.html&quot;&gt;Best HD Wallpaper&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;好了，現在你已經開啓了Notepad++的黑暗力量，一起來瞭解黑暗力量的厲害吧。&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次&lt;u&gt;在Notepad++開啓黑暗模式&lt;/u&gt;的教學就到這裡了。寫到最後，我來調查一下大家使用電腦編輯文件的習慣：&lt;/p&gt;
&lt;p&gt;&lt;b&gt;你用電腦編輯文件或程式碼時，編輯器的背景通常是什麼顏色呢？&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;A. 白色&lt;/b&gt;：大部分文件都是白色的吧，沒必要特別修改。&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;B. 黑色&lt;/b&gt;：黑色有多深，就代表我駭客的功力有多深。&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;C. 綠色&lt;/b&gt;：保護眼睛，我都用&lt;a href=&quot;https://www.win10set.com/win10/82474.html&quot;&gt;護眼綠&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;D. 黃色&lt;/b&gt;：電腦都內建濾藍光功能，我看什麼都黃黃的。&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;E. 其他&lt;/b&gt;：我有更好的做法可以跟大家分享。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在&lt;a href=&quot;#comment-form-iframe&quot;&gt;下面的留言處&lt;/a&gt;跟大家分享你的想法。你的意見都是我繼續分享的動力喔！&lt;/p&gt;
&lt;p&gt;如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚，或是將這篇分享到Facebook等社群媒體吧！想在社群媒體追蹤我的話，歡迎到我的Facebook粉絲專頁「&lt;a href=&quot;https://www.facebook.com/pulipuli.blogspot&quot; target=&quot;FB&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;」按個讚喔！&lt;/p&gt;
&lt;p&gt;不知道這篇文章有沒有讓你吃到什麼有趣的東西呢？我是布丁，期待下次見！&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/3850955289909884546/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2021/08/how-to-enable-dark-mode-in-notepad-plus-plus-8.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3850955289909884546'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3850955289909884546'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2021/08/how-to-enable-dark-mode-in-notepad-plus-plus-8.html' title='釋放Notepad++黑暗力量：開啓黑暗模式 / How to Enable Dark Mode in Notepad++ 8'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//lh3.googleusercontent.com/-UaYamksy8ug/YSkqq_LqRWI/AAAAAAAFBW0/0FcovU7wA_08lAE2qTuBX20NQQy0phIFwCLcBGAsYHQ/s72-c/5-cover-Notepad_How_to_enable_the_Dark_Mode.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-3059200445224035239</id><published>2021-08-21T18:07:00.003+08:00</published><updated>2021-08-21T18:14:38.901+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Linux"/><category scheme="http://www.blogger.com/atom/ns#" term="作業系統/Linux"/><title type='text'>如何改善GNOME 3用Alt+Tab切換視窗的功能？ / Tips to improve the Alt-Tab behavior in GNOME 3</title><content type='html'>&lt;p&gt;&lt;span class=&quot;&quot; undefined=&quot;&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-B_Vf1jim54U/YSDQBdqlcxI/AAAAAAAFBPc/xy_xJRzpniMD9Yr6-mQqqWjAjTTPmWCFACLcBGAsYHQ/s1600/3-cover-GNOME_3_Alt_Tab_Tips_to_improve.png&quot; title=&quot;3-cover-GNOME_3_Alt_Tab_Tips_to_improve.png&quot; alt=&quot;3-cover-GNOME_3_Alt_Tab_Tips_to_improve.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;哈囉，大家最近在吃什麼呢？這裡是鬼月時期碰到許多強得跟鬼一樣的人的布丁。&lt;/p&gt;
&lt;p&gt;如果要提高桌面環境多視窗的工作效率，那麼快捷鍵「Alt+Tab」一定是每個人都必須學起來的基本功夫。「Alt+Tab」的主要功能是快速切換不同視窗，但這個功能在每個作業系統中運作的方式都不太一樣。在內建了多個虛擬桌面(workplace)，並搭配多顯示螢幕的&lt;a href=&quot;https://www.gnome.org/&quot;&gt;Linux GNOME 3桌面環境&lt;/a&gt;中，「Alt+Tab」預設顯示所有應用程式(applications)的運作方式就不太方便操作了。&lt;/p&gt;
&lt;p&gt;這篇將介紹如何在Linux GNOME 3中改善「Alt+Tab」切換視窗的功能，包括了在應用程式之間的切換改爲在視窗(windows)之間的切換，以及讓「Alt+Tab」的切換循環只限定在滑鼠目前的顯示畫面。如果你也想成爲GNOME 3工作效率大師的話，就繼續看下去吧！&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;不過，在文章開始之前，我們還是先來個沒工商版面吧。&lt;/p&gt;
&lt;h2&gt;沒工商版面：微波蒸煮盒sistema / Microwave steamer: sistema&amp;nbsp;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-yHCGszc7p6g/YSDQBczPFoI/AAAAAAAFBPY/bE11A91TvXgwppH2pBTgyuL_UwO0HZrfgCLcBGAsYHQ/s1600/1102_Med_Steamer_LABEL_Vent.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-yHCGszc7p6g/YSDQBczPFoI/AAAAAAAFBPY/bE11A91TvXgwppH2pBTgyuL_UwO0HZrfgCLcBGAsYHQ/s450/1102_Med_Steamer_LABEL_Vent.jpg&quot; title=&quot;1102_Med_Steamer_LABEL_Vent.jpg&quot; alt=&quot;1102_Med_Steamer_LABEL_Vent.jpg&quot; width=&quot;450&quot; height=&quot;333&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(照片來源：&lt;a href=&quot;https://sistemaplastics.com/products/microwave/medium-steamer&quot; target=&quot;_blank&quot;&gt;sistema&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;專心寫程式工作的時候，出外吃飯就是一件麻煩的事情。叫外送或外帶的話，就算不考慮花費較高，外送餐點也常常難以滿足綠色青菜、蛋白質所需要的攝取量，再加上外送包裝的大量垃圾，處理起來也是挺麻煩的事情。&lt;/p&gt;
&lt;p&gt;爲了解決上述的煩惱，最近我開始使用&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;微波蒸煮盒Sistema&lt;/span&gt;來烹煮午餐跟晚餐。Sistema不含雙酚A或塑化劑等有毒物質，在微波爐內加熱可耐熱到140度C。跟一般把剩菜微波加熱的方式不同，&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;微波蒸煮盒Sistema&lt;/span&gt;還可以在瀝水隔盤下加水，搭配蒸汽來煮熟食材。我的食譜也很簡單，將所有食材切小塊後和調味料直接地丟入&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;微波蒸煮盒Sistema&lt;/span&gt;，加熱水放入微波爐加熱9分鐘，這樣就完成香噴噴的一餐了。&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;微波蒸煮盒Sistema&lt;/span&gt;不僅用微波爐來烹飪很簡單，也可以直接丟入洗碗機清洗。選擇自然的食材用&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;微波蒸煮盒Sistema&lt;/span&gt;烹飪，不僅健康、快速，省下的時間就能專心寫程式了呢！&lt;/p&gt;
&lt;p&gt;綜合以上所述，&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;微波蒸煮盒Sistema&lt;/span&gt;讓我喜愛的三大特色如下：&lt;br&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;用微波爐料理既簡單又快速，不用悶在廚房跟多種廚具糾纏不清。&lt;/li&gt;
  &lt;li&gt;獨特的瀝水隔盤與蒸汽孔設計，讓食材不只是加熱，而可以真的熟透。不騙你，我連馬鈴薯都是這樣煮的。&lt;/li&gt;
  &lt;li&gt;簡化清洗負擔。你只需要清理&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;微波蒸煮盒Sistema&lt;/span&gt;，而不需要面對油膩膩與沾粘剩菜的碗盤，或是燒焦的鍋子。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;目前&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;微波蒸煮盒Sistema&lt;/span&gt;在多個網路通路都可以直接購買。如果你對怎麼使用&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;微波蒸煮盒Sistema&lt;/span&gt;來料理食物感興趣的話，可以看看&lt;a href=&quot;https://www.youtube.com/watch?v=tzE6J8P7NR4&quot; target=&quot;_blank&quot;&gt;營養健身葛格Peeta&lt;/a&gt;的推薦影片。我這兩個月來用&lt;span style=&quot;text-decoration-line: underline; color: rgb(255, 0, 0); font-weight: 700;&quot;&gt;微波蒸煮盒Sistema&lt;/span&gt;料理食物，每餐都吃得超飽，還能讓體重持續降低超過了5公斤。如果你想知道我是怎麼做的話，不妨&lt;a href=&quot;#comment-form-iframe&quot;&gt;在下面留個言&lt;/a&gt;讓我知道吧。&lt;/p&gt;
&lt;p&gt;真的吃了一些東西後(?)，讓我們開始今天的主題吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;GNOME 3桌面環境 / Environment: GNOME 3 Desktop&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-UI5H0HPCExo/YSDAHp42VtI/AAAAAAAFBN4/Lhniyy_Alyo850n7H1S82UFu4GX9s-m3ACLcBGAsYHQ/s1600/20210821_142647.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-UI5H0HPCExo/YSDAHp42VtI/AAAAAAAFBN4/Lhniyy_Alyo850n7H1S82UFu4GX9s-m3ACLcBGAsYHQ/s450/20210821_142647.jpg&quot; title=&quot;20210821_142647.jpg&quot; alt=&quot;20210821_142647.jpg&quot; width=&quot;450&quot; height=&quot;339&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我現在使用的桌面環境是&lt;a href=&quot;https://www.gnome.org/&quot;&gt;GNOME 3&lt;/a&gt;。這是在Chromebook使用crouton建構的Ubuntu 18.04 Linux桌面環境。如照片所示，我平常的工作環境就是三個螢幕。最近因爲整頓工作環境，其中一個螢幕的連接線被我拿去工作環境使用，所以右邊的攜帶式螢幕沒有運作。總之，我除了想給大家看看桌面的兔子乾杯之外，只是想跟大家說這是一個多螢幕的工作環境就是了。&lt;/p&gt;
&lt;h3&gt;爲什麼我不習慣Alt+Tab的預測操作 / Why I don&#39;t like the default behavior of Alt + Tab&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-YYJESyECuiM/YSDAHax3O-I/AAAAAAAFBNs/pWhLpIRNcsM3qiostebqjrP85y24qltCwCLcBGAsYHQ/s1600/Screenshot_2021-08-21_15_02_48.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-YYJESyECuiM/YSDAHax3O-I/AAAAAAAFBNs/pWhLpIRNcsM3qiostebqjrP85y24qltCwCLcBGAsYHQ/s450/Screenshot_2021-08-21_15_02_48.png&quot; title=&quot;Screenshot_2021-08-21_15_02_48.png&quot; alt=&quot;Screenshot_2021-08-21_15_02_48.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GNOME 3桌面環境跟大部分作業系統一樣，內建了使用「Alt+Tab」快速鍵切換應用程式的功能。但我一開始使用的時候很不習慣，這跟我之前在Windows的環境有很大的差別。&lt;/p&gt;
&lt;p&gt;第一個不習慣的地方在於GNOME 3使用Alt+Tab切換的是「應用程式」(application)而非「視窗」(window)。在GNOME 3桌面環境中，同一種應用程式會被群組在一起。從上圖可以看到檔案管理工具「2 File Manager」(專案名稱是&lt;a href=&quot;https://sourceforge.net/projects/pcmanfm/&quot;&gt;PCMan File Manager&lt;/a&gt;)底下有兩個視窗，這兩個視窗是我正在處理不同資料夾的工作。但我不能直接用Alt+Tab切換這兩個「2 File Manager」，必須在切換到「2 File Manager」應用程式之後，還要按方向鍵「下」，才能切換到其中一個視窗。對於這個問題，我們可以&lt;a href=&quot;https://ubuntuhandbook.org/index.php/2019/02/alt-tab-display-separate-windows-ubuntu-18-04/&quot;&gt;修改「鍵盤快速鍵」(Keyboard Shortcuts)&lt;/a&gt;來解決。&lt;/p&gt;
&lt;p&gt;第二個不習慣的地方在於上圖的切換列表包含了所有螢幕開啓的應用程式。通常我習慣每個螢幕都會有各自進行的不同工作，而切換視窗也只會在這個螢幕進行。GNOME 3把所有應用程式都集中在一起的操作行爲，讓我覺得過於混亂。對於這個問題，我們可以安裝GNOME的擴充功能「&lt;a href=&quot;https://extensions.gnome.org/extension/1437/current-screen-only-for-alternate-tab/&quot;&gt;Current screen only on window switcher&lt;/a&gt;」來解決。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-lNAozf9eVBg/YSDAG3mlAlI/AAAAAAAFBNk/th5rCg999BAipH2IZZkdbCyNgfKy8jWFwCLcBGAsYHQ/s1600/2021-0821-152801.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-lNAozf9eVBg/YSDAG3mlAlI/AAAAAAAFBNk/th5rCg999BAipH2IZZkdbCyNgfKy8jWFwCLcBGAsYHQ/s450/2021-0821-152801.png&quot; title=&quot;2021-0821-152801.png&quot; alt=&quot;2021-0821-152801.png&quot; width=&quot;450&quot; height=&quot;344.688&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第三個不習慣的地方在於「Alt+Tab」的切換視窗只會出現在「主要螢幕」(primary display)上。當我們有多個螢幕時，GNOME 3會自動指定其中一個螢幕爲「主要螢幕」，使用者也能到「設定」(Settings)的「顯示」(Displays)裡面去修改。不過「Alt+Tab」的切換預設只能在「主要螢幕」進行，根據&lt;a href=&quot;https://askubuntu.com/a/1181912&quot;&gt;Liam Proven的說法&lt;/a&gt;，這個設定似乎是無法調整的。&lt;/p&gt;
&lt;p&gt;好的，在瞭解問題與找到對應解決方法後，我們就來開始動手調整GNOME 3的設定吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;將Alt+Tab改爲切換視窗 / Let Alt+Tab to switch windows&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-bx5YeHpztSs/YSDAJNXpNOI/AAAAAAAFBOI/n-AsGJ0FoHEgVe-XiIrJV-41UrNV13MAwCLcBGAsYHQ/s1600/2021-0821-155241.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-bx5YeHpztSs/YSDAJNXpNOI/AAAAAAAFBOI/n-AsGJ0FoHEgVe-XiIrJV-41UrNV13MAwCLcBGAsYHQ/s450/2021-0821-155241.png&quot; title=&quot;2021-0821-155241.png&quot; alt=&quot;2021-0821-155241.png&quot; width=&quot;450&quot; height=&quot;162&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Ip67aZe0T2U/YSDAL141gNI/AAAAAAAFBOg/2ngdcQIbaCIaX7HVy2unK9EiJ48gihtkgCLcBGAsYHQ/s1600/2021-0821-155041.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Ip67aZe0T2U/YSDAL141gNI/AAAAAAAFBOg/2ngdcQIbaCIaX7HVy2unK9EiJ48gihtkgCLcBGAsYHQ/s450/2021-0821-155041.png&quot; title=&quot;2021-0821-155041.png&quot; alt=&quot;2021-0821-155041.png&quot; width=&quot;450&quot; height=&quot;119&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先我們先來把Alt+Tab的操作從「切換應用程式」(switch applications)改爲「切換視窗」(switch windows)。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-5Rp6hiuHPOE/YSDAHVmQBbI/AAAAAAAFBN0/10QI7TQD8zw3kyXC7-zWykF7FulxNK85QCLcBGAsYHQ/s1600/2021-0821-155623.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-5Rp6hiuHPOE/YSDAHVmQBbI/AAAAAAAFBN0/10QI7TQD8zw3kyXC7-zWykF7FulxNK85QCLcBGAsYHQ/s450/2021-0821-155623.png&quot; title=&quot;2021-0821-155623.png&quot; alt=&quot;2021-0821-155623.png&quot; width=&quot;450&quot; height=&quot;209&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;做法是開啓「設定」(Settings)裡面的「鍵盤」(Keyboard)。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-5SO31n3LZ24/YSDAI9ITWvI/AAAAAAAFBOE/TGTAjXVFBk8IbBtABn34iz9XWJXXpKK1gCLcBGAsYHQ/s1600/2021-0821-155807.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-5SO31n3LZ24/YSDAI9ITWvI/AAAAAAAFBOE/TGTAjXVFBk8IbBtABn34iz9XWJXXpKK1gCLcBGAsYHQ/s450/2021-0821-155807.png&quot; title=&quot;2021-0821-155807.png&quot; alt=&quot;2021-0821-155807.png&quot; width=&quot;450&quot; height=&quot;327&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在這裡面找到「Switch windows」，用滑鼠點一下。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-SbUvRmCOyHk/YSDAI_WFtCI/AAAAAAAFBOA/sACRa0V5dx4SnBa9pjj-R74jzQvfo2NZACLcBGAsYHQ/s1600/2021-0821-160115.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-SbUvRmCOyHk/YSDAI_WFtCI/AAAAAAAFBOA/sACRa0V5dx4SnBa9pjj-R74jzQvfo2NZACLcBGAsYHQ/s450/2021-0821-160115.png&quot; title=&quot;2021-0821-160115.png&quot; alt=&quot;2021-0821-160115.png&quot; width=&quot;450&quot; height=&quot;359&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候會出現提示你按下鍵盤按鍵的訊息。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-U2lFZ68-0O4/YSDAJd3zW2I/AAAAAAAFBOQ/BL76C65iYnYTbH0KBf6SqAErYV8mRhCmQCLcBGAsYHQ/s1600/2021-0821-160441.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-U2lFZ68-0O4/YSDAJd3zW2I/AAAAAAAFBOQ/BL76C65iYnYTbH0KBf6SqAErYV8mRhCmQCLcBGAsYHQ/s450/2021-0821-160441.png&quot; title=&quot;2021-0821-160441.png&quot; alt=&quot;2021-0821-160441.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然後按下實體鍵盤的「Atl」跟「Tab」按鍵。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-5yQ5rvY17xU/YSDAI0_2r9I/AAAAAAAFBN8/5SKpUWLaTEoq0j4jI1aCm5x6SefOrwqMACLcBGAsYHQ/s1600/2021-0821-160826.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-5yQ5rvY17xU/YSDAI0_2r9I/AAAAAAAFBN8/5SKpUWLaTEoq0j4jI1aCm5x6SefOrwqMACLcBGAsYHQ/s450/2021-0821-160826.png&quot; title=&quot;2021-0821-160826.png&quot; alt=&quot;2021-0821-160826.png&quot; width=&quot;450&quot; height=&quot;353&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;確認一下設定有偵測到我們按下「Alt+Tab」。這時候設定也會提示你，原本「Atl+Tab」是被設定用來執行「切換應用程式」(Switch applications)。如果我們要取代(replace)這個設定話，「切換應用程式」的快速鍵就會被取消。我們按右上角的「Replace」確定取代即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-eBjXWL8nATw/YSDAJJkvpHI/AAAAAAAFBOM/oFsn1qjMntU8aBEiZD7xVP1JNxPN3Qq5ACLcBGAsYHQ/s1600/2021-0821-161105.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-eBjXWL8nATw/YSDAJJkvpHI/AAAAAAAFBOM/oFsn1qjMntU8aBEiZD7xVP1JNxPN3Qq5ACLcBGAsYHQ/s450/2021-0821-161105.png&quot; title=&quot;2021-0821-161105.png&quot; alt=&quot;2021-0821-161105.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之後按下「Atl+Tab」的時候，切換的就不是應用程式，而是切換視窗了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-bx5YeHpztSs/YSDAJNXpNOI/AAAAAAAFBOI/n-AsGJ0FoHEgVe-XiIrJV-41UrNV13MAwCLcBGAsYHQ/s1600/2021-0821-155241.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-bx5YeHpztSs/YSDAJNXpNOI/AAAAAAAFBOI/n-AsGJ0FoHEgVe-XiIrJV-41UrNV13MAwCLcBGAsYHQ/s450/2021-0821-155241.png&quot; title=&quot;2021-0821-155241.png&quot; alt=&quot;2021-0821-155241.png&quot; width=&quot;450&quot; height=&quot;162&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0px 0px 10px; box-sizing: border-box; color: rgb(82, 82, 82);&quot;&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Ip67aZe0T2U/YSDAL141gNI/AAAAAAAFBOg/2ngdcQIbaCIaX7HVy2unK9EiJ48gihtkgCLcBGAsYHQ/s1600/2021-0821-155041.png&quot; style=&quot;color: rgb(51, 122, 183); box-sizing: border-box; font-weight: inherit; text-decoration: underline;&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-Ip67aZe0T2U/YSDAL141gNI/AAAAAAAFBOg/2ngdcQIbaCIaX7HVy2unK9EiJ48gihtkgCLcBGAsYHQ/s450/2021-0821-155041.png&quot; title=&quot;2021-0821-155041.png&quot; alt=&quot;2021-0821-155041.png&quot; width=&quot;450&quot; height=&quot;119&quot; style=&quot;max-width: 100%; height: auto; vertical-align: middle; border: 3px dotted red; box-sizing: border-box; background: transparent; box-shadow: none;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;仔細比較的話，可以看到「2 File Manager」在「切換應用程式」(Switch applications)裡面被分在一個群組中，但在「切換視窗」(Switch windows)中則是被分開成兩個視窗，可以用「Alt+Tab」直接切換。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Alt+Tab只切換現在螢幕上的視窗 / Switch windows in current monitor&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-0_tjsw_yc5U/YSDALnuuazI/AAAAAAAFBOk/dQ1PH5a0WJ8LdYyMwZnJN601SgbaWIZ7gCLcBGAsYHQ/s1600/2021-0821-161733.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-0_tjsw_yc5U/YSDALnuuazI/AAAAAAAFBOk/dQ1PH5a0WJ8LdYyMwZnJN601SgbaWIZ7gCLcBGAsYHQ/s450/2021-0821-161733.png&quot; title=&quot;2021-0821-161733.png&quot; alt=&quot;2021-0821-161733.png&quot; width=&quot;450&quot; height=&quot;119&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-XwU8XGks5Bo/YSDALo-CiXI/AAAAAAAFBOc/KeW4JPDAbrAFN3DNbYi7RJ0mcqqZKBFoQCLcBGAsYHQ/s1600/2021-0821-161721.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-XwU8XGks5Bo/YSDALo-CiXI/AAAAAAAFBOc/KeW4JPDAbrAFN3DNbYi7RJ0mcqqZKBFoQCLcBGAsYHQ/s450/2021-0821-161721.png&quot; title=&quot;2021-0821-161721.png&quot; alt=&quot;2021-0821-161721.png&quot; width=&quot;450&quot; height=&quot;141&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再來我們要來讓Alt+Tab的切換視窗功能，從原本切換所有虛擬桌面、所有螢幕的視窗，改爲只切換現在滑鼠所在螢幕的視窗。這個功能需要安裝GNOME的擴充功能「&lt;a href=&quot;https://extensions.gnome.org/extension/1437/current-screen-only-for-alternate-tab/&quot;&gt;Current screen only on window switcher&lt;/a&gt;」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-9yBzISdVDHo/YSDALyXyKSI/AAAAAAAFBOo/3A-lwuFbHYA1IeGR7fr3y-hQ5o3MGciaACLcBGAsYHQ/s1600/2021-0821-162116.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-9yBzISdVDHo/YSDALyXyKSI/AAAAAAAFBOo/3A-lwuFbHYA1IeGR7fr3y-hQ5o3MGciaACLcBGAsYHQ/s450/2021-0821-162116.png&quot; title=&quot;2021-0821-162116.png&quot; alt=&quot;2021-0821-162116.png&quot; width=&quot;450&quot; height=&quot;233&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;讓我們搜尋「Software」開啓GNOME的軟體中心「Software」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-mBkGMK4tsos/YSDALsM1dvI/AAAAAAAFBOY/sr3I1JCmcLUupCSroBX2euTv8ECHvxpjwCLcBGAsYHQ/s1600/2021-0821-163421.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-mBkGMK4tsos/YSDALsM1dvI/AAAAAAAFBOY/sr3I1JCmcLUupCSroBX2euTv8ECHvxpjwCLcBGAsYHQ/s450/2021-0821-163421.png&quot; title=&quot;2021-0821-163421.png&quot; alt=&quot;2021-0821-163421.png&quot; width=&quot;450&quot; height=&quot;304&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打開Software應用程式，按右上角的放大鏡搜尋，然後在輸入框中輸入「current screen」，這時候應該會找到對應的擴充功能「&lt;a href=&quot;https://extensions.gnome.org/extension/1437/current-screen-only-for-alternate-tab/&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Current screen only on window switcher&lt;/a&gt;」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-2Ka3ooz92vk/YSDALiC1A6I/AAAAAAAFBOU/L5FKPEqd19A2ppJ4OkSq84YUFPg9BnJMACLcBGAsYHQ/s1600/2021-0821-163618.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-2Ka3ooz92vk/YSDALiC1A6I/AAAAAAAFBOU/L5FKPEqd19A2ppJ4OkSq84YUFPg9BnJMACLcBGAsYHQ/s450/2021-0821-163618.png&quot; title=&quot;2021-0821-163618.png&quot; alt=&quot;2021-0821-163618.png&quot; width=&quot;450&quot; height=&quot;301&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;按下「Install」來安裝。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-d6oMCNnjvr0/YSDAOGEn-wI/AAAAAAAFBO4/ZFY_Q3cjBjMWBqDUswYwvZZvJXd-7HXKwCLcBGAsYHQ/s1600/2021-0821-163819.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-d6oMCNnjvr0/YSDAOGEn-wI/AAAAAAAFBO4/ZFY_Q3cjBjMWBqDUswYwvZZvJXd-7HXKwCLcBGAsYHQ/s450/2021-0821-163819.png&quot; title=&quot;2021-0821-163819.png&quot; alt=&quot;2021-0821-163819.png&quot; width=&quot;450&quot; height=&quot;300&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候會跳出確認是否要安裝的訊息，按下「Install」確認。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-JyFOHCV00vE/YSDAOKFToVI/AAAAAAAFBOw/bA9VXbqFilsQkr2XmkZQezr7hveSgQuiACLcBGAsYHQ/s1600/2021-0821-163931.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-JyFOHCV00vE/YSDAOKFToVI/AAAAAAAFBOw/bA9VXbqFilsQkr2XmkZQezr7hveSgQuiACLcBGAsYHQ/s450/2021-0821-163931.png&quot; title=&quot;2021-0821-163931.png&quot; alt=&quot;2021-0821-163931.png&quot; width=&quot;450&quot; height=&quot;296&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這樣子就安裝完囉。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-2_GI1AxvY10/YSDAOD88OnI/AAAAAAAFBO0/R7yXDWB_sjcdABhvMbj3GAcbOUnIDLDQgCLcBGAsYHQ/s1600/2021-0821-164101.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-2_GI1AxvY10/YSDAOD88OnI/AAAAAAAFBO0/R7yXDWB_sjcdABhvMbj3GAcbOUnIDLDQgCLcBGAsYHQ/s450/2021-0821-164101.png&quot; title=&quot;2021-0821-164101.png&quot; alt=&quot;2021-0821-164101.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;讓我們來按下「Alt+Tab」看看。你可以注意到，現在切換視窗時只限於目前滑鼠所在的螢幕上，其他螢幕或其他虛擬桌面(workplace)的視窗就不會出現囉。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-CSLYB7H5K_g/YSDAOKiIQ2I/AAAAAAAFBOs/dUnxS8MfSG0SluujDA-k3yBCEZ0Dcy3OACLcBGAsYHQ/s1600/Screenshot_2021-08-21_16_43_59.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-CSLYB7H5K_g/YSDAOKiIQ2I/AAAAAAAFBOs/dUnxS8MfSG0SluujDA-k3yBCEZ0Dcy3OACLcBGAsYHQ/s450/Screenshot_2021-08-21_16_43_59.png&quot; title=&quot;Screenshot_2021-08-21_16_43_59.png&quot; alt=&quot;Screenshot_2021-08-21_16_43_59.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這篇文章說明了如何改善原本GNOME 3桌面環境中的「Alt+Tab」功能，讓它從切換應用程式改爲切換視窗之外，也能夠讓它只切換目前所在螢幕的視窗。&lt;/p&gt;
&lt;p&gt;遺憾的是，「Alt+Tab」的切換畫面只能在「主要螢幕」(primary display)上顯示，不能在我正在操作的其他螢幕上顯示。如果你有發現到更好的做法的話，不妨在&lt;a href=&quot;#comment-form-iframe&quot;&gt;下面留言&lt;/a&gt;跟我分享喔！





&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次改善&lt;b&gt;GNOME 3桌面環境Alt+Tab功能&lt;/b&gt;的教學就到這裡了。寫到最後，我來調查一下大家在多工視窗操作的習慣：&lt;/p&gt;
&lt;p&gt;&lt;b&gt;你都是用什麼方式切換不同的視窗呢？&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A. 我跟這篇一樣，習慣使用Alt+Tab。&lt;/li&gt;
  &lt;li&gt;B. 比起Alt+Tab，我比較喜歡用Win+Tab (或是Super+Tab)。&lt;/li&gt;
  &lt;li&gt;C. 直接點工作列上的視窗來切換，我都不用鍵盤操作。&lt;/li&gt;
  &lt;li&gt;D. 其他：我都用更有效率的方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在&lt;a href=&quot;#comment-form-iframe&quot;&gt;下面的留言處&lt;/a&gt;跟大家分享你的想法。你的意見都是我繼續分享的動力喔！&lt;/p&gt;
&lt;p&gt;如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚，或是將這篇分享到Facebook等社群媒體吧！想在社群媒體追蹤我的話，歡迎到我的Facebook粉絲專頁「&lt;a href=&quot;https://www.facebook.com/pulipuli.blogspot&quot; target=&quot;FB&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;」按個讚喔！&lt;/p&gt;
&lt;p&gt;不知道這篇文章有沒有讓你吃到什麼有趣的東西呢？我是布丁，期待下次見！&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/3059200445224035239/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2021/08/gnome-3alttab-tips-to-improve-alt-tab.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3059200445224035239'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3059200445224035239'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2021/08/gnome-3alttab-tips-to-improve-alt-tab.html' title='如何改善GNOME 3用Alt+Tab切換視窗的功能？ / Tips to improve the Alt-Tab behavior in GNOME 3'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//lh3.googleusercontent.com/-B_Vf1jim54U/YSDQBdqlcxI/AAAAAAAFBPc/xy_xJRzpniMD9Yr6-mQqqWjAjTTPmWCFACLcBGAsYHQ/s72-c/3-cover-GNOME_3_Alt_Tab_Tips_to_improve.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-6137952730823343489</id><published>2021-08-17T23:35:00.001+08:00</published><updated>2021-08-17T23:35:16.837+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Linux"/><category scheme="http://www.blogger.com/atom/ns#" term="OS/Linux"/><category scheme="http://www.blogger.com/atom/ns#" term="作業系統/Linux"/><title type='text'>Linux的多媒體影片格式轉檔工具：HandBrake / HandBrake: A Video Transcoder in Linux</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-TQxrZDlfIxY/YRvXFa5DCYI/AAAAAAAFBMY/c96of0tXgwwKvj3e2z9sd_0XbkXhOPdpwCLcBGAsYHQ/s1600/2-cover-Linux_HandBrake_HandBrake_A_Video.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-TQxrZDlfIxY/YRvXFa5DCYI/AAAAAAAFBMY/c96of0tXgwwKvj3e2z9sd_0XbkXhOPdpwCLcBGAsYHQ/s1600/2-cover-Linux_HandBrake_HandBrake_A_Video.png&quot; title=&quot;2-cover-Linux_HandBrake_HandBrake_A_Video.png&quot; alt=&quot;2-cover-Linux_HandBrake_HandBrake_A_Video.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;晚安，大家最近在吃什麼呢？這裡是煩惱工作環境遲遲無法好好配置完成的布丁。&lt;/p&gt;
&lt;p&gt;在Windows作業系統裡轉換影片時，很多人常用的是&lt;a href=&quot;http://www.pcfreetime.com/&quot;&gt;格式工廠(Format Factory)&lt;/a&gt;。而對Linux作業系統的使用者來說，&lt;a href=&quot;https://handbrake.fr/&quot;&gt;HandBrake&lt;/a&gt;則是轉換影片格式的第一首選。使用HandBrake轉換影片時，我們不需煩惱要轉換的影片格式參數，而是可以直接使用它提供了多種使用情境的預先配置檔案。例如我想要在Android或iPhone上播放，或是我想要把它作爲Gmail附件，請它在影片長度和檔案大小間取得平衡，HandBrake都可以幫你直接處理。不僅如此，HandBrake也是Linux、Windows和MacOS的跨平臺工具。接下來就讓我們來認識認識HandBrake這個強大又好用的多媒體影片格式轉檔工具吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;不過在文章開始之前，我們還是先來個沒工商版面吧。&lt;/p&gt;
&lt;h2&gt;沒工商版面：可解釋機器學習：黑盒模型可解釋性理解指南 /&amp;nbsp;Interpretable Machine Learning&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-PTWkPgu7gUg/YRtDnXOWzqI/AAAAAAAFBKI/2jdIDTSTFUshqnVP5NSZIzaKd8dRtJqKACLcBGAsYHQ/s1600/9787121406065.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-PTWkPgu7gUg/YRtDnXOWzqI/AAAAAAAFBKI/2jdIDTSTFUshqnVP5NSZIzaKd8dRtJqKACLcBGAsYHQ/s450/9787121406065.jpg&quot; title=&quot;9787121406065.jpg&quot; alt=&quot;9787121406065.jpg&quot; width=&quot;450&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.tenlong.com.tw/products/9787121406065&quot;&gt;天瓏網路書店&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;可解釋機器學習(Interpretable Machine Learning)&lt;/span&gt;是由Christoph Molnar所撰寫的一本機器學習進階指南，並以&lt;a href=&quot;https://christophm.github.io/interpretable-ml-book/&quot;&gt;CC授權提供線上閱讀電子書&lt;/a&gt;。有別於現今人工智慧主流的黑盒演算法，作者聚焦於探討機器學習「可解釋性」(interpretability)的價值，指出人類不光只是要正確的預測，還希望能從模型的結果中獲取意義和知識。舉例來說，&lt;a href=&quot;https://www.ithome.com.tw/news/146179&quot;&gt;銀行建置的AI能夠自動審核信用卡申請通過與否&lt;/a&gt;是很不錯，&lt;u&gt;但如果我被AI拒絕了，那我會更希望它給我個可以能夠讓人信服的理由。&lt;/u&gt;不僅如此，只有當我們剖開黑箱模型、找尋可解釋性的知識時，機器學習模型才能進行調整、修復與偏見的檢測。&lt;/p&gt;
&lt;p&gt;該書介紹了本身具備可解釋性的模型，以及從特徵和案例(example-based)來剖析黑箱模型的分析方式。&lt;a href=&quot;https://christophm.github.io/interpretable-ml-book/neural-networks.html&quot;&gt;該書的網路版&lt;/a&gt;還加上了類神經網路的可解釋性(Neural Network Interpretation)一章，對圖像和文字資料提出了不同的分析方法。該書的介紹中引用了大量學術論文，並整理了相關的Python和R的套件。不論是對於學術研究還是實務應用來說，都相當具有參考價值。&lt;/p&gt;
&lt;p&gt;綜合以上所述，&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;可解釋機器學習(Interpretable Machine Learning)&lt;/span&gt;一書讓我喜愛的三大特色如下：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;從可解釋性的觀點重新認識機器學習模型：模型從資料中歸納出模式，而我們則從模型上學習知識。&lt;/li&gt;
  &lt;li&gt;提供學術研究的引文索引，以及實務應用的工具指引，相當具有參考價值。&lt;/li&gt;
  &lt;li&gt;以CC授權&lt;a href=&quot;https://christophm.github.io/interpretable-ml-book/&quot;&gt;可免費線上閱讀&lt;/a&gt;，而朱明超翻譯中文版並於&lt;a href=&quot;https://github.com/MingchaoZhu/InterpretableMLBook&quot;&gt;GitHub&lt;/a&gt;供人自由下載。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果你對&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;可解釋機器學習(Interpretable Machine Learning)&lt;/span&gt;一書感到興趣的話，可以直接在瀏覽器上閱讀&lt;a href=&quot;https://christophm.github.io/interpretable-ml-book/&quot;&gt;作者&lt;/a&gt;&lt;a href=&quot;https://christophm.github.io/interpretable-ml-book/&quot;&gt;Christoph Molnar&lt;/a&gt;&lt;a href=&quot;https://christophm.github.io/interpretable-ml-book/&quot;&gt;的英文版&lt;/a&gt;、&lt;a href=&quot;https://github.com/MingchaoZhu/InterpretableMLBook&quot;&gt;朱明超翻譯的中文版&lt;/a&gt;，或是&lt;a href=&quot;https://www.tenlong.com.tw/products/9787121406065&quot;&gt;購買紙本書籍&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;好的，讓我們結束沒工商版面，會到今天要講的主題吧。&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;關於HandBrake / About HandBrake&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-HmpJViTzcBQ/YRtDn7PHCnI/AAAAAAAFBKQ/D8eCH2qQJGgFwWt0NSvHwT6QLbZIavV0ACLcBGAsYHQ/s1600/HandBrake_Icon.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-HmpJViTzcBQ/YRtDn7PHCnI/AAAAAAAFBKQ/D8eCH2qQJGgFwWt0NSvHwT6QLbZIavV0ACLcBGAsYHQ/s450/HandBrake_Icon.png&quot; title=&quot;HandBrake_Icon.png&quot; alt=&quot;HandBrake_Icon.png&quot; width=&quot;450&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.wikiwand.com/en/HandBrake&quot;&gt;維基百科&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;HandBrake一開始是作者Eric Petit在2003年開發用來將DVD轉檔的工具。現今把許多原本只能用指令列操作的第三方聲音和影片的工具庫，包括&lt;a href=&quot;https://ffmpeg.org/&quot;&gt;FFmpeg&lt;/a&gt;、&lt;a href=&quot;https://www.videolan.org/developers/x264.html&quot;&gt;x264&lt;/a&gt;和&lt;a href=&quot;https://www.x265.org/&quot;&gt;x265&lt;/a&gt;等等，整合成簡單、容易使用的圖形化介面。目前最新版是2021年7月18日發佈的1.4。&lt;/p&gt;
&lt;p&gt;HandBrake是開放原始碼專案，採用&lt;a href=&quot;http://lucien.cc/20120724-gpl-3-0-%E8%88%87-gpl-2-0-%E7%9A%84%E7%95%B0%E5%90%8C%E6%AF%94%E8%BC%83%E8%88%87%E6%87%89%E7%94%A8%E5%88%86%E6%9E%90/&quot;&gt;GPL第2版授權&lt;/a&gt;。原始碼在&lt;a href=&quot;https://github.com/HandBrake/HandBrake&quot;&gt;GitHub&lt;/a&gt;上保存。以下是HandBrake的相關連結：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;官方網站：&lt;a href=&quot;https://handbrake.fr/&quot; target=&quot;_blank&quot;&gt;https://handbrake.fr/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;下載頁面：&lt;a href=&quot;https://handbrake.fr/downloads.php&quot;&gt;https://handbrake.fr/downloads.php&lt;/a&gt;&amp;nbsp;&lt;/li&gt;
  &lt;li&gt;GitHub原始碼保存庫：&lt;a href=&quot;https://github.com/HandBrake/HandBrake&quot;&gt;https://github.com/HandBrake/HandBrake&lt;/a&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;圖示 / Icon&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-FT2KUur6QqA/YRtDni4jJMI/AAAAAAAFBKM/aSXs2o-nQw0N3J6rV_Tn9yfnSs0n9LE-QCLcBGAsYHQ/s1600/What_is_it_-_Hand_brake.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-FT2KUur6QqA/YRtDni4jJMI/AAAAAAAFBKM/aSXs2o-nQw0N3J6rV_Tn9yfnSs0n9LE-QCLcBGAsYHQ/s450/What_is_it_-_Hand_brake.jpg&quot; title=&quot;What_is_it_-_Hand_brake.jpg&quot; alt=&quot;What_is_it_-_Hand_brake.jpg&quot; width=&quot;450&quot; height=&quot;300&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://haynes.com/en-us/tips-tutorials/what-cars-hand-brake&quot;&gt;Haynes&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;雖然HandBrake的圖示是調酒和鳳梨，不過根據&lt;a href=&quot;https://www.merriam-webster.com/dictionary/hand%20brake&quot;&gt;韋氏字典&lt;/a&gt;，Hand Brake一詞似乎是指可以用手緊急停止裝置的拉桿，包括車上的手剎車。不知道爲什麼HandBrake使用調酒和鳳梨作爲圖示。如果有人知道的話，不妨在下面留言處分享你知道的線索吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;在Ubuntu中安裝HandBrake / Install HandBrake in Ubuntu&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-ECTyPHtJxVc/YRtDkU1aiAI/AAAAAAAFBJ8/Oaj4ti6DRDwKuNiOBpC4RU7nV4-NnXyUACLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817001619b.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-ECTyPHtJxVc/YRtDkU1aiAI/AAAAAAAFBJ8/Oaj4ti6DRDwKuNiOBpC4RU7nV4-NnXyUACLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817001619b.png&quot; title=&quot;DeepinScreenshot_select-area_20210817001619b.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817001619b.png&quot; width=&quot;450&quot; height=&quot;330&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HandBrake的&lt;a href=&quot;https://handbrake.fr/downloads.php&quot;&gt;下載頁面&lt;/a&gt;提供了macOS、Windows和Linux的下載方式。它除了在Linux上提供&lt;a href=&quot;http://fygul.blogspot.com/2020/01/appimage-flatpak.html&quot;&gt;Flatpak應用程式虛擬化格式&lt;/a&gt;供人下載之外，在HandBrake文件裡也說明了使用apt-get安裝的方法。&lt;/p&gt;
&lt;p&gt;首先，我們要將HandBrake的套件來源加入到Linux作業系統中。這邊我們會使用apt-add-repository工具。如果你沒有此工具，請先安裝software-properties-common套件。指令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo&amp;nbsp;apt&amp;nbsp;install&amp;nbsp;software-properties-common&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再來使用apt-add-repository工具將HandBrake的套件來源加入到Linux作業系統中，指令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo&amp;nbsp;add-apt-repository&amp;nbsp;ppa:stebbins/handbrake-releases&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然後更新套件清單：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo&amp;nbsp;apt-get&amp;nbsp;update&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最後就是安裝HandBrake。這邊我們要安裝它的命令列套件handbrake-cli與圖形化介面handbrake-gtk，指令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo&amp;nbsp;apt-get&amp;nbsp;install&amp;nbsp;handbrake-cli&amp;nbsp;handbrake-gtk&amp;nbsp;-y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-hK-9iyfx0GU/YRtDlQMaYjI/AAAAAAAFBKE/HWVpGQqR4a0B6CZ9-7fyAChGz_IjT0tSACLcBGAsYHQ/s1600/Screenshot_from_2021-08-17_00-30-19a.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-hK-9iyfx0GU/YRtDlQMaYjI/AAAAAAAFBKE/HWVpGQqR4a0B6CZ9-7fyAChGz_IjT0tSACLcBGAsYHQ/s389/Screenshot_from_2021-08-17_00-30-19a.png&quot; title=&quot;Screenshot_from_2021-08-17_00-30-19a.png&quot; alt=&quot;Screenshot_from_2021-08-17_00-30-19a.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安裝完成後，你就可以在Applications裡面找到HandBrake了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;轉換影片格式 / Convert Video&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Y43Jyhl4mVg/YRtDlZoRGGI/AAAAAAAFBKA/XtrJTfMytWM5mGNlkoQZCcQ2ah7o1_UFACLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817003509.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Y43Jyhl4mVg/YRtDlZoRGGI/AAAAAAAFBKA/XtrJTfMytWM5mGNlkoQZCcQ2ah7o1_UFACLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817003509.png&quot; title=&quot;DeepinScreenshot_select-area_20210817003509.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817003509.png&quot; width=&quot;450&quot; height=&quot;364&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;開啓HandBrake後，我們就來進行影片格式的轉換吧。&lt;/p&gt;
&lt;h3&gt;影片範例 / Video file&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-T41U6-aJn3s/YRtDt5ZpURI/AAAAAAAFBKo/EOTNteBD4Vk7ufxTdEZ2ORalmzdPdliygCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817004113.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-T41U6-aJn3s/YRtDt5ZpURI/AAAAAAAFBKo/EOTNteBD4Vk7ufxTdEZ2ORalmzdPdliygCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817004113.png&quot; title=&quot;DeepinScreenshot_select-area_20210817004113.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817004113.png&quot; width=&quot;450&quot; height=&quot;307&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這邊我們用的例子是Blender基金會於2008年開放授權的動畫電影&lt;a href=&quot;https://peach.blender.org/trailer-page/&quot;&gt;大雄兔(Big Buck Bunny)&lt;/a&gt;。大雄兔爲&lt;a href=&quot;https://www.youtube.com/watch?v=YE7VzlLtp-4&quot;&gt;10分鐘的短片&lt;/a&gt;，&lt;a href=&quot;https://peach.blender.org/download/&quot;&gt;網站上具有多種不同的格式供人下載&lt;/a&gt;，這也是許多影片播放器展示時播放的影片。&lt;/p&gt;
&lt;p&gt;大雄兔網站上的10分鐘完整檔案相當的大。這裡我們不使用原版的影片，而是使用&lt;a href=&quot;https://github.com/bower-media-samples/big-buck-bunny-1080p-5s&quot;&gt;大雄兔1080p格式下的前5秒影片&lt;/a&gt;。影片可從GitHub下載：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bower-media-samples/big-buck-bunny-1080p-5s/raw/master/video.mp4&quot;&gt;big-buck-bunny-1080p-5s: video.mp4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-39BcJr9E_z4/YRtDtOhCQFI/AAAAAAAFBKY/9RpP__iGsKgSap0lEvotVHFjnx21fBn0wCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817004857b.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-39BcJr9E_z4/YRtDtOhCQFI/AAAAAAAFBKY/9RpP__iGsKgSap0lEvotVHFjnx21fBn0wCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817004857b.png&quot; title=&quot;DeepinScreenshot_select-area_20210817004857b.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817004857b.png&quot; width=&quot;450&quot; height=&quot;177&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;讓我們先來看看video.mp4的檔案大小。在1080p解析度下，video.mp4檔案大小爲1.9MB。爲了讓較低階的Android設備也能播放該影片，接下來讓我們用HandBrake來轉換它的影片格式吧。&lt;/p&gt;
&lt;h3&gt;1. 開啓HandBrake / Open HandBrake application&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-ZRExwGBbXAI/YRtDtzPy0MI/AAAAAAAFBKc/bVh9Y9eniKQCnGhfWLihEipfruSvKSxhwCLcBGAsYHQ/s1600/2021-0817-074652.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-ZRExwGBbXAI/YRtDtzPy0MI/AAAAAAAFBKc/bVh9Y9eniKQCnGhfWLihEipfruSvKSxhwCLcBGAsYHQ/s450/2021-0817-074652.png&quot; title=&quot;2021-0817-074652.png&quot; alt=&quot;2021-0817-074652.png&quot; width=&quot;450&quot; height=&quot;363&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先，我們開啓HandBrake，按左上角的「Open Source」開啓檔案。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-cgAZqERnbSE/YRtDt190PWI/AAAAAAAFBKg/mjhJcibsZ58ZjYTZKveCfYeO9bAwSPR8QCLcBGAsYHQ/s1600/2021-0817-075032.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-cgAZqERnbSE/YRtDt190PWI/AAAAAAAFBKg/mjhJcibsZ58ZjYTZKveCfYeO9bAwSPR8QCLcBGAsYHQ/s450/2021-0817-075032.png&quot; title=&quot;2021-0817-075032.png&quot; alt=&quot;2021-0817-075032.png&quot; width=&quot;450&quot; height=&quot;363&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;載入檔案之後，我們可以看到HandBrake在Soruce那裡列出了該影片的格式資訊：「video, 1920x1080 (1920x1080), 16:9, 24 FPS, 1 Audio Track, 0 Subtitle Tracks」。這可以讓我們瞭解影片的基本資訊。&lt;/p&gt;
&lt;h3&gt;2. 選擇目標格式 / Select target format&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-qyEnmRZkMJI/YRtDt8QoTRI/AAAAAAAFBKk/zFJRvkB7srsZX_X37tyyzrTMBDcVZ8ZQQCLcBGAsYHQ/s1600/2021-0817-075617.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-qyEnmRZkMJI/YRtDt8QoTRI/AAAAAAAFBKk/zFJRvkB7srsZX_X37tyyzrTMBDcVZ8ZQQCLcBGAsYHQ/s450/2021-0817-075617.png&quot; title=&quot;2021-0817-075617.png&quot; alt=&quot;2021-0817-075617.png&quot; width=&quot;450&quot; height=&quot;360&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著我們從預先設定好的影片格式裡面來選擇要轉換的目標。請按下Preset，裡面可以看到General、Web、Devices、Matroska (&lt;a href=&quot;https://www.itsfun.com.tw/Matroska/wiki-6281075-5943645&quot;&gt;多媒體封裝格式&lt;/a&gt;)、Production五個類別。由於我們是要將影片轉換成Android設備可以播放的格式，讓我們進入「Devices」類別中。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-yYRPCNCLMNw/YRtDs4F3osI/AAAAAAAFBKU/gl3vDeO0iFkkot8FTL_9c7zRNxrlNIALACLcBGAsYHQ/s1600/2021-0817-075959.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-yYRPCNCLMNw/YRtDs4F3osI/AAAAAAAFBKU/gl3vDeO0iFkkot8FTL_9c7zRNxrlNIALACLcBGAsYHQ/s450/2021-0817-075959.png&quot; title=&quot;2021-0817-075959.png&quot; alt=&quot;2021-0817-075959.png&quot; width=&quot;450&quot; height=&quot;361.703&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你可以看到HandBrake已經爲相當多裝置預先配置好了影片格式的參數，包括Android、Apple、Chromecast、Amazon Fire、Playstation、Roku (&lt;a href=&quot;https://www.inside.com.tw/article/23125-rokus-journey-to-challenge-svod&quot;&gt;一種電視棒&lt;/a&gt;)。每種裝置底下又有不同的解析度可供選擇。舉例來說，「Android 480p30」，表示該影片格式是Android裝置可以播放，解析度是&lt;a href=&quot;https://www.wikiwand.com/zh-tw/480p&quot;&gt;480p&lt;/a&gt; (也就是垂直解析度爲480)，每秒幀數是30 FPS。&lt;/p&gt;
&lt;p&gt;由於我們要轉換成低階Android也能播放的影片格式，在此讓我們選擇「Android 480p30」吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-WSDGmzpghiA/YRtD6fAE5dI/AAAAAAAFBLI/3ki4txjAgrw_TNDSmfvAbrKvvmB2YhxiACLcBGAsYHQ/s1600/2021-0817-080942.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-WSDGmzpghiA/YRtD6fAE5dI/AAAAAAAFBLI/3ki4txjAgrw_TNDSmfvAbrKvvmB2YhxiACLcBGAsYHQ/s450/2021-0817-080942.png&quot; title=&quot;2021-0817-080942.png&quot; alt=&quot;2021-0817-080942.png&quot; width=&quot;450&quot; height=&quot;361&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候可以看到下面的影片輸出設定有所改變。從這裡我們可以看到預先配置「Android 480p30」的影片格式爲H.264、聲音格式爲AAC。原本是1080p的解析度，也預計會被轉換爲480p，對應到16:9就是720x480解析度。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h3&gt;3. 設定儲存檔案名稱與資料夾 / Filename and destination&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-DAh5asHyMOg/YRtD6JIF8yI/AAAAAAAFBK4/7fqddAYYO-MXHhE-7TcOT2b4IoHDEFM3wCLcBGAsYHQ/s1600/2021-0817-081223.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-DAh5asHyMOg/YRtD6JIF8yI/AAAAAAAFBK4/7fqddAYYO-MXHhE-7TcOT2b4IoHDEFM3wCLcBGAsYHQ/s450/2021-0817-081223.png&quot; title=&quot;2021-0817-081223.png&quot; alt=&quot;2021-0817-081223.png&quot; width=&quot;450&quot; height=&quot;361&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最下面的「&lt;b&gt;Save As:&lt;/b&gt;」可以設定輸出的檔案名稱，預設是使用原本的檔案名稱「video.mp4」配上預訂要轉換的影片格式，就成爲了「video.mkv」。&lt;/p&gt;
&lt;p&gt;而右邊的「To:」則可以設定儲存的資料夾，這邊我是設定儲存在Linux的暫存資料夾「/tmp」裡。&lt;/p&gt;
&lt;h3&gt;4. 開始轉換 / Start to convert&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-HqDBU7a6oY4/YRtD6BsnbPI/AAAAAAAFBLA/SFgNjEOPTi454IZwAE5P_-wdVTCSdx-VACLcBGAsYHQ/s1600/2021-0817-111000.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-HqDBU7a6oY4/YRtD6BsnbPI/AAAAAAAFBLA/SFgNjEOPTi454IZwAE5P_-wdVTCSdx-VACLcBGAsYHQ/s450/2021-0817-111000.png&quot; title=&quot;2021-0817-111000.png&quot; alt=&quot;2021-0817-111000.png&quot; width=&quot;450&quot; height=&quot;361&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;設定完成後，我們可以按下上方的「Start」按鈕開始轉換。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-E4539Vj4vLs/YRtD6EZl3vI/AAAAAAAFBK8/BADTvYzAEPEK6Lgx6lc1pEYAs_0XsM6FQCLcBGAsYHQ/s1600/2021-0817-110919.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-E4539Vj4vLs/YRtD6EZl3vI/AAAAAAAFBK8/BADTvYzAEPEK6Lgx6lc1pEYAs_0XsM6FQCLcBGAsYHQ/s450/2021-0817-110919.png&quot; title=&quot;2021-0817-110919.png&quot; alt=&quot;2021-0817-110919.png&quot; width=&quot;450&quot; height=&quot;362&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;等待一段時間，HandBrake轉換完成後就會跳出通知。&lt;/p&gt;
&lt;h3&gt;5. 查看檔案 / Output video&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-bdElE4MXyJs/YRtD6Mmrn8I/AAAAAAAFBK0/YRxwentzl3IU32QZcs19I2fGyY4Jdm_iACLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817082756b.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-bdElE4MXyJs/YRtD6Mmrn8I/AAAAAAAFBK0/YRxwentzl3IU32QZcs19I2fGyY4Jdm_iACLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817082756b.png&quot; title=&quot;DeepinScreenshot_select-area_20210817082756b.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817082756b.png&quot; width=&quot;450&quot; height=&quot;189&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打開前面設定的儲存資料夾，我們可以看到「video.m4v」已經放在此處。經過HandBrake的轉換，大雄兔5秒影片已經從1.9MB的「video.mp4」轉換成466.4KB的「video.m4v」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-bdY3v8ZEdhw/YRtD6BCRxrI/AAAAAAAFBLE/3lPI7L4CrOgBf1to4GaYlVhjw12fFWy0QCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817082845.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-bdY3v8ZEdhw/YRtD6BCRxrI/AAAAAAAFBLE/3lPI7L4CrOgBf1to4GaYlVhjw12fFWy0QCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817082845.png&quot; title=&quot;DeepinScreenshot_select-area_20210817082845.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817082845.png&quot; width=&quot;450&quot; height=&quot;311&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;讓我們打開「video.m4v」影片來看看。可以發現影片解析度已經從原本的1080p縮小爲480p。&lt;/p&gt;
&lt;p&gt;這樣我們使用HandBrake轉換影片格式的任務就完成囉。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;其他功能 / Features&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-yT56Gw8bow8/YRtD_OtcGfI/AAAAAAAFBLg/21nH7I-gcDc37gLyBAB3PvsvOJPx2i5EACLcBGAsYHQ/s1600/2021-0817-125226.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-yT56Gw8bow8/YRtD_OtcGfI/AAAAAAAFBLg/21nH7I-gcDc37gLyBAB3PvsvOJPx2i5EACLcBGAsYHQ/s450/2021-0817-125226.png&quot; title=&quot;2021-0817-125226.png&quot; alt=&quot;2021-0817-125226.png&quot; width=&quot;450&quot; height=&quot;361&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在前面「2. 選擇目標格式」中，我們使用的是預先設定的影片參數「Android 480p30」，不過選擇了預先設定的參數後，我們還可以進一步針對影片尺寸(Dimensions)、濾鏡(Filters)、影片(Video)、聲音(Audio)、字幕(Subtitles)、章節(Chapters)、影片資訊(Tags)各種細節來做調整。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-SJ1X6Uz8exg/YRtD-zZsxGI/AAAAAAAFBLc/XkSb2BB1ZQg2_9x8TFatDnKUWA7rAtnoQCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817123355.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-SJ1X6Uz8exg/YRtD-zZsxGI/AAAAAAAFBLc/XkSb2BB1ZQg2_9x8TFatDnKUWA7rAtnoQCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817123355.png&quot; title=&quot;DeepinScreenshot_select-area_20210817123355.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817123355.png&quot; width=&quot;450&quot; height=&quot;363&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上圖是影片尺寸(Dimensions)的設定畫面。如果我們修改了影片的比例，例如從16:9改成4:3，那我們可以使用裁切(Cropping)來調整畫面。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Z_QAhcJGAiA/YRtD-0CtzEI/AAAAAAAFBLY/nHcsdBIK7b0QlC8CGjCFbHmXyFHwpbHlgCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817123556.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Z_QAhcJGAiA/YRtD-0CtzEI/AAAAAAAFBLY/nHcsdBIK7b0QlC8CGjCFbHmXyFHwpbHlgCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817123556.png&quot; title=&quot;DeepinScreenshot_select-area_20210817123556.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817123556.png&quot; width=&quot;450&quot; height=&quot;360&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上圖是濾鏡(Filters)的設定畫面。可以設定隔行掃描過濾(Detelecine)、交錯偵測(interlace detection)、反交錯(deinterlace)、去區塊(deblock)、降噪濾鏡(denoise filter)、銳利化濾鏡(sharpen filter)、轉向濾鏡(rotate filter)、灰階化(grayscale)。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-t_XQg_DRYjI/YRtD_PHxoeI/AAAAAAAFBLk/i0ocRvC61IUUv9VnG0lx6RpOY3OYrB0IQCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817124530.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-t_XQg_DRYjI/YRtD_PHxoeI/AAAAAAAFBLk/i0ocRvC61IUUv9VnG0lx6RpOY3OYrB0IQCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817124530.png&quot; title=&quot;DeepinScreenshot_select-area_20210817124530.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817124530.png&quot; width=&quot;450&quot; height=&quot;362&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上圖是影片(video)的設定畫面。可以設定編碼器(video encoder)、幀率(framerate)，以及各種編碼的參數。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-1qWP_ndsoBk/YRtD_CZxF3I/AAAAAAAFBLs/8S8YN0iN1qYifOYZgFK4oGgojVzWLEFWACLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817124825.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-1qWP_ndsoBk/YRtD_CZxF3I/AAAAAAAFBLs/8S8YN0iN1qYifOYZgFK4oGgojVzWLEFWACLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817124825.png&quot; title=&quot;DeepinScreenshot_select-area_20210817124825.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817124825.png&quot; width=&quot;450&quot; height=&quot;365&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上圖是聲音(audio)的設定畫面。在這裡我們設定多個音軌，也可以爲各個音軌的聲音進行編碼設定。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-iQK_z_SPSkM/YRtD_D04DVI/AAAAAAAFBLo/J595hYFXq_0GThPHAq_BO16IcQEHPNC_QCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817124948.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-iQK_z_SPSkM/YRtD_D04DVI/AAAAAAAFBLo/J595hYFXq_0GThPHAq_BO16IcQEHPNC_QCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817124948.png&quot; title=&quot;DeepinScreenshot_select-area_20210817124948.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817124948.png&quot; width=&quot;450&quot; height=&quot;361&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上圖是字幕(subtitles)的設定畫面。在這裡我們可以設定影片中的多個字幕，也能對字幕的細節進行設定。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-NRUd7sxpn1s/YRtEB9hQ4uI/AAAAAAAFBLw/wUk78lrdZmkfP0sIyMWP3RpWukWU9pXKQCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817125302.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-NRUd7sxpn1s/YRtEB9hQ4uI/AAAAAAAFBLw/wUk78lrdZmkfP0sIyMWP3RpWukWU9pXKQCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817125302.png&quot; title=&quot;DeepinScreenshot_select-area_20210817125302.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817125302.png&quot; width=&quot;450&quot; height=&quot;362&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上圖是章節(Chapters)的設定畫面。這裡我們可以爲影片設定章節，標示章節的開頭與結尾。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-HAty75SD1rs/YRtECAQquqI/AAAAAAAFBL0/L2ArEsFvz6IL-5SOHhaCCnYErL006_NWwCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210817125442.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-HAty75SD1rs/YRtECAQquqI/AAAAAAAFBL0/L2ArEsFvz6IL-5SOHhaCCnYErL006_NWwCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210817125442.png&quot; title=&quot;DeepinScreenshot_select-area_20210817125442.png&quot; alt=&quot;DeepinScreenshot_select-area_20210817125442.png&quot; width=&quot;450&quot; height=&quot;363&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最後上圖是影片資訊(Tags)的設定畫面。這裡可以設定影片的標題、作者、敘述等資訊。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-66RoPxRDWY8/YRvXFdmhiYI/AAAAAAAFBMU/cylddkTD7_g7MwBLoN07Qqcvz6_TtqbzwCLcBGAsYHQ/s1600/2021-0817-133834.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-66RoPxRDWY8/YRvXFdmhiYI/AAAAAAAFBMU/cylddkTD7_g7MwBLoN07Qqcvz6_TtqbzwCLcBGAsYHQ/s450/2021-0817-133834.png&quot; title=&quot;2021-0817-133834.png&quot; alt=&quot;2021-0817-133834.png&quot; width=&quot;450&quot; height=&quot;361&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我本來是Windows的使用者。雖然我知道Linux已經有很多可以使用的圖形化應用程式，但下意識還是認爲Linux還是應該會偏向用指令操作。這次HandBrake用下來，我非常驚訝Linux居然已經有這麼成熟、好用的應用程式，而且它也是Windows和MacOS都能操作的跨平臺工具。MacOS的使用者可以參考電腦王阿達的「&lt;a href=&quot;https://www.kocpc.com.tw/archives/125004&quot;&gt;Handbrake極為強大的免費影片轉檔軟體工具！耗費13年正式版終於上線&lt;/a&gt;」一篇。Windows的使用者也可以看看阿榮福利味「&lt;a href=&quot;https://www.azofreeware.com/2015/03/handbrake-portable.html&quot;&gt;HandBrake 1.4.0 免安裝版 - 影片轉MKV或MP4免費自由軟體&lt;/a&gt;」的介紹。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次多媒體影片格式轉檔工具HandBrake的教學就到這裡了。寫到最後，我來問個使用影片轉檔之前的問題：&lt;/p&gt;
&lt;p&gt;&lt;b&gt;你都是用什麼方式觀看影片呢？&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A. 我都用線上串流觀看影片，例如YouTube、NetFlix。&lt;/li&gt;
  &lt;li&gt;B. 我都用電腦內的影片檔觀看影片，例如MP4、MKV。&lt;/li&gt;
  &lt;li&gt;C. 我都用光碟觀看影片，例如DVD、藍光。&lt;/li&gt;
  &lt;li&gt;D. 我都用其他方式看影片，留言說說你的做法吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在&lt;a href=&quot;#comment-editor&quot;&gt;下面的留言處&lt;/a&gt;跟大家分享你的想法。你的意見都是我繼續分享的動力喔！&lt;/p&gt;
&lt;p&gt;如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚，或是將這篇分享到Facebook等社群媒體吧！想在社群媒體追蹤我的話，歡迎到我的Facebook粉絲專頁「&lt;a href=&quot;https://www.facebook.com/pulipuli.blogspot&quot; target=&quot;FB&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;」按個讚喔！&lt;/p&gt;
&lt;p&gt;不知道這篇文章有沒有讓你吃到什麼有趣的東西呢？我是布丁，期待下次見！&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/6137952730823343489/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2021/08/linuxhandbrake-handbrake-video.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/6137952730823343489'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/6137952730823343489'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2021/08/linuxhandbrake-handbrake-video.html' title='Linux的多媒體影片格式轉檔工具：HandBrake / HandBrake: A Video Transcoder in Linux'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//lh3.googleusercontent.com/-TQxrZDlfIxY/YRvXFa5DCYI/AAAAAAAFBMY/c96of0tXgwwKvj3e2z9sd_0XbkXhOPdpwCLcBGAsYHQ/s72-c/2-cover-Linux_HandBrake_HandBrake_A_Video.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-3662613635777743948</id><published>2021-08-10T07:15:00.002+08:00</published><updated>2021-08-10T07:15:49.345+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Linux"/><category scheme="http://www.blogger.com/atom/ns#" term="OS/Chromebook"/><category scheme="http://www.blogger.com/atom/ns#" term="OS/Linux"/><category scheme="http://www.blogger.com/atom/ns#" term="Sponsored"/><category scheme="http://www.blogger.com/atom/ns#" term="作業系統/Linux"/><title type='text'>在Chromebook配置適合開發者的Linux桌面環境吧！ASUS Chromebook Flip CX5華麗上陣 / Installing a Linux Desktop Environment on ASUS Chromebook Flip CX5</title><content type='html'>&lt;p style=&quot;text-align: left;&quot;&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-d5Ig95VNC7Y/YP5n08BLwjI/AAAAAAAFBDU/sxfOkHhWTWIjZViMw5j0JT1IhlCFttMWQCLcBGAsYHQ/s1600/image-template-20210726-1542.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-d5Ig95VNC7Y/YP5n08BLwjI/AAAAAAAFBDU/sxfOkHhWTWIjZViMw5j0JT1IhlCFttMWQCLcBGAsYHQ/s1600/image-template-20210726-1542.png&quot; title=&quot;image-template-20210726-1542.png&quot; alt=&quot;image-template-20210726-1542.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;近年來各家Chromebook大廠嗅到了商務市場與居家遠端辦公的商機，紛紛推出了尺寸較大、規格更高級的Chromebook。高階的Chromebook不僅能夠讓原本Chrome作業系統的效能更好，讓使用者能夠同時安裝與開啓更多的Android應用程式之外，還能夠透過crouton，配置適合開發者的Linux桌面環境。在Linux作業系統已經成為&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#technology-platforms&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;全球開發者首選平臺&lt;/a&gt;的今日，Linux桌面環境可能會成為吸引開發者使用Chromebook的另一個特色。&lt;/p&gt;
&lt;p&gt;哈囉，大家最近吃了什麼呢？我是一邊擺出「&lt;a href=&quot;http://www.u-acg.com/archives/16650&quot; target=&quot;_blank&quot;&gt;= U =&lt;/a&gt;」的笑臉、一邊開心地吃著Chromebook的布丁。今天就讓我來看看ASUS近期推出的高階Chromebook：&lt;a href=&quot;https://www.asus.com/tw/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-CX5-CX5500/&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px;&quot;&gt;ASUS Chromebook Flip CX5 (CX5500)&lt;/a&gt;，到底如何要怎麼在Google Chrome瀏覽器爲主的Chrome作業系統中，配置適合開發者的Linux桌面環境吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;前言：從小台的Chromebook邁向大尺寸的高階Chromebook / Introduction: Toward high-level Chromebooks&lt;/h2&gt;
&lt;p&gt;以往說到Chromebook，你的印象是什麼呢？&amp;nbsp;Chromebook從一開始被定位為教育市場給學生使用的小台筆電，逐漸走向能夠滿足開發者需求的高階商務市場。在介紹&lt;a href=&quot;https://www.asus.com/tw/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-CX5-CX5500/&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); font-weight: 400; background-color: rgb(255, 255, 255); outline: 0px;&quot;&gt;ASUS Chromebook Flip CX5 (CX5500)&lt;/a&gt;之前，先讓我們回顧一下目前Chromebook的發展吧。&lt;/p&gt;
&lt;h3&gt;教育市場的Chromebook / Chromebooks for the education market&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-oZoEK7HrsGs/YMyy6N0WXuI/AAAAAAAE_kE/DQj-wYjkOBgNjDyIF1wF0t5JWjHoon9LwCLcBGAsYHQ/s1600/main.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-oZoEK7HrsGs/YMyy6N0WXuI/AAAAAAAE_kE/DQj-wYjkOBgNjDyIF1wF0t5JWjHoon9LwCLcBGAsYHQ/s450/main.jpg&quot; title=&quot;main.jpg&quot; alt=&quot;main.jpg&quot; width=&quot;450&quot; height=&quot;277&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.asus.com/tw/Commercial-Laptops/ASUS-Chromebook-Flip-C214MA/&quot; target=&quot;_blank&quot;&gt;ASUS&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;很多人對於Chromebook的初次印象都是來自學校。根據&lt;a href=&quot;https://www.ithome.com.tw/node/78696&quot; target=&quot;_blank&quot;&gt;iThome的報導&lt;/a&gt;，Chromebook廣受教育市場歡迎的主要原因在於價格便宜。以&lt;a href=&quot;https://www.asus.com/tw/Commercial-Laptops/ASUS-Chromebook-Flip-C214MA/&quot; target=&quot;_blank&quot;&gt;ASUS Chromebook Flip C214&lt;/a&gt;來說，一台1萬3的價格就能買到具有觸控螢幕、能夠變成筆電與平板的兩種形態、內建觸控筆、還有那個好拿又耐用的外形設計，ASUS Chromebook Flip C214在教育市場有著強大的競爭力。&lt;/p&gt;
&lt;p&gt;Chromebook內建以Google Chrome瀏覽器為主的Chrome作業系統，能讓瀏覽器以相當快的速度開啟和運作網頁。瀏覽器運作效率之高，常常忘記大多數Chromebook內建的都是&lt;a href=&quot;https://www.asus.com/tw/Commercial-Laptops/ASUS-Chromebook-Flip-C214MA/specifications/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;以省電、低功耗為主的CPU&lt;/a&gt;而已。不僅如此，Chromebook內建了Android和Linux兩種作業系統，讓你可以左擁&lt;a href=&quot;https://play.google.com/store&quot; target=&quot;_blank&quot;&gt;Google Play&lt;/a&gt;中的大量應用程式，還能夠右抱Linux中廣受開發者歡迎的指令列和各種套件。豐富的應用程式皆可信手拈來。&lt;/p&gt;
&lt;p&gt;學校喜歡Chromebook的另一個重要原因，是Chromebook這種以雲端為主的作業系統能夠方便管理和更新，而且正常使用下完全不用擔心&lt;a href=&quot;https://cbookreviewguide.com/chromebook-virus-and-antivirus-software/&quot; target=&quot;_blank&quot;&gt;病毒攻擊和勒索&lt;/a&gt;。易入手又耐用的Chromebook，受到教育市場的歡迎，也是理所當然的事情。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-9ThJMbx2Xe4/YNAwf-kz88I/AAAAAAAE_x8/MjghhlqxlxMMEzPbv2LiTlFgk1OaPMsGACLcBGAsYHQ/s1600/Screenshot_2021-06-21_1.39.55_PM.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-9ThJMbx2Xe4/YNAwf-kz88I/AAAAAAAE_x8/MjghhlqxlxMMEzPbv2LiTlFgk1OaPMsGACLcBGAsYHQ/s450/Screenshot_2021-06-21_1.39.55_PM.png&quot; title=&quot;Screenshot_2021-06-21_1.39.55_PM.png&quot; alt=&quot;Screenshot_2021-06-21_1.39.55_PM.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然而，學校因為易入手與耐用而偏好購買Chromebook是一回事，但真正要拿Chromebook作為工作使用的日常筆電時，又是另外一回事。面向教育市場的Chromebook往往僅配備4GB記憶體和32GB儲存空間，這些空間會被Chrome作業系統核心與Android虛擬機器佔去一大部分。如果在這樣有限的空間中又要使用Chrome作業系統內建的Linux開發環境(crostini)的話，&lt;a href=&quot;https://techwiser.com/expand-storage-for-linux-on-your-chromebook/amp/&quot; target=&quot;_blank&quot;&gt;最低建議儲存空間還要額外騰出5GB&lt;/a&gt;。因為儲存空間不足的關係，在我原本使用的&lt;a href=&quot;/2019/02/chromebook-chromebook-review-after-1.html&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;上，Linux開發環境一直被塵封在角落。&lt;/p&gt;
&lt;p&gt;在入門款Chromebook有限的記憶體和儲存空間中，可以做到的事情的確相當有限。更別說開發程式的時候，為了部屬開發環境與安裝大量相關套件，開發者對於儲存空間會有更大的需求。這些需求對我那小台的&lt;a href=&quot;/2019/02/chromebook-chromebook-review-after-1.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;來說，還是頗為勉強啊。&lt;/p&gt;
&lt;h3&gt;邁向高階的Chromebook /&amp;nbsp;Chromebooks for the high-end market&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-7Mj1X1iI4g4/YMyy6JJIJ8I/AAAAAAAE_kI/XashRS9cfNsYX2Zauymvqa6WRSEQFW5gQCLcBGAsYHQ/s1600/2021-0607-200440.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-7Mj1X1iI4g4/YMyy6JJIJ8I/AAAAAAAE_kI/XashRS9cfNsYX2Zauymvqa6WRSEQFW5gQCLcBGAsYHQ/s450/2021-0607-200440.png&quot; title=&quot;2021-0607-200440.png&quot; alt=&quot;2021-0607-200440.png&quot; width=&quot;450&quot; height=&quot;294&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.asus.com/tw/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-CX5-CX5500/&quot; target=&quot;_blank&quot;&gt;ASUS&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;為了克服入門款Chromebook的使用限制，Chromebook的使用者把目光放到了高階的Chromebook身上。&lt;/p&gt;
&lt;p&gt;早期較為高階的Chromebook中，最知名的應該是2017年的&lt;a href=&quot;https://www.google.com/chromebook/device/google-pixelbook/&quot; target=&quot;_blank&quot;&gt;Google Pixelbook&lt;/a&gt;。12.3吋高解析度的螢幕，最高搭載到Intel Core i7、RAM 16GB、SSD 512GB的頂級硬體配置，以及Google親兒子的優先更新，Pixelbook可說是當年所有Chromebook的頂點。不過Google後來推出的二合一平板&lt;a href=&quot;https://www.wikiwand.com/zh-tw/Pixel_Slate&quot; target=&quot;_blank&quot;&gt;Pixel Slate&lt;/a&gt;跟不可變形的筆電&lt;a href=&quot;https://www.google.com/chromebook/device/google-pixelbook-go/&quot; target=&quot;_blank&quot;&gt;Pixelbook Go&lt;/a&gt;，卻越來越走向中階規格的親民市場。&lt;/p&gt;
&lt;p&gt;相較之下，這幾年Chromebook的高階市場主要是由第三方廠商大展拳腳，其中一款就是2021年ASUS推出的&lt;a href=&quot;https://www.asus.com/tw/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-CX5-CX5500/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Chromebook Flip CX5 (CX5500)&lt;/a&gt;。各種高階Chromebook不僅都具備了128GB以上的儲存空間與8GB以上的記憶體，CPU處理器也不是使用教育市場常見的Intel Celeron或Intel&amp;nbsp;Pentium，而是採用了高階筆電使用的Intel Core i5或i7。除此之外，有別於教育市場Chromebook大多是以11吋為主的小螢幕，ASUS高階Chromebook的螢幕尺寸都來到了14吋與15吋，更能夠符合開發者的需求。&lt;/p&gt;
&lt;h3&gt;居家辦公的Chromebook /&amp;nbsp;Chromebooks for working from home&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-47jFUMUTwCE/YP3HFzFJB-I/AAAAAAAFBAI/5sDAeVMiWt4MAEB9C4Pq5C7QAsCS38xmQCLcBGAsYHQ/s1600/20210726_040620_1.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-47jFUMUTwCE/YP3HFzFJB-I/AAAAAAAFBAI/5sDAeVMiWt4MAEB9C4Pq5C7QAsCS38xmQCLcBGAsYHQ/s450/20210726_040620_1.jpg&quot; title=&quot;20210726_040620.jpg&quot; alt=&quot;20210726_040620.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;是的，Chromebook發展到現在，除了入門款強調的便攜印象之外，高階Chromebook更是帶來了新的突破發展。儘管螢幕尺寸的增加降低了Chromebook的攜帶便利性，但同時也讓Chromebook成為更適合擺在書桌上，連接其他螢幕、鍵盤與滑鼠的固定工作站。而且比起帶著Chromebook到外面趴趴走，在這個疫情期間更適合待在家裡就地開工。宅在家救臺灣，正是現在流行的趨勢。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;不過，我手邊的&lt;a href=&quot;/2019/02/chromebook-chromebook-review-after-1.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;螢幕太小、效能和儲存空間也不太符合我的需求。如果要真的把Chromebook作為開發程式的工作站，我勢必得要改用更高階的Chromebook才行。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-EPjG3Y8Zr1E/YMyzE4dAwlI/AAAAAAAE_k8/6XpeXqxphPYqWmQ_R22C7C43SB2tBFUIgCLcBGAsYHQ/s1600/20210606_185923.jpg&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-EPjG3Y8Zr1E/YMyzE4dAwlI/AAAAAAAE_k8/6XpeXqxphPYqWmQ_R22C7C43SB2tBFUIgCLcBGAsYHQ/s450/20210606_185923.jpg&quot; title=&quot;20210606_185923.jpg&quot; alt=&quot;20210606_185923.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;剛好，ASUS也為了居家辦公的商務市場推出了高階的Chromebook：&lt;a href=&quot;https://www.asus.com/tw/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-CX5-CX5500/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip CX5 (CX5500)&lt;/a&gt;。ASUS Chromebook Flip CX5 (CX5500)本身的設計可說是相當適合用作為固定的工作站。為什麼呢？因為ASUS Chromebook Flip CX5 (CX5500)有著15.6吋的大螢幕，並且螢幕三邊採用的NanoEdge窄邊框設計，高達81%的螢幕佔比讓機身與螢幕呈現出完美比例。此外，ASUS Chromebook Flip CX5 (CX5500)也搭載了最新的Intel第11代處理器Intel Core i5-1135G7與16GB LPDDR4X記憶體。更重要的是，它的儲存空間不是教育市場Chromebook那種16GB或32GB，而是一口氣內建了&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;256GB的高速SSD&lt;/b&gt;。&lt;/p&gt;
&lt;p&gt;哇，ASUS你真的很懂我耶。讓我們就來看看&lt;a href=&quot;https://www.asus.com/tw/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-CX5-CX5500/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip CX5 (CX5500)&lt;/a&gt;這台全新高規格設計的Chromebook，能給我們帶來怎樣的體驗吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;規格 / Specification&lt;/h2&gt;
&lt;p&gt;首先先讓我們來看看ASUS Chromebook Flip CX5 (CX5500)的主要規格。&lt;a href=&quot;https://chinese.engadget.com/asus-chromebook-flip-cx5-181035878.html&quot;&gt;ASUS在2021年年初就已經發佈了&lt;/a&gt;&lt;a href=&quot;https://chinese.engadget.com/asus-chromebook-flip-cx5-181035878.html&quot;&gt;Chromebook Flip CX5&lt;/a&gt;，當時只有在國外市場發售。根據&lt;a href=&quot;https://www.asus.com/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-CX5-CX5500/&quot;&gt;ASUS英文網站的說明&lt;/a&gt;來看，Chromebook Flip CX5在海外發售的型號分成了三種，各別是Intel Core i3、Intel Core i5與Intel Core i7。而儲存空間也有128GB、256GB與512GB三種不同。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Rza18A7E5Qw/YP12goxEFyI/AAAAAAAFA9I/RZi9vHzAJ78r_1KUgZPJDphab-CqKQDHgCLcBGAsYHQ/s1600/20210725_170619.jpg&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-Rza18A7E5Qw/YP12goxEFyI/AAAAAAAFA9I/RZi9vHzAJ78r_1KUgZPJDphab-CqKQDHgCLcBGAsYHQ/s450/20210725_170619.jpg&quot; title=&quot;20210725_170619.jpg&quot; alt=&quot;20210725_170619.jpg&quot; width=&quot;446&quot; height=&quot;450&quot;&gt;&lt;/a&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-fE9EMlaopl8/YP12gu5RiQI/AAAAAAAFA9A/HZo6qPDD2Box3Oxv3QHL6zo5VobDop5SwCLcBGAsYHQ/s1600/20210725_212436.jpg&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;臺灣市場目前銷售的版本是Intel Core i5搭配256GB儲存空間的型號。我手邊拿到的是CX5500FE。就讓我們配合&lt;a href=&quot;https://www.asus.com/tw/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-CX5-CX5500/techspec/&quot;&gt;ASUS官網&lt;/a&gt;的產品規格表格，搭配說明文件的資訊，整理一下它的主要規格吧。&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;table table-bordered&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;材質/顏色&lt;/td&gt;
      &lt;td&gt;純粹白的機殼，純粹黑的內部設計&lt;br&gt;&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;陶瓷感鋁合金上蓋&lt;/span&gt;&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;作業系統&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;Chrome&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;處理器&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: bold;&quot;&gt;第11代Intel® Core™ i5-1135G7 處理器 &lt;/span&gt;&lt;br&gt;0.9-2.4 GHz (8M 快取，最高 4.2 GHz)&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;顯示晶片&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;Intel® Iris Xe Graphics&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;螢幕&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;
        &lt;div&gt;
          &lt;div&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: bold;&quot;&gt;15.6 吋&lt;/span&gt;, FHD (1920 x 1080)16:9比例&lt;/div&gt;
          &lt;div&gt;IPS-level Panel 鏡面顯示器 LED 背光&lt;/div&gt;
          &lt;div&gt;250 尼特&lt;/div&gt;
          &lt;div&gt;NTSC: 45%&lt;/div&gt;
          &lt;div&gt;觸控螢幕&lt;/div&gt;
          &lt;div&gt;支援觸控筆&lt;/div&gt;
        &lt;/div&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;記憶體&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;16G LPDDR4X&lt;/span&gt; on board&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;儲存空間&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;256GB&lt;/span&gt; M.2 NVMe™ PCIe® 3.0 SSD&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;介面&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;color: rgb(77, 77, 77);&quot;&gt;2x USB 3.2 Gen 2 Type-C 支援顯示/供電/充電&lt;br&gt;(Type-C DisplayPort Alternate Mode, DP Alt Mode)&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;color: rgb(77, 77, 77);&quot;&gt;1x USB 3.2 Gen 2 Type-A&lt;/span&gt;&lt;br style=&quot;color: rgb(77, 77, 77);&quot;&gt;&lt;span style=&quot;color: rgb(77, 77, 77);&quot;&gt;1x HDMI 2.0a&lt;/span&gt;&lt;br style=&quot;color: rgb(77, 77, 77);&quot;&gt;&lt;span style=&quot;color: rgb(77, 77, 77);&quot;&gt;Micro SD 卡讀卡機&lt;/span&gt;&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;鍵盤&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;背光巧克力鍵盤&lt;br&gt;1.4mm鍵程&lt;br&gt;&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;附數字鍵&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;觸控板&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span class=&quot;&quot;&gt;129 x 65 mm&lt;/span&gt;的大面積觸控板&lt;br&gt;支援多點觸控&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;攝影機&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;720p HD camera&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;音效&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;內建喇叭，採用Smart AMP技術&lt;br&gt;具備h&lt;font color=&quot;#4d4d4d&quot; face=&quot;Myriad W08 Regular, Segoe UI, Arial, Microsoft JhengHei, Microsoft Yahei, SF Pro TC, SF Pro Text, PingFang TC, sans-serif&quot;&gt;arman / ka&lt;/font&gt;&lt;span style=&quot;color: rgb(77, 77, 77);&quot;&gt;rdon美國音響領導品牌認證&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;color: rgb(77, 77, 77);&quot;&gt;內建陣列麥克風，具背景雜訊降噪功能&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(77, 77, 77);&quot;&gt;支援Google Assistant語音辨識&lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;電池&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;57WHrs，3S1P，3 芯鋰離子&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;電源&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;採用USB Type-C接口，支援USB-PD充電&lt;br&gt;變壓器爲45W AC&lt;br&gt;輸出：15V DC，3A，45W&lt;br&gt;輸入：100~240V AC 50/60Hz 萬用&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;重量&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;1.95 kg (4.30 lbs)&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;尺寸 (寬 x 長 x 高)&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;357.6 x 240.8 x 18.5 mm&lt;br&gt;(14.08&quot; x 9.48&quot; x 0.73&quot;)&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;自動更新到期日&lt;br&gt;(Auto Update Expiration, AUE)&lt;/td&gt;
      &lt;td&gt;2029年6月&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;保固&lt;/td&gt;
      &lt;td&gt;筆電保固2年(本地到府維修) (&lt;a href=&quot;https://www.asus.com/tw/support/warranty-status-inquiry/&quot; target=&quot;_blank&quot;&gt;查詢保固狀態&lt;/a&gt;)&lt;br&gt;電池保固1年&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在ASUS Chromebook Flip CX5 (CX5500)的規格中，有個細節引起了我的注意。ASUS&amp;nbsp;Chromebook Flip CX5 (CX5500)的儲存空間採用的是M.2 NVMe™ PCIe® 3.0 SSD，而不是教育市場Chromebook常見的eMMC規格。根據&lt;a href=&quot;https://www.atpinc.com/blog/nvme-vs-sata-ssd-pcie-interface&quot;&gt;ATP的說明&lt;/a&gt;，M.2 NVMe™ PCIe® 3.0 SSD的讀取速度大於3000MB/s，而寫入速度也能達到2000MB/s。相較之下，&lt;a href=&quot;https://www.partitionwizard.com/clone-disk/emmc-vs-ssd-005.html&quot;&gt;根據MiniTool的說法&lt;/a&gt;，eMMC通常傳輸速度只有400MB/s而已，而且儲存空間也遠比SSD來得小得多。&lt;/p&gt;
&lt;p&gt;光看儲存空間這點，就可以感受到ASUS Chromebook Flip CX5 (CX5500)身上具有的高階Chromebook血統。但ASUS&amp;nbsp;Chromebook Flip CX5 (CX5500)的特色可不只如此。接下來就讓我們一邊開箱，一邊看看ASUS&amp;nbsp;Chromebook Flip CX5 (CX5500)的特別之處吧！&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;開箱 / Unbox&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-AQbtZ2jkqC8/YMyzAwemroI/AAAAAAAE_kg/DgbCgza5D-0wielY5yBXc0_GYF6zL6xxACLcBGAsYHQ/s1600/IMG_20210606_175501_HDR.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-AQbtZ2jkqC8/YMyzAwemroI/AAAAAAAE_kg/DgbCgza5D-0wielY5yBXc0_GYF6zL6xxACLcBGAsYHQ/s450/IMG_20210606_175501_HDR.jpg&quot; title=&quot;IMG_20210606_175501_HDR.jpg&quot; alt=&quot;IMG_20210606_175501_HDR.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;開箱囉！讓我們先來看看箱子的正面吧。這是華碩筆電一貫的包裝設計。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-2qKWyJKqlv0/YMyzBH7zCMI/AAAAAAAE_ko/EowEh6fhJsMj3u2ZfajNU6iXO2jJNGcxQCLcBGAsYHQ/s1600/IMG_20210606_175240_HDR.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-2qKWyJKqlv0/YMyzBH7zCMI/AAAAAAAE_ko/EowEh6fhJsMj3u2ZfajNU6iXO2jJNGcxQCLcBGAsYHQ/s450/IMG_20210606_175240_HDR.jpg&quot; title=&quot;IMG_20210606_175240_HDR.jpg&quot; alt=&quot;IMG_20210606_175240_HDR.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;箱子的背後。這裡可以看得到產品型號的詳細內容。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Rza18A7E5Qw/YP12goxEFyI/AAAAAAAFA9I/RZi9vHzAJ78r_1KUgZPJDphab-CqKQDHgCLcBGAsYHQ/s1600/20210725_170619.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Rza18A7E5Qw/YP12goxEFyI/AAAAAAAFA9I/RZi9vHzAJ78r_1KUgZPJDphab-CqKQDHgCLcBGAsYHQ/s450/20210725_170619.jpg&quot; title=&quot;20210725_170619.jpg&quot; alt=&quot;20210725_170619.jpg&quot; width=&quot;446&quot; height=&quot;450&quot;&gt;&lt;/a&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-fE9EMlaopl8/YP12gu5RiQI/AAAAAAAFA9A/HZo6qPDD2Box3Oxv3QHL6zo5VobDop5SwCLcBGAsYHQ/s1600/20210725_212436.jpg&quot;&gt;&amp;nbsp;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;型號的內容跟前面的規格一致。對了，現在的Chromebook都沒有光碟機的配置喔。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-yOJKBTd5eG8/YMyzBCUAuII/AAAAAAAE_kc/KIDzHApUtjUQ8_nucs0ShsntEbXqddqkgCLcBGAsYHQ/s1600/IMG_20210606_175714.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-yOJKBTd5eG8/YMyzBCUAuII/AAAAAAAE_kc/KIDzHApUtjUQ8_nucs0ShsntEbXqddqkgCLcBGAsYHQ/s450/IMG_20210606_175714.jpg&quot; title=&quot;IMG_20210606_175714.jpg&quot; alt=&quot;IMG_20210606_175714.jpg&quot; width=&quot;338&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;那我們要來開箱囉！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-ptEg48F8i38/YMyzAqydCAI/AAAAAAAE_kY/1o1Ekbm9n3kAG6hPCANFUTKr2FxhN_8uwCLcBGAsYHQ/s1600/IMG_20210606_175831.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-ptEg48F8i38/YMyzAqydCAI/AAAAAAAE_kY/1o1Ekbm9n3kAG6hPCANFUTKr2FxhN_8uwCLcBGAsYHQ/s450/IMG_20210606_175831.jpg&quot; title=&quot;IMG_20210606_175831.jpg&quot; alt=&quot;IMG_20210606_175831.jpg&quot; width=&quot;338&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;咦，怎麼打不開？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-YHBBSr8lzRU/YMyzBECAAXI/AAAAAAAE_kk/sJ5kXckL4M4Nfub7GIEQqgqzFd83LSDGACLcBGAsYHQ/s1600/IMG_20210606_175822.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-YHBBSr8lzRU/YMyzBECAAXI/AAAAAAAE_kk/sJ5kXckL4M4Nfub7GIEQqgqzFd83LSDGACLcBGAsYHQ/s450/IMG_20210606_175822.jpg&quot; title=&quot;IMG_20210606_175822.jpg&quot; alt=&quot;IMG_20210606_175822.jpg&quot; width=&quot;338&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原來是要上下開啟的。這跟我當初買ASUS Chromebook Flip C213NA的包裝不一樣呢，難道這就是高階Chromebook的待遇嗎？&lt;/p&gt;
&lt;h3&gt;箱內配置 / Package&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-WN0ATcylK0A/YMyzErD3P9I/AAAAAAAE_k0/QVyt2K1a7M4_-BqTYxlneoq5RhLA1SlHQCLcBGAsYHQ/s1600/IMG_20210606_175900.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-WN0ATcylK0A/YMyzErD3P9I/AAAAAAAE_k0/QVyt2K1a7M4_-BqTYxlneoq5RhLA1SlHQCLcBGAsYHQ/s450/IMG_20210606_175900.jpg&quot; title=&quot;IMG_20210606_175900.jpg&quot; alt=&quot;IMG_20210606_175900.jpg&quot; width=&quot;338&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;像是打開Pizza盒一樣地開啟箱子後，映入眼簾的就是包著不織布包裝袋的白色Chromebook。上方寫著「IN SEARCH OF INCREDIBLE」的蓋子後面，似乎還有什麼東西？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-QRQRTpdOOT8/YMyzElverXI/AAAAAAAE_k4/5vNe6vi-gOUFrlw701Lgs2X9oEWaQAffgCLcBGAsYHQ/s1600/IMG_20210606_180144.jpg&quot;&gt; &lt;img src=&quot;//lh3.googleusercontent.com/-QRQRTpdOOT8/YMyzElverXI/AAAAAAAE_k4/5vNe6vi-gOUFrlw701Lgs2X9oEWaQAffgCLcBGAsYHQ/s450/IMG_20210606_180144.jpg&quot; title=&quot;IMG_20210606_180144.jpg&quot; alt=&quot;IMG_20210606_180144.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原來後面藏著ASUS Chromebook Flip CX5 (CX5500)的保護套。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-zTJ4eOejyjc/YMyzEtcjXbI/AAAAAAAE_lA/_dPAKlPk0ss0i6Fh8D1a6JQn1KTHEqFugCLcBGAsYHQ/s1600/IMG_20210606_180108_1.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-zTJ4eOejyjc/YMyzEtcjXbI/AAAAAAAE_lA/_dPAKlPk0ss0i6Fh8D1a6JQn1KTHEqFugCLcBGAsYHQ/s450/IMG_20210606_180108_1.jpg&quot; title=&quot;IMG_20210606_180108_1.jpg&quot; alt=&quot;IMG_20210606_180108_1.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;拿起筆電後，下面還有USI觸控筆跟相關文件。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-AQuMuPeS8Oo/YMyzErpLzEI/AAAAAAAE_kw/3byXrqjGlwgoP1AdR1BfkmxleVjSdJgngCLcBGAsYHQ/s1600/IMG_20210606_180225.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-AQuMuPeS8Oo/YMyzErpLzEI/AAAAAAAE_kw/3byXrqjGlwgoP1AdR1BfkmxleVjSdJgngCLcBGAsYHQ/s450/IMG_20210606_180225.jpg&quot; title=&quot;IMG_20210606_180225.jpg&quot; alt=&quot;IMG_20210606_180225.jpg&quot; width=&quot;338&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;右邊的盒子打開來，裡面放著充電器。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-EPjG3Y8Zr1E/YMyzE4dAwlI/AAAAAAAE_k8/6XpeXqxphPYqWmQ_R22C7C43SB2tBFUIgCLcBGAsYHQ/s1600/20210606_185923.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-EPjG3Y8Zr1E/YMyzE4dAwlI/AAAAAAAE_k8/6XpeXqxphPYqWmQ_R22C7C43SB2tBFUIgCLcBGAsYHQ/s450/20210606_185923.jpg&quot; title=&quot;20210606_185923.jpg&quot; alt=&quot;20210606_185923.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;筆電本體和所有配件拆開後的樣子。在看筆電本體之前，我們先來看看各個配件吧。&lt;/p&gt;
&lt;h3&gt;文件 / Manual&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Rj-plcxaf4o/YP12gvlknkI/AAAAAAAFA9E/JOx7DZ9CO0QHrOTUxC_fMk3lcQIRdvd3wCLcBGAsYHQ/s1600/20210725_195430_1.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-Rj-plcxaf4o/YP12gvlknkI/AAAAAAAFA9E/JOx7DZ9CO0QHrOTUxC_fMk3lcQIRdvd3wCLcBGAsYHQ/s450/20210725_195430_1.jpg&quot; title=&quot;20210725_195430.jpg&quot; alt=&quot;20210725_195430.jpg&quot; width=&quot;392&quot; height=&quot;450&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;讓我們先來看看文件的部分。文件有4份，各別是&lt;a href=&quot;https://www.asus.com/tw/support/premium_care/&quot; target=&quot;_blank&quot;&gt;ASUS Premium Care延長保固&lt;/a&gt;說明書、USI觸控筆ASUS PEN SA300的說明書、使用手冊、保固卡(Warranty Card)。&lt;/p&gt;
&lt;h3&gt;電源供應器 / Power&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-6o1s2ItRohY/YP12gvcZyyI/AAAAAAAFA88/dCt7YGDi6gkCIS-Wr4W2zS05MC4SqU0xACLcBGAsYHQ/s1600/20210725_200125.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-6o1s2ItRohY/YP12gvcZyyI/AAAAAAAFA88/dCt7YGDi6gkCIS-Wr4W2zS05MC4SqU0xACLcBGAsYHQ/s450/20210725_200125.jpg&quot; title=&quot;20210725_200125.jpg&quot; alt=&quot;20210725_200125.jpg&quot; width=&quot;450&quot; height=&quot;392&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著是ASUS Chromebook Flip CX5 (CX5500)的45W充電器。你可以注意到它的充電接孔是USB Type-C，而且另一端固定在變壓器上，並不是獨立的USB線材。ASUS Chromebook Flip CX5 (CX5500)跟現在大部分的Chromebook一樣，都支援&lt;a href=&quot;https://dacota.tw/blog/post/usb-power-delivery&quot; target=&quot;_blank&quot;&gt;USB Type-C Power Delivery (USB-PD)電源傳輸協定充電&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Aqiz6w65sCY/YNBFlHd3QPI/AAAAAAAE_yU/tsYAxkfUwIQ5NSn_0GpGTM-fO8ViLNZKgCLcBGAsYHQ/s1600/Screenshot_2021-06-18_5.09.05_PM.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Aqiz6w65sCY/YNBFlHd3QPI/AAAAAAAE_yU/tsYAxkfUwIQ5NSn_0GpGTM-fO8ViLNZKgCLcBGAsYHQ/s450/Screenshot_2021-06-18_5.09.05_PM.png&quot; title=&quot;Screenshot_2021-06-18_5.09.05_PM.png&quot; alt=&quot;Screenshot_2021-06-18_5.09.05_PM.png&quot; width=&quot;274&quot; height=&quot;447.758&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上圖是使用USB PD充電時，Chromebook的充電畫面。此外，支援USB PD的設備也具備向下相容的能力。就算你沒有USB PD的供電來源，你也可以拿手邊的USB Type-C的線材跟普通的USB充電器，直接給ASUS Chromebook Flip CX5 (CX5500)充電。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-oMwnlR8RcDU/YP2qab6cQOI/AAAAAAAFA_I/Q1fMbEYgnJ89AjNjkZ-_SeSgwnPgb6STACLcBGAsYHQ/s1600/2021-0726-021301.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-oMwnlR8RcDU/YP2qab6cQOI/AAAAAAAFA_I/Q1fMbEYgnJ89AjNjkZ-_SeSgwnPgb6STACLcBGAsYHQ/s450/2021-0726-021301.png&quot; title=&quot;2021-0726-021301.png&quot; alt=&quot;2021-0726-021301.png&quot; width=&quot;307&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;平時我大多都是用手機充電器直接給Chromebook充電。手機充電器常見的2A、Quick Charge，對Chromebook來說都是「低功率充電器」。接上非USB PD的供電來源時，Chromebook會提示你「已連接低功率充電器」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-NKrl1kQMGcI/YP12gwCCOXI/AAAAAAAFA9M/gS_mCNIAL9AQ3C88zmDy9DtLiEDI_XdCQCLcBGAsYHQ/s1600/20210725_201806.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-NKrl1kQMGcI/YP12gwCCOXI/AAAAAAAFA9M/gS_mCNIAL9AQ3C88zmDy9DtLiEDI_XdCQCLcBGAsYHQ/s450/20210725_201806.jpg&quot; title=&quot;20210725_201806.jpg&quot; alt=&quot;20210725_201806.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;從電源供應機上的標示可以看到，輸入為100V至240V，輸出則是3A與45W。插頭是台灣標準的2P插頭，沒有接地頭。插頭不可摺疊。&lt;/p&gt;
&lt;h3&gt;USI觸控筆 / USI stylus&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-lOn5iFrTgGs/YMyzIX881oI/AAAAAAAE_lU/UFyUSx4e238nGErcvuTHpIkO3ic_TmCagCLcBGAsYHQ/s1600/20210606_183036.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-lOn5iFrTgGs/YMyzIX881oI/AAAAAAAE_lU/UFyUSx4e238nGErcvuTHpIkO3ic_TmCagCLcBGAsYHQ/s450/20210606_183036.jpg&quot; title=&quot;20210606_183036.jpg&quot; alt=&quot;20210606_183036.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASUS Chromebook Flip CX5 (CX5500)的觸控筆為&lt;a href=&quot;https://www.eettaiwan.com/20161003nt01-universal-stylus-spec/&quot; target=&quot;_blank&quot;&gt;通用觸控筆聯盟USI (Universal Stylus Initiative) 1.0標準&lt;/a&gt;。採用USI 1.0標準的觸控筆具備筆畫壓力與按鍵等特性，不過因為它是一種主動式觸控筆(active stylus)，觸控筆本身需要電力供應。ASUS Chromebook Flip CX5 (CX5500)的USI觸控筆需要AAA 4號電池供電。&lt;/p&gt;
&lt;p&gt;附帶一提，現在Chromebook在不同的市場各別採用了不同的觸控筆標準。以教育市場導向的入門款Chromebook，例如&lt;a href=&quot;https://www.asus.com/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-C214/&quot; target=&quot;_blank&quot;&gt;ASUS Chromebook Flip C214&lt;/a&gt;，大多採用華康Wacom的電磁感應技術(Elector-Magnetic Resonance, EMR)。EMR屬於被動感應的電磁筆，筆本身不需要電池供電，也具有壓力感應，但準確度較差。&lt;/p&gt;
&lt;p&gt;高階的Chromebook大多採用了USI標準，具備4000階以上的壓力感應能力、低延遲、不需額外配對等特性，而且任何一支USI標準的觸控筆皆可用於任何支援USI標準的Chromebook上。如果你不喜歡ASUS Chromebook Flip CX5 (CX5500)內附的觸控筆，那也可以選擇採購其他的USI觸控筆。然而，USI觸控筆的價位並不便宜，目前市場的選擇也不多。既然ASUS Chromebook Flip CX5 (CX5500)的配件都含有USI觸控筆了，那我們就來看看這支觸控筆有什麼來頭吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-41pQ-qN5z0s/YMyzIR07F-I/AAAAAAAE_lQ/rFcusEUORdUXXItAT3bi-eED83UDMxerACLcBGAsYHQ/s1600/20210606_183145.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-41pQ-qN5z0s/YMyzIR07F-I/AAAAAAAE_lQ/rFcusEUORdUXXItAT3bi-eED83UDMxerACLcBGAsYHQ/s450/20210606_183145.jpg&quot; title=&quot;20210606_183145.jpg&quot; alt=&quot;20210606_183145.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;拆開觸控筆的盒子後，可以看到裡面有觸控筆本體和筆套。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-uPXA58ETS8o/YP12hK0eC6I/AAAAAAAFA9Q/qUhrPuvXFvoEvApsHFyxb_8kijtXPzSggCLcBGAsYHQ/s1600/20210725_204053.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-uPXA58ETS8o/YP12hK0eC6I/AAAAAAAFA9Q/qUhrPuvXFvoEvApsHFyxb_8kijtXPzSggCLcBGAsYHQ/s450/20210725_204053.jpg&quot; title=&quot;20210725_204053.jpg&quot; alt=&quot;20210725_204053.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;觸控筆的筆頭採用&lt;a href=&quot;https://linky.tw/19865/#i-4&quot; target=&quot;_blank&quot;&gt;樹脂材質&lt;/a&gt;，質地較硬，也比較耐用。筆尖的直徑大約是1公釐，也就是0.1公分。筆身的直徑大約是1公分。整個筆身的長度大約是13.9公分，比一般常用的原子筆略短。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-2cVDbvvib-U/YP12dmZs8KI/AAAAAAAFA80/-91rvON_cFAprDIeqH3jwvj7iF1Fz_vawCLcBGAsYHQ/s1600/20210725_204118.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-2cVDbvvib-U/YP12dmZs8KI/AAAAAAAFA80/-91rvON_cFAprDIeqH3jwvj7iF1Fz_vawCLcBGAsYHQ/s450/20210725_204118.jpg&quot; title=&quot;20210725_204118.jpg&quot; alt=&quot;20210725_204118.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;觸控筆後方的蓋子是寫著「asus COLLECTION」的壓克力鏡面。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-p2QNyOjrFIw/YMyzLRtsdcI/AAAAAAAE_ls/WbWzFqU-rowmyN44j7pKZkgq9Xy7zx9egCLcBGAsYHQ/s1600/20210606_183340.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-p2QNyOjrFIw/YMyzLRtsdcI/AAAAAAAE_ls/WbWzFqU-rowmyN44j7pKZkgq9Xy7zx9egCLcBGAsYHQ/s450/20210606_183340.jpg&quot; title=&quot;20210606_183340.jpg&quot; alt=&quot;20210606_183340.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;蓋子本身可以旋轉後開啟。USI觸控筆本身已經附贈了一顆AAA 4號電池，而且電池和蓋子之間還放上了一個黑色圓形的絕緣墊。只要把絕緣墊移開，蓋回蓋子，讓觸控筆通電。這樣就能夠正常使用了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-PvPMB2Xf1Vs/YMyzLYm5dTI/AAAAAAAE_lo/c8kTKs18wYIaiIA2gi_of282pvgHc4KswCLcBGAsYHQ/s1600/20210606_183549.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-PvPMB2Xf1Vs/YMyzLYm5dTI/AAAAAAAE_lo/c8kTKs18wYIaiIA2gi_of282pvgHc4KswCLcBGAsYHQ/s450/20210606_183549.jpg&quot; title=&quot;20210606_183549.jpg&quot; alt=&quot;20210606_183549.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著我們來看到筆套的部分。筆套的外層似乎是人工皮材質，具有止滑效果。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-ERkvqQHOtpk/YMyzLYQ3k7I/AAAAAAAE_lk/igjDcjlr8RE5UlCqxpUI4KhLjUa9WJDcQCLcBGAsYHQ/s1600/20210606_183653.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-ERkvqQHOtpk/YMyzLYQ3k7I/AAAAAAAE_lk/igjDcjlr8RE5UlCqxpUI4KhLjUa9WJDcQCLcBGAsYHQ/s450/20210606_183653.jpg&quot; title=&quot;20210606_183653.jpg&quot; alt=&quot;20210606_183653.jpg&quot; width=&quot;450&quot; height=&quot;255.75&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;將USI觸控筆裝上筆套之後的樣子如上。但旁邊的突起處是什麼呢？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-5OjyT2phNRg/YP2quFC3mLI/AAAAAAAFA_w/29h5CK31ebAMKWiCAzHQpuk-k58mC550ACLcBGAsYHQ/s1600/scan_.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-5OjyT2phNRg/YP2quFC3mLI/AAAAAAAFA_w/29h5CK31ebAMKWiCAzHQpuk-k58mC550ACLcBGAsYHQ/s450/scan_.png&quot; title=&quot;scan_.png&quot; alt=&quot;scan_.png&quot; width=&quot;327&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;根據觸控筆說明書的內容，觸控筆本身似乎可以吸附在ASUS Chromebook Flip CX5 (CX5500)的側邊。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-onzEaL2HJDs/YP12dqq4HgI/AAAAAAAFA8w/ymxGpo_Owlgxu11UHdG9CSBiiX0BkvzFgCLcBGAsYHQ/s1600/20210725_205629.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-onzEaL2HJDs/YP12dqq4HgI/AAAAAAAFA8w/ymxGpo_Owlgxu11UHdG9CSBiiX0BkvzFgCLcBGAsYHQ/s450/20210725_205629.jpg&quot; title=&quot;20210725_205629.jpg&quot; alt=&quot;20210725_205629.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASUS Chromebook Flip CX5 (CX5500)在右側中間附近的確是有一區具有磁吸功能，不過既然筆套的磁吸處都做了圓角矩形的凸起口，那表示筆電上也會有個對應的凹槽。難道是這個看起來像是Micro SD讀卡機的位置嗎？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-uUqjORMDwQU/YP12doqVQ_I/AAAAAAAFA84/oqZgWuK-IvMcUyk3LvLY_uR9djtbwxExgCLcBGAsYHQ/s1600/20210725_205202.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-uUqjORMDwQU/YP12doqVQ_I/AAAAAAAFA84/oqZgWuK-IvMcUyk3LvLY_uR9djtbwxExgCLcBGAsYHQ/s450/20210725_205202.jpg&quot; title=&quot;20210725_205202.jpg&quot; alt=&quot;20210725_205202.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;還真的是這個位置！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-XoV0dhZ2idk/YP12dRS8VtI/AAAAAAAFA8s/h_-un2bOin4X4JQljTn8mcL676bMVJxkACLcBGAsYHQ/s1600/20210725_210548.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-XoV0dhZ2idk/YP12dRS8VtI/AAAAAAAFA8s/h_-un2bOin4X4JQljTn8mcL676bMVJxkACLcBGAsYHQ/s450/20210725_210548.jpg&quot; title=&quot;20210725_210548.jpg&quot; alt=&quot;20210725_210548.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而且筆套的突起處做了中空設計。即使Micro SD讀卡機內插了Micro SD記憶卡，USI觸控筆還是能剛好卡在卡槽上。這個設計真是絕妙！&lt;/p&gt;
&lt;h3&gt;保護套 / Case&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Dcl5SMqHWlI/YMyzOkh7w7I/AAAAAAAE_mE/ED0stDgmLicPSVZSUW13X5U0oaYla8YXQCLcBGAsYHQ/s1600/20210606_183807.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Dcl5SMqHWlI/YMyzOkh7w7I/AAAAAAAE_mE/ED0stDgmLicPSVZSUW13X5U0oaYla8YXQCLcBGAsYHQ/s450/20210606_183807.jpg&quot; title=&quot;20210606_183807.jpg&quot; alt=&quot;20210606_183807.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASUS Chromebook Flip CX5 (CX5500)的保護套是作為包包的內袋使用。保護套只有收納筆電的口袋，沒有其他額外的口袋。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-6JrtV8JhJK0/YMyzOkUi3rI/AAAAAAAE_mI/DO5UlxfJ_7kmgPcQnALg-xJCx8U-t423QCLcBGAsYHQ/s1600/20210606_183826.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-6JrtV8JhJK0/YMyzOkUi3rI/AAAAAAAE_mI/DO5UlxfJ_7kmgPcQnALg-xJCx8U-t423QCLcBGAsYHQ/s450/20210606_183826.jpg&quot; title=&quot;20210606_183826.jpg&quot; alt=&quot;20210606_183826.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;外面是針織材質包覆，上方則是人工皮。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-H93yffDgTy0/YMyzOhH2KCI/AAAAAAAE_l8/ElDztfi6vrobLW3WptkDFi5WBifVJOQlQCLcBGAsYHQ/s1600/20210606_183943.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-H93yffDgTy0/YMyzOhH2KCI/AAAAAAAE_l8/ElDztfi6vrobLW3WptkDFi5WBifVJOQlQCLcBGAsYHQ/s450/20210606_183943.jpg&quot; title=&quot;20210606_183943.jpg&quot; alt=&quot;20210606_183943.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;內裡是絨毛材質，能夠很好的保護筆電本身。保護套使用了魔鬼氈，打開的時候會發出不小的聲音。如果要在圖書館這種安靜的場所使用的話，打開的聲音會讓人有點尷尬。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-X2aheEvRfyY/YMyzgpYnanI/AAAAAAAE_ng/PCeEXDD8DpgHrHYRGAgD2DC7lUEPha9wgCLcBGAsYHQ/s1600/20210606_190005.jpg&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px;&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-X2aheEvRfyY/YMyzgpYnanI/AAAAAAAE_ng/PCeEXDD8DpgHrHYRGAgD2DC7lUEPha9wgCLcBGAsYHQ/s450/20210606_190005.jpg&quot; title=&quot;20210606_190005.jpg&quot; alt=&quot;20210606_190005.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;來看看ASUS Chromebook Flip CX5 (CX5500)裝到保護套的樣子吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-lP3OeD_zT94/YMyzgnfGQuI/AAAAAAAE_ns/2wCxv2FCZj0N5EzSI0W8j2D_fXDKIAMWQCLcBGAsYHQ/s1600/20210606_190029_1.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-lP3OeD_zT94/YMyzgnfGQuI/AAAAAAAE_ns/2wCxv2FCZj0N5EzSI0W8j2D_fXDKIAMWQCLcBGAsYHQ/s450/20210606_190029_1.jpg&quot; title=&quot;20210606_190029.jpg&quot; alt=&quot;20210606_190029.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-WskrMbzAq2o/YMyzgpsxjtI/AAAAAAAE_nc/2jo8r3VPBmoc8wdXMLX3xxriVbuiOA_pwCLcBGAsYHQ/s1600/20210606_190056.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-WskrMbzAq2o/YMyzgpsxjtI/AAAAAAAE_nc/2jo8r3VPBmoc8wdXMLX3xxriVbuiOA_pwCLcBGAsYHQ/s450/20210606_190056.jpg&quot; title=&quot;20210606_190056.jpg&quot; alt=&quot;20210606_190056.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;保護套尺寸剛好符合ASUS Chromebook CX5&amp;nbsp;(CX5500)的機身。如果你在大背包裡裝了滑鼠、充電器等其他零件的話，這個保護套能夠有效防止ASUS Chromebook CX5 (CX5500)碰撞與刮傷。難得我們有了超美的陶瓷感鋁合金上蓋，不好好保護它怎麼行呢？&lt;/p&gt;
&lt;h3&gt;筆電本體 / Chromebook&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-fE9EMlaopl8/YP12gu5RiQI/AAAAAAAFA9A/HZo6qPDD2Box3Oxv3QHL6zo5VobDop5SwCLcBGAsYHQ/s1600/20210725_212436.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-fE9EMlaopl8/YP12gu5RiQI/AAAAAAAFA9A/HZo6qPDD2Box3Oxv3QHL6zo5VobDop5SwCLcBGAsYHQ/s450/20210725_212436.jpg&quot; title=&quot;20210725_212436.jpg&quot; alt=&quot;20210725_212436.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;現在終於可以看到我們ASUS Chromebook Flip CX5 (CX5500)筆電本身了。筆電的A面是採用ASUS筆電常見的設計，中間呈現了ASUS的品牌標誌。左上角則是Chromebook筆電常會出現的Chromebook圖示。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Wpb38DXpJxc/YP12dedo0bI/AAAAAAAFA8o/99lGgqYsrEg5SbskLWV-HFImFywpB7g1QCLcBGAsYHQ/s1600/20210725_213129.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Wpb38DXpJxc/YP12dedo0bI/AAAAAAAFA8o/99lGgqYsrEg5SbskLWV-HFImFywpB7g1QCLcBGAsYHQ/s450/20210725_213129.jpg&quot; title=&quot;20210725_213129.jpg&quot; alt=&quot;20210725_213129.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;拿到ASUS Chromebook Flip CX5 (CX5500)筆電本體的時候，最讓我印象深刻的是它的陶瓷般的上蓋。純白的顏色搭配典雅的質感，令人十分驚豔。不過如果這是真的陶瓷，那整個筆電應該會更厚重吧。仔細看了規格，才知道原來這是「陶瓷感金屬上蓋」。沒想到Chromebook居然會有如此美麗的設計，ASUS Chromebook Flip CX5 (CX5500)的確顛覆了傳統對於Chromebook的想像。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-U1VkGnvZy-s/YP12TlP-ZyI/AAAAAAAFA8g/CuGvsSJzuao8GX4_4VPZL_1OGRxmDhYvwCLcBGAsYHQ/s1600/20210725_214459.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-U1VkGnvZy-s/YP12TlP-ZyI/AAAAAAAFA8g/CuGvsSJzuao8GX4_4VPZL_1OGRxmDhYvwCLcBGAsYHQ/s450/20210725_214459.jpg&quot; title=&quot;20210725_214459.jpg&quot; alt=&quot;20210725_214459.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;機身左側依序是USB Type-C接口、USB Type-A接口、耳機與麥克風二合一的接孔、音量調節按鍵、電源鍵。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-xX1LPgcS6BY/YP3G8aH8wwI/AAAAAAAFA_4/de7fe5Ncd-EbMfsQOLTDdndGLKV6TmqqACLcBGAsYHQ/s1600/20210726_024335.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-xX1LPgcS6BY/YP3G8aH8wwI/AAAAAAAFA_4/de7fe5Ncd-EbMfsQOLTDdndGLKV6TmqqACLcBGAsYHQ/s450/20210726_024335.jpg&quot; title=&quot;20210726_024335.jpg&quot; alt=&quot;20210726_024335.jpg&quot; width=&quot;450&quot; height=&quot;358&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;值得注意的是，音量按鍵跟電源鍵被統一設計在同一側。如此一來，當我們將ASUS Chromebook Flip CX5 (CX5500)翻轉成平板模式、並垂直使用時，就能夠方便操作上方的音量按鍵與電源鍵，也能夠降低誤觸。這個設計真的必須給讚！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-jNGwFMKGTL8/YP12TkP_8mI/AAAAAAAFA8c/xzYMSKlER6M1KFntQ1zwZrs6zXEWKrVJgCLcBGAsYHQ/s1600/20210725_214548.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-jNGwFMKGTL8/YP12TkP_8mI/AAAAAAAFA8c/xzYMSKlER6M1KFntQ1zwZrs6zXEWKrVJgCLcBGAsYHQ/s450/20210725_214548.jpg&quot; title=&quot;20210725_214548.jpg&quot; alt=&quot;20210725_214548.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;機身右側依序是Micro SD讀卡機兼USI觸控筆的固定位置、HDMI接口、USB Type-C接口。其中左右兩側的USB Type-C接口皆具備USB-PD快充能力，也能夠透過Alternate Mode輸出螢幕畫面，或是接上USB HUB擴充連接其他滑鼠與鍵盤等周邊裝置。HDMI支援最高60Hz 4K顯示畫面的輸出，能與ASUS Chromebook Flip CX5 (CX5500)的兩個USB Type-C接口同時輸出螢幕畫面，讓開發者能以四螢幕超大桌面來工作。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-cyzocFNgyuE/YP12Tgkk-UI/AAAAAAAFA8Y/YamOTAzEdlk41gIrdprKUYJRe_4QrI6qwCLcBGAsYHQ/s1600/20210725_213358.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-cyzocFNgyuE/YP12Tgkk-UI/AAAAAAAFA8Y/YamOTAzEdlk41gIrdprKUYJRe_4QrI6qwCLcBGAsYHQ/s450/20210725_213358.jpg&quot; title=&quot;20210725_213358.jpg&quot; alt=&quot;20210725_213358.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下來讓我們轉到機身後側。後側有一排相當明顯的排風口。左右則是筆電的轉軸。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-NwmKLO__2Jg/YP12Tghze-I/AAAAAAAFA8U/CohUksZGKZU3qqgXt_nmQw3FqWapY8D5gCLcBGAsYHQ/s1600/20210725_214726.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-NwmKLO__2Jg/YP12Tghze-I/AAAAAAAFA8U/CohUksZGKZU3qqgXt_nmQw3FqWapY8D5gCLcBGAsYHQ/s450/20210725_214726.jpg&quot; title=&quot;20210725_214726.jpg&quot; alt=&quot;20210725_214726.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASUS Chromebook Flip CX5 (CX5500)的轉軸採用了仿金屬設計，爲陶瓷感的上蓋帶來了具有畫龍點睛的作用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-0qrnBJ2DdGQ/YP12TLPeP3I/AAAAAAAFA8Q/gl_Qzf-valIOOsvB78MBqALKKRnCmCj4ACLcBGAsYHQ/s1600/20210725_213705_a.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-0qrnBJ2DdGQ/YP12TLPeP3I/AAAAAAAFA8Q/gl_Qzf-valIOOsvB78MBqALKKRnCmCj4ACLcBGAsYHQ/s450/20210725_213705_a.jpg&quot; title=&quot;20210725_213705_a.jpg&quot; alt=&quot;20210725_213705_a.jpg&quot; width=&quot;450&quot; height=&quot;304&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再來翻到筆電的底部D面。上面註明了型號的細項。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-3ymrnpiaeAE/YP12S3tVeiI/AAAAAAAFA8M/WmlvBdK1t20w4gn8U8KWE_ULbjULuT3BQCLcBGAsYHQ/s1600/20210725_213705_b.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-3ymrnpiaeAE/YP12S3tVeiI/AAAAAAAFA8M/WmlvBdK1t20w4gn8U8KWE_ULbjULuT3BQCLcBGAsYHQ/s450/20210725_213705_b.jpg&quot; title=&quot;20210725_213705_b.jpg&quot; alt=&quot;20210725_213705_b.jpg&quot; width=&quot;450&quot; height=&quot;282&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;型號與序號的資訊都可以在底部看到。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-kwtGZOpgE4c/YP2ZKobot4I/AAAAAAAFA94/AWRGqbMTpDQClrSy1ef5sMT-bucrRh4EwCLcBGAsYHQ/s1600/20210725_232803.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-kwtGZOpgE4c/YP2ZKobot4I/AAAAAAAFA94/AWRGqbMTpDQClrSy1ef5sMT-bucrRh4EwCLcBGAsYHQ/s450/20210725_232803.jpg&quot; title=&quot;20210725_232803.jpg&quot; alt=&quot;20210725_232803.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;讓我們打開筆電來看看它的螢幕B面跟鍵盤C面。有別於外殼純白的設計，內部是純粹黑的配色。剛打開筆電時，中間還鋪了一層不織布，避免鍵盤與螢幕直接接觸。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-YNKkjYQx3Z4/YP2ZKi5WNBI/AAAAAAAFA98/-PcvSOkUOfAmA9qxo36SEseb39W5rvTTgCLcBGAsYHQ/s1600/20210725_232839.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-YNKkjYQx3Z4/YP2ZKi5WNBI/AAAAAAAFA98/-PcvSOkUOfAmA9qxo36SEseb39W5rvTTgCLcBGAsYHQ/s450/20210725_232839.jpg&quot; title=&quot;20210725_232839.jpg&quot; alt=&quot;20210725_232839.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-LDwTZxw3Wdk/YP2ZLFCFzXI/AAAAAAAFA-E/T7xQtsCZNecdflpXsYyrtmGkKFaL-CxdQCLcBGAsYHQ/s1600/20210725_233213_a.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-LDwTZxw3Wdk/YP2ZLFCFzXI/AAAAAAAFA-E/T7xQtsCZNecdflpXsYyrtmGkKFaL-CxdQCLcBGAsYHQ/s450/20210725_233213_a.jpg&quot; title=&quot;20210725_233213_a.jpg&quot; alt=&quot;20210725_233213_a.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;拿開不織布，我們總算能看到筆電的真身。接下來就讓我們來看看ASUS Chromebook Flip CX5 (CX5500)的細節。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-hyQGufFHByk/YMyzd0LWzII/AAAAAAAE_nE/2ZakvuJ8vbkRIducGN35-SSOg-_W8r2wQCLcBGAsYHQ/s1600/20210606_190544.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-hyQGufFHByk/YMyzd0LWzII/AAAAAAAE_nE/2ZakvuJ8vbkRIducGN35-SSOg-_W8r2wQCLcBGAsYHQ/s450/20210606_190544.jpg&quot; title=&quot;20210606_190544.jpg&quot; alt=&quot;20210606_190544.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASUS Chromebook Flip CX5 (CX5500)將音量鍵跟耳機孔設計於同一側。當我想要調整音量時，能夠直覺地在耳機前面找到音量鍵。不過音量鍵也容易跟電源鍵搞混，盲按的時候光靠觸覺不太容易區別兩者。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-JcRXUdmZMCE/YMyzd6h-NAI/AAAAAAAE_nM/ERuG6LCDrWE-hfJzQxmRjA9Cp-4_wLaaQCLcBGAsYHQ/s1600/20210606_185208.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-JcRXUdmZMCE/YMyzd6h-NAI/AAAAAAAE_nM/ERuG6LCDrWE-hfJzQxmRjA9Cp-4_wLaaQCLcBGAsYHQ/s450/20210606_185208.jpg&quot; title=&quot;20210606_185208.jpg&quot; alt=&quot;20210606_185208.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASUS Chromebook Flip CX5 (CX5500)轉軸使用了&lt;a href=&quot;https://www.asus.com/tw/support/FAQ/1038281/&quot; target=&quot;_blank&quot;&gt;ErgoLift設計&lt;/a&gt;。具有ErgoLift設計的筆電，在螢幕開啟的時候會以螢幕下方作為支點抬升筆電本體，使得筆電鍵盤稍微傾斜。這個些許的傾斜角度能讓使用者打字更加舒適，抬升後使筆電下方稍微騰空的設計，也有助於筆電的散熱。&lt;/p&gt;
&lt;h3&gt;鍵盤 / Keyboard&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-PhHfvkL7TQM/YP2ZJdVWg3I/AAAAAAAFA9w/vXnIpUABfrsw4WUH0K4Phhsm1mi1Z4FfQCLcBGAsYHQ/s1600/20210725_235159.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-PhHfvkL7TQM/YP2ZJdVWg3I/AAAAAAAFA9w/vXnIpUABfrsw4WUH0K4Phhsm1mi1Z4FfQCLcBGAsYHQ/s450/20210725_235159.jpg&quot; title=&quot;20210725_235159.jpg&quot; alt=&quot;20210725_235159.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASUS Chromebook Flip CX5&amp;nbsp;(CX5500)的鍵盤設計為1.4mm鍵程，並有全尺寸背光。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Ua1BtPPXN30/YP2ZK3RAZ-I/AAAAAAAFA-A/-__0gZ8BO8oOFGNKA7bTQVHKC77emO3PgCLcBGAsYHQ/s1600/20210725_233819_1.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Ua1BtPPXN30/YP2ZK3RAZ-I/AAAAAAAFA-A/-__0gZ8BO8oOFGNKA7bTQVHKC77emO3PgCLcBGAsYHQ/s450/20210725_233819_1.jpg&quot; title=&quot;20210725_233819.jpg&quot; alt=&quot;20210725_233819.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;鍵盤背光在按下鍵盤按鍵的時候會自動啓動，並在放置一段時間之後自動關閉。鍵盤背光在全關燈的時候比較明顯，如上圖所示。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-g7kxUaJ1bbE/YP2ZKBkh6II/AAAAAAAFA90/Yixpis8bxZclkAJpIxdo6RvIbMadWOI9gCLcBGAsYHQ/s1600/20210725_234005.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-g7kxUaJ1bbE/YP2ZKBkh6II/AAAAAAAFA90/Yixpis8bxZclkAJpIxdo6RvIbMadWOI9gCLcBGAsYHQ/s450/20210725_234005.jpg&quot; title=&quot;20210725_234005.jpg&quot; alt=&quot;20210725_234005.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而有別於其他Chromebook的設計，ASUS Chromebook Flip CX5 (CX5500)最特別的地方在於它在15吋的機身內放入了&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: 700; text-decoration-line: underline;&quot;&gt;獨立數字鍵盤&lt;/span&gt;。獨立數字鍵盤能幫助商務人士快速且準確地輸入大量數字資料，也能用於操作遊戲，工作娛樂兩相宜。除此之外，寫程式常用的page up、page dn (down)、home、end跟delete也有獨立按鍵，這對撰寫程式的開發者來說也是相當友善。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-zPWx8JTDTPY/YP2ZQybacLI/AAAAAAAFA-Q/rPA3WgkTMmINi_KKMNHa_EUp0jaOj4APACLcBGAsYHQ/s1600/20210725_234034.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-zPWx8JTDTPY/YP2ZQybacLI/AAAAAAAFA-Q/rPA3WgkTMmINi_KKMNHa_EUp0jaOj4APACLcBGAsYHQ/s450/20210725_234034.jpg&quot; title=&quot;20210725_234034.jpg&quot; alt=&quot;20210725_234034.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;來看看鍵盤的左上角。跟大部分Chromebook一樣，ASUS Chromebook Flip CX5 (CX5500)第一排按鍵是功能鍵，而不是標準鍵盤使用的F1到F12按鍵。不過ASUS Chromebook Flip CX5 (CX5500)跟一般的Chromebook略有不同。從照片上可以看到，ASUS Chromebook Flip CX5 (CX5500)第一排按鍵由左而右依序「esc」、「返回」、「重新讀取」、「全螢幕」。在這些功能鍵中，缺少了一般Chromebook的「下一頁」功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-WuRkWRknhTI/YP2qaZ8e1xI/AAAAAAAFA_M/K7YUf0qEiVwN1TTkCoRbQuqpTVtQVREdQCLcBGAsYHQ/s1600/2021-0726-021007.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-WuRkWRknhTI/YP2qaZ8e1xI/AAAAAAAFA_M/K7YUf0qEiVwN1TTkCoRbQuqpTVtQVREdQCLcBGAsYHQ/s450/2021-0726-021007.png&quot; title=&quot;2021-0726-021007.png&quot; alt=&quot;2021-0726-021007.png&quot; width=&quot;450&quot; height=&quot;260&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我們來把ASUS Chromebook Flip CX5 (CX5500)的鍵盤跟&lt;a href=&quot;/2019/02/chromebook-chromebook-review-after-1.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;的鍵盤比較一下。跟CX5相比，C213NA的功能鍵依序是「esc」、「返回」、「下一頁」、「重新讀取」等等，這也是大部分Chromebook的配置。ASUS Chromebook Flip CX5 (CX5500)大概是為了加入數字鍵，而不得不對鍵盤配置有所調整。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/--QGhVzdGe2s/YP2qadSWncI/AAAAAAAFA_Q/hdfC2ZKvguQv5CtogfqPJPYW8BeV2Bd7wCLcBGAsYHQ/s1600/2021-0726-014254.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/--QGhVzdGe2s/YP2qadSWncI/AAAAAAAFA_Q/hdfC2ZKvguQv5CtogfqPJPYW8BeV2Bd7wCLcBGAsYHQ/s450/2021-0726-014254.png&quot; title=&quot;2021-0726-014254.png&quot; alt=&quot;2021-0726-014254.png&quot; width=&quot;450&quot; height=&quot;285&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果要在ASUS Chromebook Flip CX5 (CX5500)使用F1到F12按鍵的話，必須先按下左側的&amp;nbsp;&lt;span style=&quot;font-weight: 600; color: rgb(60, 64, 67); background-color: rgb(248, 249, 250);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/1nGjoBmRWMHeiurgaaGR3fYrVks0LCsdjtXGJvtfosYvCsydV-J8EV6YOPtUgg2EI8M=w36-h36&quot; width=&quot;18&quot; height=&quot;18&quot; alt=&quot;&quot; data-mime-type=&quot;image/png&quot; data-alt-src=&quot;//lh3.googleusercontent.com/1nGjoBmRWMHeiurgaaGR3fYrVks0LCsdjtXGJvtfosYvCsydV-J8EV6YOPtUgg2EI8M&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(60, 64, 67); background-color: rgb(248, 249, 250);&quot;&gt;&amp;nbsp;&lt;/span&gt;啟動器按鈕，再按下對應的功能鍵或其他按鍵，才能觸發對應的F1到F12按鍵。上圖是各個按鍵對應F1到F12按鍵的示意圖。舉例來說，網頁開發者較常使用F12按鍵啟動瀏覽器的「&lt;a href=&quot;https://chen0625tung.medium.com/%E5%A5%BD%E7%94%A8%E7%9A%84chrome%E9%96%8B%E7%99%BC%E8%80%85%E5%B7%A5%E5%85%B7-%E4%B8%8D%E6%98%AF%E5%B7%A5%E7%A8%8B%E5%B8%AB%E7%9A%84%E4%BD%A0%E4%B9%9F%E8%A9%B2%E4%BE%86%E8%AA%8D%E8%AD%98%E4%B8%80%E4%B8%8B-3efa702d0907&quot; target=&quot;_blank&quot;&gt;開發人員工具&lt;/a&gt;」。使用ASUS Chromebook Flip CX5 (CX5500)要按到F12按鍵的話，就必須先按下&lt;span style=&quot;font-weight: 600; color: rgb(60, 64, 67); background-color: rgb(248, 249, 250);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/1nGjoBmRWMHeiurgaaGR3fYrVks0LCsdjtXGJvtfosYvCsydV-J8EV6YOPtUgg2EI8M=w36-h36&quot; width=&quot;18&quot; height=&quot;18&quot; alt=&quot;&quot; data-mime-type=&quot;image/png&quot; data-alt-src=&quot;//lh3.googleusercontent.com/1nGjoBmRWMHeiurgaaGR3fYrVks0LCsdjtXGJvtfosYvCsydV-J8EV6YOPtUgg2EI8M&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(60, 64, 67); background-color: rgb(248, 249, 250);&quot;&gt;&amp;nbsp;&lt;/span&gt;啟動器按鈕，再按下「=」鍵，這樣才等於按下F12按鍵。&lt;/p&gt;
&lt;h3&gt;觸控板 / Touchpad&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-KvnwrZlOB4Y/YP2ZRP2xs4I/AAAAAAAFA-U/c5M6DnAJRSUIFqwdPQa3Xqht52dr2cI_ACLcBGAsYHQ/s1600/20210725_235959.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-KvnwrZlOB4Y/YP2ZRP2xs4I/AAAAAAAFA-U/c5M6DnAJRSUIFqwdPQa3Xqht52dr2cI_ACLcBGAsYHQ/s450/20210725_235959.jpg&quot; title=&quot;20210725_235959.jpg&quot; alt=&quot;20210725_235959.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C面置腕處使用黑曜岩天鵝絨(Obsidian Velvet)材質，使用起來舒適度更高。觸控板則是採用5.68 吋大尺寸玻璃觸控板，整合防掌觸技術並支援多點觸控，提升準確性及控制力。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-FC_OvRKKfnk/YP2qaiagYJI/AAAAAAAFA_U/lQ9tJ4CcBes0GykpvPFkM5BE6H9H2IYLQCLcBGAsYHQ/s1600/2021-0726-014454.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-FC_OvRKKfnk/YP2qaiagYJI/AAAAAAAFA_U/lQ9tJ4CcBes0GykpvPFkM5BE6H9H2IYLQCLcBGAsYHQ/s450/2021-0726-014454.png&quot; title=&quot;2021-0726-014454.png&quot; alt=&quot;2021-0726-014454.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在使用的時候，ASUS Chromebook Flip CX5 (CX5500)的觸控板位置讓我印象深刻。通常14吋以下的筆電會將觸控板設置在筆電的正中間，但這種設置很容易讓人在打字的時候碰到觸控板。像是ASUS Chromebook Flip CX5 (CX5500)這種15吋以上的筆電，觸控板的位置會設計在鍵盤基準鍵位的中間。仔細看，觸控板的位置大概是在鍵盤上「F」和「J」鍵的中間附近。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-ARA_XB9P-ZI/YP2ZQy2WH6I/AAAAAAAFA-M/BewqYO7H0GwPJprkMNP78a9E1dT7wNVxgCLcBGAsYHQ/s1600/20210726_000131.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-ARA_XB9P-ZI/YP2ZQy2WH6I/AAAAAAAFA-M/BewqYO7H0GwPJprkMNP78a9E1dT7wNVxgCLcBGAsYHQ/s450/20210726_000131.jpg&quot; title=&quot;20210726_000131.jpg&quot; alt=&quot;20210726_000131.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;熟悉鍵盤的使用者會習慣從「F」跟「J」鍵這兩個定位點來定位鍵盤的位置，打字的左右手也會自然地放在「F」跟「J」鍵附近。ASUS Chromebook Flip CX5 (CX5500)的觸控板位置位於兩個定位點的中間，這樣的設計可以讓我們打字時更不容易碰到觸控板。我還蠻喜歡這個細節。&lt;/p&gt;
&lt;h3&gt;疊疊樂：Chromebook的比較 / Comparison with Educational Chromebook&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-j-O4YAQIRsk/YP2ZRMa5DPI/AAAAAAAFA-c/N-sTkmdC3SQIfOizUNiFldyOWnR7KPZcgCLcBGAsYHQ/s1600/20210725_225503.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-j-O4YAQIRsk/YP2ZRMa5DPI/AAAAAAAFA-c/N-sTkmdC3SQIfOizUNiFldyOWnR7KPZcgCLcBGAsYHQ/s450/20210725_225503.jpg&quot; title=&quot;20210725_225503.jpg&quot; alt=&quot;20210725_225503.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;藉這個機會，我們來把ASUS Chromebook Flip CX5 (CX5500)跟我之前買的教育用&lt;a href=&quot;/2019/02/chromebook-chromebook-review-after-1.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;進行疊疊樂比較吧。上圖是筆電A面的疊疊樂，15.6吋的ASUS Chromebook Flip CX5 (CX5500)跟11.6吋的ASUS Chromebook Flip C213NA有很大的差別。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-SYeldiXbVsw/YMyzgjsWcNI/AAAAAAAE_no/r1gM2XwUt_4OWTuOwrUqYAC4llS6itl9QCLcBGAsYHQ/s1600/20210618_150710.jpg&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-SYeldiXbVsw/YMyzgjsWcNI/AAAAAAAE_no/r1gM2XwUt_4OWTuOwrUqYAC4llS6itl9QCLcBGAsYHQ/s450/20210618_150710.jpg&quot; title=&quot;20210618_150710.jpg&quot; alt=&quot;20210618_150710.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;上圖是兩台Chromebook的正面比較。值得注意的是，螢幕較大的ASUS Chromebook Flip CX5 (CX5500)，最高也只有1.85公分。相較之下&lt;a href=&quot;/2019/02/chromebook-chromebook-review-after-1.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;的高度為2.09公分。這是因為ASUS Chromebook Flip C213NA小螢幕的設計讓它以手持、翻轉使用為主，而厚實的防撞膠條設計既能保護Chromebook，也能降低手滑的機率。而ASUS Chromebook Flip CX5 (CX5500)的ErgoLift設計能在降低機身厚度和提供符合人體工學的鍵盤傾斜角度之間取得平衡。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-rq0JfzykepE/YMyzgjEHvNI/AAAAAAAE_nk/c9qJVqkD8rwGibigAb1_hTe4M-unqdq5QCLcBGAsYHQ/s1600/20210618_150728.jpg&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-rq0JfzykepE/YMyzgjEHvNI/AAAAAAAE_nk/c9qJVqkD8rwGibigAb1_hTe4M-unqdq5QCLcBGAsYHQ/s450/20210618_150728.jpg&quot; title=&quot;20210618_150728.jpg&quot; alt=&quot;20210618_150728.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;再來看看筆電的左側。兩台Chromebook都在左側配置了USB Type-C、USB Type-A、耳機孔。ASUS Chromebook Flip CX5 (CX5500)將耳機孔跟音量調整鍵擺在左側，而電源開關也一樣在左側。&lt;a href=&quot;/2019/02/chromebook-chromebook-review-after-1.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;則是將Micro SD讀卡機擺在左側。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-6f7eIE2mQf0/YMyzjpK_JKI/AAAAAAAE_oA/DE4jXDq9Nj4ACo19_tJcSut3U6uJU3TnwCLcBGAsYHQ/s1600/20210618_150756.jpg&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-6f7eIE2mQf0/YMyzjpK_JKI/AAAAAAAE_oA/DE4jXDq9Nj4ACo19_tJcSut3U6uJU3TnwCLcBGAsYHQ/s450/20210618_150756.jpg&quot; title=&quot;20210618_150756.jpg&quot; alt=&quot;20210618_150756.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;兩台Chromebook的右側就有很大的不同了。兩台筆電右側都有USB Type-C接孔，除此之外，ASUS Chromebook Flip CX5 (CX5500)還有HDMI輸出孔、Micro SD讀卡機兼USI觸控筆磁吸槽。另一方面，ASUS Chromebook Flip&amp;nbsp;C213NA的右側還有一個USB Type-A孔，以及筆電防盜鎖孔。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-XWQNm_dFxw8/YMyzjsxjrZI/AAAAAAAE_oE/LnkyNE4n-pQ4dLJdmcSQ0x3qKBd6f9q4ACLcBGAsYHQ/s1600/20210618_150740.jpg&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-XWQNm_dFxw8/YMyzjsxjrZI/AAAAAAAE_oE/LnkyNE4n-pQ4dLJdmcSQ0x3qKBd6f9q4ACLcBGAsYHQ/s450/20210618_150740.jpg&quot; title=&quot;20210618_150740.jpg&quot; alt=&quot;20210618_150740.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;最後來看看兩台Chromebook的背後。由於&lt;a href=&quot;/2019/02/chromebook-chromebook-review-after-1.html&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;的CPU功耗較低，背後並沒有散熱孔的設計。相較之下，ASUS Chromebook Flip CX5 (CX5500)背後的散熱孔，表示它能夠與Intel第11代Core i5晶片共同運作，帶給開發者強大且高速的運算效能。&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;初次設定Chromebook / Initial setup&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-A8RWkbJ1W_Y/YP3sfkRDvRI/AAAAAAAFBBQ/AC6GSWAXR7QnnRJSnAJg1L_l3MjAX5V6QCLcBGAsYHQ/s1600/20210726_053307.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-A8RWkbJ1W_Y/YP3sfkRDvRI/AAAAAAAFBBQ/AC6GSWAXR7QnnRJSnAJg1L_l3MjAX5V6QCLcBGAsYHQ/s450/20210726_053307.jpg&quot; title=&quot;20210726_053307.jpg&quot; alt=&quot;20210726_053307.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;開箱開完了，就讓我們把ASUS Chromebook Flip CX5 (CX5500)開機，看看它的初始設定流程吧。ASUS Chromebook Flip CX5 (CX5500)的作業系統爲Chrome作業系統。目前Chrome作業系統並沒有太多可供廠商客製化的空間，每一台Chromebook的運作方式都很像，主要只有Chrome作業系統版本不同的差異而已。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-A8RWkbJ1W_Y/YP3sfkRDvRI/AAAAAAAFBBQ/AC6GSWAXR7QnnRJSnAJg1L_l3MjAX5V6QCLcBGAsYHQ/s1600/20210726_053307.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-A8RWkbJ1W_Y/YP3sfkRDvRI/AAAAAAAFBBQ/AC6GSWAXR7QnnRJSnAJg1L_l3MjAX5V6QCLcBGAsYHQ/s450/20210726_053307.jpg&quot; title=&quot;20210726_053307.jpg&quot; alt=&quot;20210726_053307.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打開電源後，第一個迎接我們的畫面是「歡迎使用」！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-yCbInpqkShY/YP3szoBXqBI/AAAAAAAFBCc/wG1UgAaUkk4P025j7h1fPDVAinSTdrgBwCLcBGAsYHQ/s1600/20210726_053317a.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-yCbInpqkShY/YP3szoBXqBI/AAAAAAAFBCc/wG1UgAaUkk4P025j7h1fPDVAinSTdrgBwCLcBGAsYHQ/s450/20210726_053317a.jpg&quot; title=&quot;20210726_053317a.jpg&quot; alt=&quot;20210726_053317a.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下來進入無線網路的連接設定。Chromebook在第一次使用的時候需要連上網際網路。一旦設定完成後，之後就算沒有連接網路，也能夠在離線的情況下使用。目前我們是第一次啓用ASUS Chromebook Flip CX5 (CX5500)，就讓我們選擇一個無線網路來連上網際網路吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-iDrg4x8J4as/YP3szeZ_RKI/AAAAAAAFBCY/woGLNuHkY_oaTlEF8gF1J8iWJBPYQp9HwCLcBGAsYHQ/s1600/20210726_053334.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-iDrg4x8J4as/YP3szeZ_RKI/AAAAAAAFBCY/woGLNuHkY_oaTlEF8gF1J8iWJBPYQp9HwCLcBGAsYHQ/s450/20210726_053334.jpg&quot; title=&quot;20210726_053334.jpg&quot; alt=&quot;20210726_053334.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著出現的是「Google服務條款」。下面可以自行決定是否要將診斷資料傳送給Google，協助Google改善Chrome作業系統。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-D-bVzuQzIkY/YP3szYOYYJI/AAAAAAAFBCU/jnlrXBqyKf4yxuvlE_pMw5uESycBPq5sgCLcBGAsYHQ/s1600/20210726_053351.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-D-bVzuQzIkY/YP3szYOYYJI/AAAAAAAFBCU/jnlrXBqyKf4yxuvlE_pMw5uESycBPq5sgCLcBGAsYHQ/s450/20210726_053351.jpg&quot; title=&quot;20210726_053351.jpg&quot; alt=&quot;20210726_053351.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著Chromebook會檢查此裝置有沒有更新。Chromebook目前是每6週都會迎來新的版本，並預計&lt;a href=&quot;https://9to5google.com/2021/03/04/google-chrome-4-week-updates/&quot;&gt;在2021年底調整成每4週更新版本&lt;/a&gt;。因爲Chromebook的更新十分頻繁，第一次啓用Chromebook的時候多半會看到「你的Chromebook需要更新」的訊息。在此我們直接按「繼續」進入下一步。Chromebook的更新會在系統背後默默地運作，不太會妨礙使用者的操作。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-X4eiFWWw9iU/YP3szFcAEvI/AAAAAAAFBCI/5_13sYhGT7sZob62RZXb9OxDk2TR092jwCLcBGAsYHQ/s1600/20210726_053535.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-X4eiFWWw9iU/YP3szFcAEvI/AAAAAAAFBCI/5_13sYhGT7sZob62RZXb9OxDk2TR092jwCLcBGAsYHQ/s450/20210726_053535.jpg&quot; title=&quot;20210726_053535.jpg&quot; alt=&quot;20210726_053535.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下來是「誰在使用這部Chromebook?」的設定。Chromebook預設是以「你」這個選項來使用。這時候「你」可以獲得Chromebook完整的控制權。如果選擇「你的子女」的話，就可以爲孩子開啓家長監護(Family Link)功能，安排孩子能夠造訪的網站與一些保護設定。關於家長監護的相關細節可以參考「&lt;a href=&quot;https://support.google.com/families/answer/7680868?hl=zh-Hant&quot; target=&quot;_blank&quot;&gt;在 Chromebook 上管理孩子的帳戶&lt;/a&gt;」說明。&lt;/p&gt;
&lt;p&gt;我們在此選擇「你」，繼續下一步。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-_DiVhDXCscs/YP3stKFu3wI/AAAAAAAFBCE/mmaAYfUKc-wv6BOKGzbaYTl089fjBUyiwCLcBGAsYHQ/s1600/20210726_053632.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-_DiVhDXCscs/YP3stKFu3wI/AAAAAAAFBCE/mmaAYfUKc-wv6BOKGzbaYTl089fjBUyiwCLcBGAsYHQ/s450/20210726_053632.jpg&quot; title=&quot;20210726_053632.jpg&quot; alt=&quot;20210726_053632.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著進入「登入您的Chromebook」畫面。此處請輸入Google的帳號跟密碼。如果你沒有Google的帳號，可以從「&lt;a href=&quot;https://accounts.google.com/signup&quot; target=&quot;_blank&quot;&gt;建立個人帳戶&lt;/a&gt;」連結來建立新的Google帳號。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-vPgkRmOrJqw/YP3stGepe3I/AAAAAAAFBB8/yVN2uCqsZtgIOXC2chDa-Sh47GqxhBY7wCLcBGAsYHQ/s1600/20210726_053716.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-vPgkRmOrJqw/YP3stGepe3I/AAAAAAAFBB8/yVN2uCqsZtgIOXC2chDa-Sh47GqxhBY7wCLcBGAsYHQ/s450/20210726_053716.jpg&quot; title=&quot;20210726_053716.jpg&quot; alt=&quot;20210726_053716.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;順利登入了。此時可以決定是否要「設定後查看同步處理選項」。Chromebook的大部分設定都能夠用同步處理來備份到你的帳戶。就算你的Chromebook還原到原廠、換了一台新的Chromebook，只要登入相同帳戶、開啓同步處理，你在Chromebook上瀏覽器的設定、建立的網頁應用程式、桌布等資料大部分都能直接還原。&lt;/p&gt;
&lt;p&gt;我們先不查看同步處理選項，直接按下「接受並繼續」進入下一步。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-E59RTnTD6J8/YP3stBxHR3I/AAAAAAAFBCA/CsM24J_KBVIwxOZD487mGC3g72JC7lOzwCLcBGAsYHQ/s1600/20210726_053749.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-E59RTnTD6J8/YP3stBxHR3I/AAAAAAAFBCA/CsM24J_KBVIwxOZD487mGC3g72JC7lOzwCLcBGAsYHQ/s450/20210726_053749.jpg&quot; title=&quot;20210726_053749.jpg&quot; alt=&quot;20210726_053749.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再來是「Google Play應用程式和服務」。現在的Chromebook幾乎都有內建Google Play，可以安裝Android應用程式，這可是現在Chromebook的主要賣點之一。我建議勾選下面的「使用Google雲端硬碟備份你的資料」。有了Google雲端硬碟備份資料，即使Chromebook被還原或是使用其他新的Chromebook時，Android系統會根據備份資料自動安裝你之前安裝的應用程式，讓你免於重新安裝的繁雜手續。不過此處的備份並不包括應用程式中的設定，例如應用程式的登入資訊或單機遊戲的遊戲記錄。這些資料得仰賴應用程式自身使用其他方式備份。&lt;/p&gt;
&lt;p&gt;讓我們按下「更多」進入下一步。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-oWaYYNN78LY/YP3stLuVTeI/AAAAAAAFBB4/AkxnmAy-Do0r7Jd_RimRFMB-tWkD7yZnACLcBGAsYHQ/s1600/20210726_053804.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-oWaYYNN78LY/YP3stLuVTeI/AAAAAAAFBB4/AkxnmAy-Do0r7Jd_RimRFMB-tWkD7yZnACLcBGAsYHQ/s450/20210726_053804.jpg&quot; title=&quot;20210726_053804.jpg&quot; alt=&quot;20210726_053804.jpg&quot; width=&quot;450&quot; height=&quot;339&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下來是「使用定位服務」的設定。Chromebook使用網路位置來定位，這邊可以自行選擇是否勾選「使用定位服務」。確定之後按下「接受」進入下一步。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-eJAB2hVq8yg/YP3ss95I7UI/AAAAAAAFBBw/rPd1Q1HF-ZsrT2TWHd6-0WIyWy-LhcFHQCLcBGAsYHQ/s1600/20210726_053820.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-eJAB2hVq8yg/YP3ss95I7UI/AAAAAAAFBBw/rPd1Q1HF-ZsrT2TWHd6-0WIyWy-LhcFHQCLcBGAsYHQ/s450/20210726_053820.jpg&quot; title=&quot;20210726_053820.jpg&quot; alt=&quot;20210726_053820.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;終於看到「設定完成!」，讓我們按下「開始使用」吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-L__yqWM5Yt0/YP3stMTLWDI/AAAAAAAFBB0/y1026Cd7Hp4jz7xwvfqABMuX20iaUpIQwCLcBGAsYHQ/s1600/20210726_053833.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-L__yqWM5Yt0/YP3stMTLWDI/AAAAAAAFBB0/y1026Cd7Hp4jz7xwvfqABMuX20iaUpIQwCLcBGAsYHQ/s450/20210726_053833.jpg&quot; title=&quot;20210726_053833.jpg&quot; alt=&quot;20210726_053833.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最後就是Chromebook的主要操作畫面了。現在你已經可以開始使用Chromebook囉。&lt;/p&gt;
&lt;p&gt;Chromebook的核心是Chrome作業系統，而Chrome作業系統的主要運作其實就是Google Chrome瀏覽器。Chrome瀏覽器本身就能使用原生的網頁應用程式並&lt;a href=&quot;https://chrome.google.com/webstore?hl=zh-TW&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;安裝Google Chrome擴充功能&lt;/a&gt;。如果想要更多應用程式，也可以&lt;a href=&quot;https://support.google.com/googleplay/answer/7021273?hl=zh-Hant&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;從Google Play商店安裝Android APP&lt;/a&gt;或是&lt;a href=&quot;https://support.google.com/chromebook/answer/9145439?hl=zh-Hant&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;使用Linux開發環境安裝更多的應用程式&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;除此之外，如果你還想要有更多可客製化的桌面環境，或是安裝更多開發程式所需要的開發套件，那接下來要介紹的使用crouton安裝完整的Linux桌面環境，可能會是吸引開發者使用Chromebook的一大賣點喔。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;使用完整Linux桌面環境的優缺點 /&amp;nbsp;Linux desktop environment:&amp;nbsp;Pros and cons&lt;/h2&gt;
&lt;p&gt;在Chromebook上安裝Linux作業系統，能帶給開發者客製化的桌面環境、安裝順手的輸入法與更多的應用程式，而且同樣能夠繼續使用原本的Chrome作業系統和Android應用程式。然而，爲了安裝Linux桌面環境，我們也必須承擔可能破壞保固的風險、系統必須重置、以及開機出現警告畫面的缺點。以下我將進一步說明使用Linux桌面環境的優缺點細節。&lt;/p&gt;
&lt;h3&gt;優點1. 可客製化的桌面環境 / Pros 1:&amp;nbsp;Customizable environment&lt;/h3&gt;
&lt;p&gt;Linux的桌面環境有許多選擇。你可以使用以開始選單為主、操作方式較為傳統的&lt;a href=&quot;https://www.xfce.org/&quot; target=&quot;_blank&quot;&gt;Xfce&lt;/a&gt;或&lt;a href=&quot;http://lxde.org/&quot; target=&quot;_blank&quot;&gt;LXDE&lt;/a&gt;，也可以用漂亮與流暢的&lt;a href=&quot;https://www.gnome.org/&quot; target=&quot;_blank&quot;&gt;GNOME&lt;/a&gt;和&lt;a href=&quot;https://www.wikiwand.com/en/Unity_(user_interface)&quot; target=&quot;_blank&quot;&gt;Unity&lt;/a&gt;。而且不論哪一種桌面環境，都可以另外安裝擴充功能或套件。Linux桌面環境的可客製化程度，可說是跟Linux一樣地自由奔放。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-yR_ointPp7U/YM9Ni6-XifI/AAAAAAAE_wc/2soeD3SEgC8AHO55iUWKywQUYXtkXFNMwCLcBGAsYHQ/s1600/Screenshot_from_2021-06-19_21-52-11.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-yR_ointPp7U/YM9Ni6-XifI/AAAAAAAE_wc/2soeD3SEgC8AHO55iUWKywQUYXtkXFNMwCLcBGAsYHQ/s450/Screenshot_from_2021-06-19_21-52-11.png&quot; title=&quot;Screenshot_from_2021-06-19_21-52-11.png&quot; alt=&quot;Screenshot_from_2021-06-19_21-52-11.png&quot; width=&quot;450&quot; height=&quot;255.625&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;上圖是GNOME桌面環境的Activities Overview (運作視窗總覽)和虛擬桌面功能，使用起來非常直覺且好用。如果你還以為Linux就是只有指令列的話，那GNOME桌面環境絕對會顛覆你對Linux的印象。&lt;/p&gt;
&lt;h3&gt;優點2.&amp;nbsp;可安裝輸入法且整合良好 / Pros 2: Input method&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-yV_IszJ8z8I/YM9Ni1hHCdI/AAAAAAAE_wU/qKGJ3NsBm_gbynGfIB5CaMr-98GkJr20wCLcBGAsYHQ/s1600/Screenshot_from_2021-06-19_22-05-18.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-yV_IszJ8z8I/YM9Ni1hHCdI/AAAAAAAE_wU/qKGJ3NsBm_gbynGfIB5CaMr-98GkJr20wCLcBGAsYHQ/s450/Screenshot_from_2021-06-19_22-05-18.png&quot; title=&quot;Screenshot_from_2021-06-19_22-05-18.png&quot; alt=&quot;Screenshot_from_2021-06-19_22-05-18.png&quot; width=&quot;450&quot; height=&quot;331&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chromebook內建了中文輸入法，但我仍偏好使用習慣的&lt;a href=&quot;https://rime.im/&quot; target=&quot;_blank&quot;&gt;中州韻輸入法RIME&lt;/a&gt;。上圖是使用RIME打字的畫面。RIME不僅有內建學習功能，會記下你過的詞彙，也能夠讓使用者自訂常用詞彙。一旦RIME記住了你用過的詞彙，下次就能用每個字的第一個注音直接輸入，RIME會自動對應到記住的詞彙，非常方便。&lt;/p&gt;
&lt;p&gt;完整的Linux桌面環境在輸入法的設定、顯示和調整上都比較容易。對打字有大量需求的使用者來說，順手的輸入法特別重要。&lt;/p&gt;
&lt;h3&gt;優點3. Linux應用程式可設定項目多且效能更好 / Pros 3: More Linux Applications and better performance&lt;/h3&gt;
&lt;p&gt;crouton是以&lt;a href=&quot;https://www.wikiwand.com/zh-tw/Chroot&quot; target=&quot;_blank&quot;&gt;chroot技術&lt;/a&gt;來運作完整的Linux桌面環境，本身可以進行Linux系統的大部分操作。而且由於是在原生系統上運作，效能也比在虛擬機器還要好。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-76TgMbpKi9Q/YNAwf1TeGBI/AAAAAAAE_yA/qvymhNy3E14isyEgCdJGPo4hjHdlPDXxwCLcBGAsYHQ/s1600/Screenshot_2021-06-21_09-58-35.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-76TgMbpKi9Q/YNAwf1TeGBI/AAAAAAAE_yA/qvymhNy3E14isyEgCdJGPo4hjHdlPDXxwCLcBGAsYHQ/s450/Screenshot_2021-06-21_09-58-35.png&quot; title=&quot;Screenshot_2021-06-21_09-58-35.png&quot; alt=&quot;Screenshot_2021-06-21_09-58-35.png&quot; width=&quot;450&quot; height=&quot;148&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中我覺得最方便的是Linux具備的各種掛載功能(mount)。我可以用&lt;a href=&quot;https://www.techrepublic.com/article/how-to-mount-your-google-drive-on-linux-with-google-drive-ocamlfuse/&quot; target=&quot;_blank&quot;&gt;google-drive-ocamlfuse掛載Google雲端硬碟&lt;/a&gt;、可以用&lt;a href=&quot;https://sleeplessbeastie.eu/2017/09/04/how-to-mount-webdav-share/&quot; target=&quot;_blank&quot;&gt;davfs2掛載NAS上的Webdav檔案系統&lt;/a&gt;。這對擁有多台裝置、需要跨裝置編輯檔案的使用者來說，特別實用。&lt;/p&gt;
&lt;h3&gt;優點4.&amp;nbsp;你依然有Chrome作業系統 / Pros 4: Use Chrome OS at the same time&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-odxbSGy14-U/YM9Ni_04n8I/AAAAAAAE_wQ/KEnPEFI-yrEr0Oc3HyUKe3nw7ZSIPz1EQCLcBGAsYHQ/s1600/Screenshot_2021-06-18_11.24.39_PM.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-odxbSGy14-U/YM9Ni_04n8I/AAAAAAAE_wQ/KEnPEFI-yrEr0Oc3HyUKe3nw7ZSIPz1EQCLcBGAsYHQ/s450/Screenshot_2021-06-18_11.24.39_PM.png&quot; title=&quot;Screenshot_2021-06-18_11.24.39_PM.png&quot; alt=&quot;Screenshot_2021-06-18_11.24.39_PM.png&quot; width=&quot;450&quot; height=&quot;298&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-1Nmim16nOSo/YM9Ni69h80I/AAAAAAAE_wY/E9Jepg2TFp01CNJ6Pz69nGJLyyKrsO9AQCLcBGAsYHQ/s1600/Screenshot_from_2021-06-19_23-05-58.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-1Nmim16nOSo/YM9Ni69h80I/AAAAAAAE_wY/E9Jepg2TFp01CNJ6Pz69nGJLyyKrsO9AQCLcBGAsYHQ/s450/Screenshot_from_2021-06-19_23-05-58.png&quot; title=&quot;Screenshot_from_2021-06-19_23-05-58.png&quot; alt=&quot;Screenshot_from_2021-06-19_23-05-58.png&quot; width=&quot;450&quot; height=&quot;310&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linux桌面環境只是在原本的Chrome作業系統裡面，隔離出可獨立運作的空間。不過在crouton的整合之後，Linux桌面環境與Chrome作業系統可以彼此互通有無。舉例來說，crouton整合了Chrome作業系統和Linux桌面環境的常用資料夾，這些資料夾包括了「下載」資料夾和記憶卡。因此不論我們使用哪一個系統，應用程式都能正常讀取位於「下載」資料夾和記憶卡的檔案。&lt;/p&gt;
&lt;p&gt;除此之外，crouton也整合了切換系統的快速鍵組合。按下ctrl + alt + shift + F1的快速鍵，我們能夠立即切換Linux桌面環境和Chrome作業系統兩種環境。如此一來，我們就可以在同一台Chromebook裡面，一邊在Linux裡面開發APP，一邊在Android測試APP的運作囉。&lt;/p&gt;
&lt;h3&gt;缺點1.&amp;nbsp;可能破壞保固 / Cons 1:&amp;nbsp;May Void the Warranty&lt;/h3&gt;
&lt;p&gt;要使用完整的Linux桌面環境，必須獲得Chrome作業系統更高的操作權限，因而&lt;b&gt;
    &lt;font color=&quot;#ff0000&quot;&gt;必須啟用Chromebook的開發人員模式&lt;/font&gt;
  &lt;/b&gt;。但讓使用者獲得更高的權限，也就代表機器將會面臨更大的風險。如果使用者操作不慎、刪除了系統的必要元件，確實有可能導致系統再也無法啟動。如此一來，可能會讓Chromebook的保固失效。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;不過根據我這幾年使用的經驗來看，Chromebook耐操程度讓人十分安心。我遇過儲存空間被塞滿，導致系統一直跳出各種錯誤訊息的情況；也遇過電量剩餘1%，不充電不行的情況。但在重開機、充電之後，Chromebook都還是能夠正常運作。再怎麼不濟，我們也還能用「&lt;a href=&quot;https://support.google.com/chromebook/answer/3227606?hl=zh-Hant&quot; target=&quot;_blank&quot;&gt;重設Chromebook的硬體&lt;/a&gt;」的最終手段，讓Chromebook自行重設到能夠正常運作的初始狀態。&lt;/p&gt;
&lt;p&gt;我跟ASUS官方確認過，如果只是單純啟用開發人員模式、正常使用Chromebook作業系統的話，並不會影響保固。不過在軟體操作之外，人為刻意拆裝硬體的話，可就真的會破壞保固囉。&lt;/p&gt;
&lt;h3&gt;缺點2.&amp;nbsp;系統必須重置 / Cons 2:&amp;nbsp;Chromebook must be reset&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-5FW_QjboCqs/YP3smDhUwBI/AAAAAAAFBBc/ZLFGqCfRtYsKqt2WQoYoMC9FQW2AatrXQCLcBGAsYHQ/s1600/20210726_061505.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-5FW_QjboCqs/YP3smDhUwBI/AAAAAAAFBBc/ZLFGqCfRtYsKqt2WQoYoMC9FQW2AatrXQCLcBGAsYHQ/s450/20210726_061505.jpg&quot; title=&quot;20210726_061505.jpg&quot; alt=&quot;20210726_061505.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;啟用Chromebook開發人員模式會進行系統重置(Powerwash)。原本在Chromebook中安裝的應用程式和設定會全部還原成原廠。因此，如果決定要使用Linux桌面環境的話，最好一開始就先啟用開發人員模式。&lt;/p&gt;
&lt;h3&gt;缺點3.&amp;nbsp;開機時畫面的警告 / Cons 3: Warning screen appears at startup&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-FlXZd_uO7SI/YP3smEJVoCI/AAAAAAAFBBk/cymV3IeNIgo36StCQFL-Z6ciUuq0jxRsACLcBGAsYHQ/s1600/20210726_061444_1.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-FlXZd_uO7SI/YP3smEJVoCI/AAAAAAAFBBk/cymV3IeNIgo36StCQFL-Z6ciUuq0jxRsACLcBGAsYHQ/s450/20210726_061444_1.jpg&quot; title=&quot;20210726_061444.jpg&quot; alt=&quot;20210726_061444.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;開啟開發人員模式之後，Chromebook開機時就會顯示「目前處於開發人員模式」的警告畫面。此時我們可以直接按下Enter鍵來繼續開機，或是改變選項「返回安全模式」，關閉開發人員模式。&lt;/p&gt;
&lt;p&gt;需要注意的是，返回安全模式依然會重置系統。如果你要將Chromebook送回原廠維修，又不想讓原廠知道你啟用了「開發人員模式」的話，也可以在此選擇「返回安全模式」。後面我們會再來說明返回安全模式的做法。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;安裝Linux桌面環境 / Install Linux desktop environment on Chromebook&lt;/h2&gt;
&lt;p&gt;在瞭解了Chromebook使用Linux桌面環境的優缺點後，如果你覺得利大於弊，或是你剛好手邊就有一台剛買來的全新Chromebook，那我們可以考慮把它裝上Linux桌面環境。&lt;/p&gt;
&lt;p&gt;Linux桌面環境的安裝仰賴第三方開發者&lt;a href=&quot;https://github.com/dnschneid&quot; target=&quot;_blank&quot;&gt;dnschneid&lt;/a&gt;的&lt;a href=&quot;https://github.com/dnschneid/crouton&quot; target=&quot;_blank&quot;&gt;crouton&lt;/a&gt;。crouton的意思是&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;C&lt;/span&gt;h&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;R&lt;/span&gt;omium &lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;O&lt;/span&gt;s &lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;U&lt;/span&gt;niversal chroo&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;T&lt;/span&gt; envir&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;ON&lt;/span&gt;ment，但看起來這&lt;a href=&quot;https://github.com/dnschneid/crouton#croutonan-acronym&quot; target=&quot;_blank&quot;&gt;只是作者隨興的命名方式&lt;/a&gt;，縮寫只是方便稱呼而已。&lt;/p&gt;
&lt;p&gt;crouton的&lt;a href=&quot;https://github.com/dnschneid/crouton#the-easy-way-assuming-you-want-an-ubuntu-lts-with-xfce&quot; target=&quot;_blank&quot;&gt;GitHub保存庫&lt;/a&gt;列出了整個Linux桌面環境的安裝步驟概要。大致上為啟用開發人員模式、下載並安裝crouton、安裝Linux桌面環境、以及最後的完成安裝。其中，在安裝Linux桌面環境的過程中，會因為Chromebook機型的不同、Chrome作業系統的版本不同而會有些許差異。&lt;/p&gt;
&lt;p&gt;然而，在撰寫此文時，ASUS Chromebook Flip CX5 (CX5500)使用的Chrome作業系統91.0.4472.114版本，會讓Linux桌面環境的安裝過程卡在&lt;a href=&quot;https://github.com/dnschneid/crouton/issues/3811&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Compiling CRAS (i386)&lt;/a&gt;錯誤。我們必須使用較新的Chrome作業系統版本，才能讓安裝順利進行。為此，在Linux桌面環境的安裝步驟中，我們還要加入將Chrome作業系統切換為開發人員頻道的手續。&lt;/p&gt;
&lt;p&gt;接下來我們就來看看要怎麼在ASUS Chromebook Flip CX5 (CX5500)裡面使用crouton安裝Linux桌面環境吧。&lt;/p&gt;
&lt;h3&gt;&lt;span style=&quot;font-weight: 700; color: inherit;&quot;&gt;1. 啓用開發人員模式 / Enable &quot;Developer Mode&quot;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Bjd7PJjJMNk/YPqNIU0WJ5I/AAAAAAAFA4s/aiPDzt5Nw9kF1YMJ-D7GmJrTzbj2EE_NACLcBGAsYHQ/s1600/2021-0723-173231.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-Bjd7PJjJMNk/YPqNIU0WJ5I/AAAAAAAFA4s/aiPDzt5Nw9kF1YMJ-D7GmJrTzbj2EE_NACLcBGAsYHQ/s450/2021-0723-173231.png&quot; title=&quot;2021-0723-173231.png&quot; alt=&quot;2021-0723-173231.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;在Chromebook關機的狀態下，請按著「esc」與「重新整理」這兩個按鍵，再按下電源鍵開機。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-BB28e3P2lBk/YP3smJ5vjUI/AAAAAAAFBBU/-KzlbILcW1MaoRkFzQtI1M-MUiab5jC4gCLcBGAsYHQ/s1600/20210726_061314.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-BB28e3P2lBk/YP3smJ5vjUI/AAAAAAAFBBU/-KzlbILcW1MaoRkFzQtI1M-MUiab5jC4gCLcBGAsYHQ/s450/20210726_061314.jpg&quot; title=&quot;20210726_061314.jpg&quot; alt=&quot;20210726_061314.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;開機之後會看到「我們會逐步引導你完成還原程序」。這本來是修復Chromebook或是為了將Chromebook改為指定版本時的操作，但它同時也是啟用開發人員模式的步驟之一。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-4gfygrdoOqM/YPrb8I8eaNI/AAAAAAAFA40/nGj043bOS9g9VntwhlLUhOSlCpGlmg29gCLcBGAsYHQ/s1600/2021-0723-200019.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-4gfygrdoOqM/YPrb8I8eaNI/AAAAAAAFA40/nGj043bOS9g9VntwhlLUhOSlCpGlmg29gCLcBGAsYHQ/s450/2021-0723-200019.png&quot; title=&quot;2021-0723-200019.png&quot; alt=&quot;2021-0723-200019.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我們先不理會畫面上的訊息，直接按下鍵盤上的「ctrl」與「d」鍵。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-2jeSkGa5Tj0/YP3smGZ06lI/AAAAAAAFBBY/vQCieAQ91JkE281Yi_e89PCfjpZ3sZ45ACLcBGAsYHQ/s1600/20210726_061420.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-2jeSkGa5Tj0/YP3smGZ06lI/AAAAAAAFBBY/vQCieAQ91JkE281Yi_e89PCfjpZ3sZ45ACLcBGAsYHQ/s450/20210726_061420.jpg&quot; title=&quot;20210726_061420.jpg&quot; alt=&quot;20210726_061420.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此時會顯示「你正在嘗試啟用開發人員模式」，並顯示警告訊息。我們在「確認」上按下ENTER繼續下一步。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-HxQITorpMAA/YP3smCBoZcI/AAAAAAAFBBg/pKVXQetv-3cc17_3aJJvzC2KGRBujkA2ACLcBGAsYHQ/s1600/20210726_061448.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-HxQITorpMAA/YP3smCBoZcI/AAAAAAAFBBg/pKVXQetv-3cc17_3aJJvzC2KGRBujkA2ACLcBGAsYHQ/s450/20210726_061448.jpg&quot; title=&quot;20210726_061448.jpg&quot; alt=&quot;20210726_061448.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在看到「目前處於開發人員模式」的畫面之後，我們直接按下Enter鍵從「從內部磁碟啟動」，進行下一步。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-97-D9aVuy84/YP3smDc6B9I/AAAAAAAFBBo/YE5fh0Nxi78iJXqLHJ16MTSDtQMKh6XJwCLcBGAsYHQ/s1600/20210726_061515.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-97-D9aVuy84/YP3smDc6B9I/AAAAAAAFBBo/YE5fh0Nxi78iJXqLHJ16MTSDtQMKh6XJwCLcBGAsYHQ/s450/20210726_061515.jpg&quot; title=&quot;20210726_061515.jpg&quot; alt=&quot;20210726_061515.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此時Chromebook開始將系統轉換成「開發人員模式」，而系統內的資料會全部清除。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-BkvfPPwMlCk/YP3sfIUOYPI/AAAAAAAFBA8/IQMukLMzURMMKoSRijZY2w4QYvEGSutGgCLcBGAsYHQ/s1600/20210726_061551.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-BkvfPPwMlCk/YP3sfIUOYPI/AAAAAAAFBA8/IQMukLMzURMMKoSRijZY2w4QYvEGSutGgCLcBGAsYHQ/s450/20210726_061551.jpg&quot; title=&quot;20210726_061551.jpg&quot; alt=&quot;20210726_061551.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上方有開發人員模式轉換的進度條。整個轉換的時間大概是10分鐘。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-h3IlWvkrsLA/YP3sffqlK8I/AAAAAAAFBBE/nnFi1RKuml4dE-UMGu2C9Aw67cdqeC3iwCLcBGAsYHQ/s1600/20210726_062649.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-h3IlWvkrsLA/YP3sffqlK8I/AAAAAAAFBBE/nnFi1RKuml4dE-UMGu2C9Aw67cdqeC3iwCLcBGAsYHQ/s450/20210726_062649.jpg&quot; title=&quot;20210726_062649.jpg&quot; alt=&quot;20210726_062649.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;當我們再度看到「目前處於開發人員模式」的畫面時，就表示我們已經順利啟用開發人員模式了。現在我們選擇「從內部磁碟啟動」直接以開發人員模式使用Chromebook。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-A8RWkbJ1W_Y/YP3sfkRDvRI/AAAAAAAFBBQ/AC6GSWAXR7QnnRJSnAJg1L_l3MjAX5V6QCLcBGAsYHQ/s1600/20210726_053307.jpg&quot; style=&quot;color: rgb(35, 82, 124); font-weight: 400; background-color: rgb(255, 255, 255); outline: 0px;&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-A8RWkbJ1W_Y/YP3sfkRDvRI/AAAAAAAFBBQ/AC6GSWAXR7QnnRJSnAJg1L_l3MjAX5V6QCLcBGAsYHQ/s450/20210726_053307.jpg&quot; title=&quot;20210726_053307.jpg&quot; alt=&quot;20210726_053307.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;現在Chromebook就以開發人員模式的狀態下重新開始。接著請一樣進行初次設定，直到進入Chrome作業系統的主要操作畫面吧。&lt;/p&gt;
&lt;h3&gt;2.&amp;nbsp;將Chrome作業系統切換為開發人員頻道 / Change Chrome OS version to Dev channel&lt;/h3&gt;
&lt;p&gt;這個步驟是為了避免Chrome作業系統91版會帶來的錯誤。如果你的Chrome作業系統已經超過了93版，那這個步驟可能可以略過。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-kl5wL7YYcWY/YPrb8MUjq2I/AAAAAAAFA48/duHCJrqpyJQ_YwU-IHYva3vs45fciCa-QCLcBGAsYHQ/s1600/2021-0723-225148.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-kl5wL7YYcWY/YPrb8MUjq2I/AAAAAAAFA48/duHCJrqpyJQ_YwU-IHYva3vs45fciCa-QCLcBGAsYHQ/s450/2021-0723-225148.png&quot; title=&quot;2021-0723-225148.png&quot; alt=&quot;2021-0723-225148.png&quot; width=&quot;296&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;順利進入Chrome作業系統的桌面後，我們要來&lt;a href=&quot;https://support.google.com/chromebook/answer/10052034?hl=zh-Hant&quot; target=&quot;_blank&quot;&gt;開啟Chromebook的設定&lt;/a&gt;。請按右下角的時間，開啟快捷選單。接著按快捷選單裡面的齒輪圖示「設定」，開啟設定視窗。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/---Hg31XNupQ/YPrb8EdasqI/AAAAAAAFA5A/afi8ahmU1ogqlug61G6cN6x5F-jta_fugCLcBGAsYHQ/s1600/2021-0723-230604.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/---Hg31XNupQ/YPrb8EdasqI/AAAAAAAFA5A/afi8ahmU1ogqlug61G6cN6x5F-jta_fugCLcBGAsYHQ/s450/2021-0723-230604.png&quot; title=&quot;2021-0723-230604.png&quot; alt=&quot;2021-0723-230604.png&quot; width=&quot;450&quot; height=&quot;289.172&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;從設定視窗左邊的選單中進入「關於Chrome作業系統」。然後再進入「其他詳細資訊」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-UeoUs9WDg8Q/YPrb8K_lbPI/AAAAAAAFA44/A8rUr6bYXBQUIsw0PI7Or0IOBVz--ht3QCLcBGAsYHQ/s1600/2021-0723-230837.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-UeoUs9WDg8Q/YPrb8K_lbPI/AAAAAAAFA44/A8rUr6bYXBQUIsw0PI7Or0IOBVz--ht3QCLcBGAsYHQ/s450/2021-0723-230837.png&quot; title=&quot;2021-0723-230837.png&quot; alt=&quot;2021-0723-230837.png&quot; width=&quot;450&quot; height=&quot;288.188&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我們可以看到頻道的設定中顯示「目前使用穩定版」。接著我們按下右邊的按鈕「變更版本」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-YAhhcFAxMSs/YPwmn4T-azI/AAAAAAAFA68/-ED5VzJIQ9E-3yQ_Q0ZSfGzcfTnUuzFsQCLcBGAsYHQ/s1600/2021-0724-213926.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-YAhhcFAxMSs/YPwmn4T-azI/AAAAAAAFA68/-ED5VzJIQ9E-3yQ_Q0ZSfGzcfTnUuzFsQCLcBGAsYHQ/s450/2021-0724-213926.png&quot; title=&quot;2021-0724-213926.png&quot; alt=&quot;2021-0724-213926.png&quot; width=&quot;450&quot; height=&quot;288.141&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此時會跳出選擇變更版本的選單。除了預設的「穩定版」之外，還有「測試版」和「開發人員版 -&amp;nbsp;不穩定」的兩個選項。在此我們選擇「開發人員版 -&amp;nbsp;不穩定」，按下「變更版本」按鈕。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-zMESU48vRHg/YPwmnwigm3I/AAAAAAAFA60/epyoWei6Iz0OHhN2Qd_axF_Jp_weimb8gCLcBGAsYHQ/s1600/2021-0724-213642.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-zMESU48vRHg/YPwmnwigm3I/AAAAAAAFA60/epyoWei6Iz0OHhN2Qd_axF_Jp_weimb8gCLcBGAsYHQ/s450/2021-0724-213642.png&quot; title=&quot;2021-0724-213642.png&quot; alt=&quot;2021-0724-213642.png&quot; width=&quot;450&quot; height=&quot;288.141&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;接著Chromebook會開始更新為開發人員版。耐心等待片刻，Chromebook會在更新完成後提示你重新啟動。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-VdwcPlxALuE/YPwmn6XPjeI/AAAAAAAFA6w/sKMrU-LrzfIGF676CQFH0t1AFEkBtqpHwCLcBGAsYHQ/s1600/2021-0724-214046.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-VdwcPlxALuE/YPwmn6XPjeI/AAAAAAAFA6w/sKMrU-LrzfIGF676CQFH0t1AFEkBtqpHwCLcBGAsYHQ/s450/2021-0724-214046.png&quot; title=&quot;2021-0724-214046.png&quot; alt=&quot;2021-0724-214046.png&quot; width=&quot;450&quot; height=&quot;286&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;重新啟動之後，Chrome作業系統就會更新為開發人員版。你可以注意到開發人員版的版本號碼是93.0.4543.0，比穩定版的91.0.4472.114還要新了不少。&lt;/p&gt;
&lt;p&gt;使用這個版本之後的Chrome作業系統，應該就不會發生&lt;a href=&quot;https://github.com/dnschneid/crouton/issues/3811&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Compiling CRAS (i386)&lt;/a&gt;錯誤，我們也能使用crouton正常安裝Linux桌面環境。&lt;/p&gt;
&lt;p&gt;根據Chrome作業系統的自動更新時程來看，大概在2021年8月之後，大部分Chromebook應該就會更新到93版之後。如此一來，未來要安裝Linux桌面環境時，可能就不需要將穩定版轉換成開發人員版了。&lt;/p&gt;
&lt;p&gt;附帶一提，如果你要將開發人員版變更爲穩定版的話，Chromebook可能會進行重置、還原設定。因此，等待穩定版也能安裝Linux桌面環境後再來安裝的話，就不用擔心未來切換爲穩定版時還需要重置的問題了。&lt;/p&gt;
&lt;h3&gt;3. 下載crouton / Download crouton&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-tqFkHyWdLUk/YP3P3wfJymI/AAAAAAAFBAg/IDqUh40qjWccYk5oqfkicmGY1w0vgyiKQCLcBGAsYHQ/s1600/2021-0726-045325.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-tqFkHyWdLUk/YP3P3wfJymI/AAAAAAAFBAg/IDqUh40qjWccYk5oqfkicmGY1w0vgyiKQCLcBGAsYHQ/s450/2021-0726-045325.png&quot; title=&quot;2021-0726-045325.png&quot; alt=&quot;2021-0726-045325.png&quot; width=&quot;450&quot; height=&quot;339&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著我們來下載crouton。crouton的網址如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;下載crouton的短網址：&lt;a href=&quot;https://goo.gl/fd3zc&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;goo.gl/fd3zc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;crouton的GitHub儲存庫：&lt;a href=&quot;https://github.com/dnschneid/crouton&quot; target=&quot;_blank&quot;&gt;https://github.com/dnschneid/crouton&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;請在瀏覽器的網址列直接輸入短網址，就能完成crouton的下載。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-qvqfRskniho/YPwmn58SF5I/AAAAAAAFA64/khtvrBXzyiUHsKU4QDXJT-bXnMiv9ICqgCLcBGAsYHQ/s1600/2021-0724-215044.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-qvqfRskniho/YPwmn58SF5I/AAAAAAAFA64/khtvrBXzyiUHsKU4QDXJT-bXnMiv9ICqgCLcBGAsYHQ/s450/2021-0724-215044.png&quot; title=&quot;2021-0724-215044.png&quot; alt=&quot;2021-0724-215044.png&quot; width=&quot;450&quot; height=&quot;310.609&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;打開「下載」資料夾，crouton確實已經下載了。crouton本身是Bash的腳本檔，沒有副檔名。確認crouton下載後，讓我們繼續下一步。&lt;/p&gt;
&lt;h3&gt;4. 安裝crouton / I&lt;span style=&quot;color: inherit;&quot;&gt;nstall&amp;nbsp;&lt;/span&gt;crouton&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-oNd6wiNmzN4/YPwmn1gpzmI/AAAAAAAFA7E/2WpQwI3r4ZUCGrGNGPMS9Mq8Y9iTrN5_wCLcBGAsYHQ/s1600/2021-0724-223747.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-oNd6wiNmzN4/YPwmn1gpzmI/AAAAAAAFA7E/2WpQwI3r4ZUCGrGNGPMS9Mq8Y9iTrN5_wCLcBGAsYHQ/s450/2021-0724-223747.png&quot; title=&quot;2021-0724-223747.png&quot; alt=&quot;2021-0724-223747.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;現在我們要開始使用crouton。crouton的操作都是以指令列介面進行。我們按下「ctrl」、「alt」跟「t」按鍵，開啓Chrome作業系統的指令列介面crosh。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;快捷鍵：ctrl&amp;nbsp;+&amp;nbsp;alt&amp;nbsp;+&amp;nbsp;t&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-5fRBQirfgtM/YM4LEWjZmRI/AAAAAAAE_s0/uoSHpZFWvDcjtkwHYjmHHcWPjpA0ys3ZQCLcBGAsYHQ/s1600/Screenshot_2021-06-19_5.43.14_PM.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-5fRBQirfgtM/YM4LEWjZmRI/AAAAAAAE_s0/uoSHpZFWvDcjtkwHYjmHHcWPjpA0ys3ZQCLcBGAsYHQ/s450/Screenshot_2021-06-19_5.43.14_PM.png&quot; title=&quot;Screenshot_2021-06-19_5.43.14_PM.png&quot; alt=&quot;Screenshot_2021-06-19_5.43.14_PM.png&quot; width=&quot;450&quot; height=&quot;287.203&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;在crosh指令列介面中，請用滑鼠點一下畫面，讓輸入游標聚焦在指令列介面上。接著請輸入shell指令：&lt;/p&gt;
&lt;pre&gt;&lt;span class=&quot;bash&quot; undefined=&quot;&quot;&gt;shell&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-pVNpb5vnnSM/YM8BQnvbK-I/AAAAAAAE_vM/Gzm60kq-CbUkE_Z-mVVe2FiAsiApV2tDQCLcBGAsYHQ/s1600/Screenshot_2021-06-19_8.48.12_PM.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-pVNpb5vnnSM/YM8BQnvbK-I/AAAAAAAE_vM/Gzm60kq-CbUkE_Z-mVVe2FiAsiApV2tDQCLcBGAsYHQ/s450/Screenshot_2021-06-19_8.48.12_PM.png&quot; title=&quot;Screenshot_2021-06-19_8.48.12_PM.png&quot; alt=&quot;Screenshot_2021-06-19_8.48.12_PM.png&quot; width=&quot;450&quot; height=&quot;287.203&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;近期Chrome作業系統提高了安全性，我們不能直接執行crouton，必須要將crouton安裝到可執行的位置去。請輸入以下指令來安裝crouton：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo&amp;nbsp;install&amp;nbsp;-Dt&amp;nbsp;/usr/local/bin&amp;nbsp;-m&amp;nbsp;755&amp;nbsp;~/Downloads/crouton&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;5. 安裝Linux桌面環境 / I&lt;span style=&quot;color: inherit;&quot;&gt;nstall&amp;nbsp;&lt;/span&gt;Linux desktop environment&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-pmkmNU0KXk8/YM8BQrgbPwI/AAAAAAAE_vY/PkLzS3ObAnAK12h3RdhfmxpBBaoPwrIMwCLcBGAsYHQ/s1600/Screenshot_2021-06-19_8.48.29_PM.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-pmkmNU0KXk8/YM8BQrgbPwI/AAAAAAAE_vY/PkLzS3ObAnAK12h3RdhfmxpBBaoPwrIMwCLcBGAsYHQ/s450/Screenshot_2021-06-19_8.48.29_PM.png&quot; title=&quot;Screenshot_2021-06-19_8.48.29_PM.png&quot; alt=&quot;Screenshot_2021-06-19_8.48.29_PM.png&quot; width=&quot;450&quot; height=&quot;285&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在安裝好crouton之後，我們就能用crouton安裝Linux桌面環境。在Linux桌面環境的安裝上，crouton提供了大量可調整的選項。我們可以選擇Linux發佈版、桌面環境、預先安裝的應用程式、以及軟硬體的相關整合設定。你可以使用&lt;a href=&quot;https://www.ubuntu-tw.org/modules/tinyd0/&quot; target=&quot;_blank&quot;&gt;Ubuntu發佈版&lt;/a&gt;搭配&lt;a href=&quot;https://www.gnome.org/&quot; target=&quot;_blank&quot;&gt;GNOME桌面環境&lt;/a&gt;、使用&lt;a href=&quot;https://www.debian.org/&quot; target=&quot;_blank&quot;&gt;Debian發佈版&lt;/a&gt;搭配&lt;a href=&quot;https://www.xfce.org/&quot; target=&quot;_blank&quot;&gt;xfce桌面環境&lt;/a&gt;、也可以用&lt;a href=&quot;https://www.kali.org/get-kali/&quot; target=&quot;_blank&quot;&gt;kali發佈版&lt;/a&gt;搭配&lt;a href=&quot;https://kde.org/&quot; target=&quot;_blank&quot;&gt;KDE桌面環境&lt;/a&gt;。關於crouton可使用發佈版以及選項設定，請&lt;a href=&quot;https://github.com/dnschneid/crouton/blob/master/README.md&quot; target=&quot;_blank&quot;&gt;查閱crouton的說明&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;然而，由於Chromebook的硬體配置和Chrome作業系統版本仍然有各種差異，導致僅有部分crouton的安裝選項組合能夠順利完成安裝。在ASUS Chromebook Flip CX5 (CX5500)這台Chromebook上，我發現代號bionic的Ubuntu的18.04版與GNOME桌面環境的組合能夠正常運作。以下我就用Ubuntu發佈版搭配GNOME桌面環境的組合，說明如何安裝Linux桌面環境。安裝的指令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo&amp;nbsp;crouton&amp;nbsp;-t&amp;nbsp;audio,touch,chrome,cli-extra,core,extension,gtk-extra,keyboard,xorg,gnome-desktop&amp;nbsp;-r&amp;nbsp;bionic&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一開始crouton會提示bionic並非正常支援版本。我們可以忽略這個提示，放著讓它繼續安裝。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-jP7wV0R5eaQ/YPwmn4ws53I/AAAAAAAFA7A/289GWxIHjgs9IjY2qpMnAB1A4epfjjegwCLcBGAsYHQ/s1600/2021-0724-220910.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-jP7wV0R5eaQ/YPwmn4ws53I/AAAAAAAFA7A/289GWxIHjgs9IjY2qpMnAB1A4epfjjegwCLcBGAsYHQ/s450/2021-0724-220910.png&quot; title=&quot;2021-0724-220910.png&quot; alt=&quot;2021-0724-220910.png&quot; width=&quot;450&quot; height=&quot;247&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;crouton的安裝過程很容易遇到各種錯誤。有時候是某個套件無法安裝，我們必須手動安裝。有時候是更新套件列表的過程中有所缺失，我們也必須手動更新套件列表。這些錯誤可能會隨著Chromebook的硬體與Chrome作業系統版本而有所不同。我之後再另外撰文說明。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Ea1JYCeHpgs/YPwmw7MECUI/AAAAAAAFA7M/_deBQ9lZRKIEJJZSyFpfHFkHMrRiyntwACLcBGAsYHQ/s1600/2021-0724-221017.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Ea1JYCeHpgs/YPwmw7MECUI/AAAAAAAFA7M/_deBQ9lZRKIEJJZSyFpfHFkHMrRiyntwACLcBGAsYHQ/s450/2021-0724-221017.png&quot; title=&quot;2021-0724-221017.png&quot; alt=&quot;2021-0724-221017.png&quot; width=&quot;450&quot; height=&quot;285&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;整個安裝時長大概是一個半小時。如果順利安裝完成的話，你會看到crouton提示你輸入帳號的訊息：「&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Please specify a username for the primary user: &lt;/span&gt;」。這裡是讓你建立Linux桌面環境使用者帳號的設定。Linux桌面環境的帳號與Chrome作業系統登入的帳號兩者各自獨立。在Linux桌面環境你可以設定一個簡單的帳號和密碼即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-FzE2mFQvbRU/YPwmw1Dq2FI/AAAAAAAFA7I/V5XTqVh61CANxbxSPEea1eTAA2y4k7PoACLcBGAsYHQ/s1600/2021-0724-221301.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-FzE2mFQvbRU/YPwmw1Dq2FI/AAAAAAAFA7I/V5XTqVh61CANxbxSPEea1eTAA2y4k7PoACLcBGAsYHQ/s450/2021-0724-221301.png&quot; title=&quot;2021-0724-221301.png&quot; alt=&quot;2021-0724-221301.png&quot; width=&quot;450&quot; height=&quot;290&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在設定密碼兩次之後，Linux桌面環境的安裝步驟就來到了尾聲。&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;6. 完成安裝設定 / Finish&lt;/h3&gt;
&lt;p&gt;完成安裝之後，我們可以直接輸入「sudo startgnome」進入Linux桌面環境。不過爲了講解整個操作過程，在此我不直接進入Linux桌面，而是將Chromebook整個關機，從頭說明如何從開機進入到Linux桌面。&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;使用Linux桌面環境 / Use Linux desktop environment on Chromebook&lt;/h2&gt;
&lt;p&gt;在使用crouton裝好Linux桌面環境後，以後我們就可以在Chromebook裡同時使用Chrome作業系統與Linux桌面環境了。以下我將說明如何進入已經安裝好的Linux桌面環境。&lt;/p&gt;
&lt;h3&gt;1. 開機 / Startup&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-FlXZd_uO7SI/YP3smEJVoCI/AAAAAAAFBBk/cymV3IeNIgo36StCQFL-Z6ciUuq0jxRsACLcBGAsYHQ/s1600/20210726_061444_1.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-FlXZd_uO7SI/YP3smEJVoCI/AAAAAAAFBBk/cymV3IeNIgo36StCQFL-Z6ciUuq0jxRsACLcBGAsYHQ/s450/20210726_061444_1.jpg&quot; title=&quot;20210726_061444.jpg&quot; alt=&quot;20210726_061444.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在開啟Chromebook的時候，如果啟用了開發人員模式，一開始就會看到「目前處於開發人員模式」的訊息。我們直接按下Enter從「內部磁碟啟動」即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-VV8DfF4xjHs/YP3sfUXiflI/AAAAAAAFBBI/crudd9YV1mw4GRg4Qy0z5exAblFgAmM9gCLcBGAsYHQ/s1600/20210726_063654.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-VV8DfF4xjHs/YP3sfUXiflI/AAAAAAAFBBI/crudd9YV1mw4GRg4Qy0z5exAblFgAmM9gCLcBGAsYHQ/s450/20210726_063654.jpg&quot; title=&quot;20210726_063654.jpg&quot; alt=&quot;20210726_063654.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著請登入你的Chrome作業系統帳號。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-QJVzPLYUqgU/YP3sfvdWvJI/AAAAAAAFBBM/gG5-AO9qQV4HQaBhq2zFW1mOgMZXL3lbQCLcBGAsYHQ/s1600/20210726_064959.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-QJVzPLYUqgU/YP3sfvdWvJI/AAAAAAAFBBM/gG5-AO9qQV4HQaBhq2zFW1mOgMZXL3lbQCLcBGAsYHQ/s450/20210726_064959.jpg&quot; title=&quot;20210726_064959.jpg&quot; alt=&quot;20210726_064959.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;進入Chrome作業系統的桌面。&lt;/p&gt;
&lt;h3&gt;2. 進入Linux桌面環境 / Enter Linux desktop environment&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-hdT9zsp7CXw/YPwmxLiUqdI/AAAAAAAFA7c/GoMOv7EJeW4_INvevH_iaVargdtmhwuNwCLcBGAsYHQ/s1600/2021-0724-223738.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-hdT9zsp7CXw/YPwmxLiUqdI/AAAAAAAFA7c/GoMOv7EJeW4_INvevH_iaVargdtmhwuNwCLcBGAsYHQ/s450/2021-0724-223738.png&quot; title=&quot;2021-0724-223738.png&quot; alt=&quot;2021-0724-223738.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;要進入Linux桌面環境的話，一樣要進入Chrome作業系統的指令列介面crosh。讓我們按下「ctrl」、「alt」跟「t」按鍵開啓crosh。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-5fRBQirfgtM/YM4LEWjZmRI/AAAAAAAE_s0/uoSHpZFWvDcjtkwHYjmHHcWPjpA0ys3ZQCLcBGAsYHQ/s1600/Screenshot_2021-06-19_5.43.14_PM.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-5fRBQirfgtM/YM4LEWjZmRI/AAAAAAAE_s0/uoSHpZFWvDcjtkwHYjmHHcWPjpA0ys3ZQCLcBGAsYHQ/s450/Screenshot_2021-06-19_5.43.14_PM.png&quot; title=&quot;Screenshot_2021-06-19_5.43.14_PM.png&quot; alt=&quot;Screenshot_2021-06-19_5.43.14_PM.png&quot; width=&quot;450&quot; height=&quot;285&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;用滑鼠點一下畫面讓輸入游標聚焦在指令列介面上。然後輸入shell指令：&lt;/p&gt;
&lt;pre&gt;&lt;span class=&quot;bash&quot; undefined=&quot;&quot;&gt;shell&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-KGulI31n4sE/YM8BQtPDfVI/AAAAAAAE_vU/LsJa6-iG1UkoEuFqxBiGuwNBTwqlwSzswCLcBGAsYHQ/s1600/Screenshot_2021-06-20_4.40.21_PM.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-KGulI31n4sE/YM8BQtPDfVI/AAAAAAAE_vU/LsJa6-iG1UkoEuFqxBiGuwNBTwqlwSzswCLcBGAsYHQ/s450/Screenshot_2021-06-20_4.40.21_PM.png&quot; title=&quot;Screenshot_2021-06-20_4.40.21_PM.png&quot; alt=&quot;Screenshot_2021-06-20_4.40.21_PM.png&quot; width=&quot;450&quot; height=&quot;287.203&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;接著我們輸入crouton幫我們設定好的快捷指令，進入Linux桌面環境：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo&amp;nbsp;startgnome&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你可以注意到指令使用了「start&lt;b&gt;
    &lt;font color=&quot;#ff0000&quot;&gt;gnome&lt;/font&gt;
  &lt;/b&gt;」，這表示要啟用的是我們前面安裝的GNOME桌面環境。如你在使用crouton時選擇安裝了xfce或lxde其他桌面環境，這時候進入Linux桌面環境的指令就會有所不同。&lt;/p&gt;
&lt;h3&gt;3. 開始使用Linux桌面環境 / Setup Linux desktop environment&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-PlGFDuo9lCY/YM8BUPmyx6I/AAAAAAAE_vw/lc5ICxqZvRYFkFK0rzaCkpR7t0TMBhUbwCLcBGAsYHQ/s1600/Screenshot_from_2021-06-19_21-51-41.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-PlGFDuo9lCY/YM8BUPmyx6I/AAAAAAAE_vw/lc5ICxqZvRYFkFK0rzaCkpR7t0TMBhUbwCLcBGAsYHQ/s450/Screenshot_from_2021-06-19_21-51-41.png&quot; title=&quot;Screenshot_from_2021-06-19_21-51-41.png&quot; alt=&quot;Screenshot_from_2021-06-19_21-51-41.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;進入Linux桌面環境後，映入眼簾的就是Ubuntu的初始設定畫面。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Clr3BWS7mkk/YPwmw5VK3wI/AAAAAAAFA7Y/TKBn_zymVAEmDPL_6yAaoKVlF4awYQZmACLcBGAsYHQ/s1600/2021-0724-222246.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Clr3BWS7mkk/YPwmw5VK3wI/AAAAAAAFA7Y/TKBn_zymVAEmDPL_6yAaoKVlF4awYQZmACLcBGAsYHQ/s450/2021-0724-222246.png&quot; title=&quot;2021-0724-222246.png&quot; alt=&quot;2021-0724-222246.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我們可以按左上角的「Activities」開啟Activities Overview (運作視窗總覽)。畫面中間是已經開啟的視窗縮圖，左邊的面板是被設為最愛的應用程式，右邊則是虛擬桌面。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-uhle_rQfcB0/YPwmw0CSFtI/AAAAAAAFA7U/cwOzzA_eedo1-wceSsbs5Zxiv7804Gy8gCLcBGAsYHQ/s1600/2021-0724-222235.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-uhle_rQfcB0/YPwmw0CSFtI/AAAAAAAFA7U/cwOzzA_eedo1-wceSsbs5Zxiv7804Gy8gCLcBGAsYHQ/s450/2021-0724-222235.png&quot; title=&quot;2021-0724-222235.png&quot; alt=&quot;2021-0724-222235.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在左邊面板最下面可以看到九個小點的圖示。點下去後就會顯示已經安裝的應用程式。如果使用crouton安裝Linux桌面環境時，在選項(target, -t)使用了gnome-desktop的話，它會預先安裝許多常用的應用程式。這裡面包括了&lt;a href=&quot;https://zh-tw.libreoffice.org/&quot; target=&quot;_blank&quot;&gt;辦公室軟體LibreOffice&lt;/a&gt;、&lt;a href=&quot;https://chusiang.gitbooks.io/working-on-gnu-linux/content/21.remmina.html&quot; target=&quot;_blank&quot;&gt;遠端桌面管理工具Remmina&lt;/a&gt;、指令列介面Terminal。此外，由於我們也在選項中使用了chrome的關係，&lt;a href=&quot;https://www.google.com/intl/zh-TW/chrome/&quot; target=&quot;_blank&quot;&gt;Google Chrome瀏覽器&lt;/a&gt;也在一開始就裝好了。&lt;/p&gt;
&lt;h3&gt;4. Linux應用程式推薦 /&amp;nbsp;Linux application recommendation&lt;/h3&gt;
&lt;p&gt;多虧了ASUS Chromebook Flip CX5 (CX5500)內建了&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;256GB大容量的儲存空間&lt;/span&gt;，我們可以在Linux桌面環境中任意安裝自己想要的應用程式。以下我就來列舉幾個我常用的安裝途徑和應用程式吧。&lt;/p&gt;
&lt;h4&gt;apt-get安裝工具&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/--UzDPJISGGw/YM8BT72J1yI/AAAAAAAE_vo/yAhndeYVdFkQcVilYPtKEgxL5FqYdnqBACLcBGAsYHQ/s1600/Screenshot_from_2021-06-19_21-58-30.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/--UzDPJISGGw/YM8BT72J1yI/AAAAAAAE_vo/yAhndeYVdFkQcVilYPtKEgxL5FqYdnqBACLcBGAsYHQ/s450/Screenshot_from_2021-06-19_21-58-30.png&quot; title=&quot;Screenshot_from_2021-06-19_21-58-30.png&quot; alt=&quot;Screenshot_from_2021-06-19_21-58-30.png&quot; width=&quot;450&quot; height=&quot;306.938&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有了指令列介面後，我們就能夠使用apt-get指令安裝各種Linux應用程式。以下是我常用的幾個工具：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;輸入法RIME：&lt;a href=&quot;https://blog.sappy.tw/posts/%E9%9B%9C%E8%AB%87/chinese-input-install-on-ubuntu/&quot; target=&quot;_blank&quot;&gt;ubuntu 上的中文輸入法設定 Chinese Input Method Setup on Ubuntu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;整合開發環境Apache NetBeans：&lt;a href=&quot;https://computingforgeeks.com/install-netbeans-ide-on-debian-ubuntu-and-linux-mint/&quot; target=&quot;_blank&quot;&gt;How To Install NetBeans IDE 12 on Ubuntu, Debian, Linux Mint&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;截圖軟體Deepin Screenshot：&lt;a href=&quot;https://zoomadmin.com/HowToInstall/UbuntuPackage/deepin-screenshot&quot; target=&quot;_blank&quot;&gt;How To Install &quot;deepin-screenshot&quot; Package on Ubuntu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;繪圖軟體GIMP：&lt;a href=&quot;https://linuxhint.com/install-gimp-gnu-image-linux/&quot; target=&quot;_blank&quot;&gt;How to install GIMP 2.10 GNU Image Manipulation Program on Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書目管理工具Zotero：&lt;a href=&quot;https://www.ubuntubuzz.com/2018/06/complete-guide-to-install-zotero-on-ubuntu-1804.html&quot; target=&quot;_blank&quot;&gt;Complete Guide To Install Zotero On Ubuntu 18.04&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;選單管理工具alacarte (Main Menu)：&lt;a href=&quot;https://zoomadmin.com/HowToInstall/UbuntuPackage/alacarte&quot; target=&quot;_blank&quot;&gt;How To Install &quot;alacarte&quot; Package on Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;AppImage套裝工具&lt;/h4&gt;
&lt;p&gt;你也可以下載已經打包好的應用程式&lt;a href=&quot;https://appimage.org/&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;AppImage&lt;/a&gt;，直接在Linux桌面環境中執行。AppImage可以從下面兩個網站找到：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://apprepo.de/&quot; target=&quot;_blank&quot;&gt;Apprepo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://appimage.github.io/apps/&quot; target=&quot;_blank&quot;&gt;AppImageHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下推薦幾個好用的AppImage：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://apprepo.de/appimage/rstudio&quot; target=&quot;_blank&quot;&gt;統計軟體RStudio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://apprepo.de/appimage/wps-office&quot; target=&quot;_blank&quot;&gt;辦公室軟體WPS Office&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://apprepo.de/appimage/filezilla&quot; target=&quot;_blank&quot;&gt;檔案傳輸工具FileZilla&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://apprepo.de/appimage/stacer&quot; target=&quot;_blank&quot;&gt;作業系統資源管理Stacer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;GNOME桌面環境擴充功能&lt;/h4&gt;
&lt;p&gt;如果想要客製化GNOME桌面環境的話，我們也有很多擴充功能可供調整：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;GNOME Shell Extensions:&amp;nbsp;&lt;a href=&quot;https://extensions.gnome.org/&quot; target=&quot;_blank&quot;&gt;https://extensions.gnome.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中我推薦的擴充功能有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;選單資料夾管理：&lt;a href=&quot;https://extensions.gnome.org/extension/1217/appfolders-manager/&quot; target=&quot;_blank&quot;&gt;Appfolders management extension&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;固定面板：&lt;a href=&quot;https://extensions.gnome.org/extension/1160/dash-to-panel/&quot; target=&quot;_blank&quot;&gt;Dash to panel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;觸控板開關：&lt;a href=&quot;https://extensions.gnome.org/extension/131/touchpad-indicator/&quot; target=&quot;_blank&quot;&gt;Touchpad Indicator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;關閉螢幕鍵盤：&lt;a href=&quot;https://extensions.gnome.org/extension/1326/block-caribou/&quot; target=&quot;_blank&quot;&gt;Block caribou&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;為視窗總覽加上圖示：&lt;a href=&quot;https://extensions.gnome.org/extension/302/windowoverlay-icons/&quot; target=&quot;_blank&quot;&gt;Windowoverlay icons&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;加快alt+tab反應速度：&lt;a href=&quot;https://extensions.gnome.org/extension/2741/remove-alttab-delay-v2/&quot; target=&quot;_blank&quot;&gt;Remove Alt+Tab delay v2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;開發環境&lt;/h4&gt;
&lt;p&gt;對開發者來說，安裝必要的開發環境才能正常運作程式。底下是我會使用的幾種程式語言及其安裝方法：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;安裝新版的Node.js：&lt;a href=&quot;https://www.geeksforgeeks.org/installation-of-node-js-on-linux/&quot; target=&quot;_blank&quot;&gt;Installation of Node.js on Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;安裝統計程式語言R：&lt;a href=&quot;https://linuxize.com/post/how-to-install-r-on-ubuntu-20-04/&quot; target=&quot;_blank&quot;&gt;How to Install R on Ubuntu 20.04&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;安裝Java開發環境：&lt;a href=&quot;https://blog.gtwang.org/linux/how-to-install-java-with-apt-get-on-ubuntu-linux/&quot; target=&quot;_blank&quot;&gt;Ubuntu Linux 安裝 Oracle 或 OpenJDK 的 Java JRE 與 JDK 步驟教學&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Python已經內建囉，不需額外安裝&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由於現在這個Linux虛擬環境是chroot底下的隔離區，它並沒有獲得完整的Linux作業系統該有的權限，部分安裝可能會發生問題。如果你想知道上述工具的安裝細節，或是想使用其他工具的話，不妨在下方給我留個言，之後我再來介紹如何在Linux桌面環境安裝這些工具。&lt;/p&gt;
&lt;h3&gt;5. 在Linux桌面環境與Chrome作業系統之間切換 / Switch between Linux desktop environment and Chrome OS&lt;/h3&gt;
&lt;p&gt;使用crouton安裝Linux桌面環境的另一個好處，就是我們能夠使用快速鍵「ctrl + alt + shift + F1」跟「ctrl + alt + shift + F2」在Linux桌面環境和Chrome作業系統中間快速切換。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nohighlight&quot;&gt;切換到Chrome作業系統的快速鍵：ctrl&amp;nbsp;+&amp;nbsp;alt&amp;nbsp;+&amp;nbsp;shift&amp;nbsp;+&amp;nbsp;F1
切換到Linux桌面環境的快速鍵：ctrl + alt + shift + F2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;iframe frameborder=&quot;0&quot; src=&quot;//www.youtube.com/embed/g20doUsqhk0&quot; width=&quot;640&quot; height=&quot;360&quot; class=&quot;note-video-clip&quot;&gt;&lt;/iframe&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;請看上面的影片。紅色桌布的畫面是Linux桌面環境。按下快速鍵「ctrl + alt + shift + F1」之後，就能夠迅速切換回Chrome作業系統，此時畫面會有指令列介面crosh。在Chrome作業系統的時候，按下快速鍵「ctrl + alt + shift + F2」，我們就能回到有著紅色桌布的Linux桌面環境。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-PrntPhbQ84I/YP3P4EgC2UI/AAAAAAAFBAk/m2X3Vaz9JFg0svuWHjh7l_w8g2PSevJ_QCLcBGAsYHQ/s1600/2021-0726-045306.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-PrntPhbQ84I/YP3P4EgC2UI/AAAAAAAFBAk/m2X3Vaz9JFg0svuWHjh7l_w8g2PSevJ_QCLcBGAsYHQ/s450/2021-0726-045306.png&quot; title=&quot;2021-0726-045306.png&quot; alt=&quot;2021-0726-045306.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不過，如果要用這種方式切換Linux桌面環境與Chrome作業系統的話，我們不能直接在ASUS Chromebook Flip CX5 (CX5500)的鍵盤上操作，必須要外接鍵盤才能做到。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-0LqTwEZZy-U/YMyzasCeVaI/AAAAAAAE_m4/0aKzaSLzCm0zr-Q9q9xphwthPabzgykSwCLcBGAsYHQ/s1600/IMG_20210618_162943.jpg&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-0LqTwEZZy-U/YMyzasCeVaI/AAAAAAAE_m4/0aKzaSLzCm0zr-Q9q9xphwthPabzgykSwCLcBGAsYHQ/s450/IMG_20210618_162943.jpg&quot; title=&quot;IMG_20210618_162943.jpg&quot; alt=&quot;IMG_20210618_162943.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;這是因為ASUS Chromebook Flip CX5 (CX5500)的鍵盤配置跟其他Chromebook有點不同，導致crouton在Linux桌面環境的鍵盤對應失效。在Linux桌面環境中，我們沒辦法直接使用ASUS Chromebook Flip CX5 (CX5500)的內建鍵盤，搭配組合鍵來呼叫F1到F12按鍵。這部份的問題，未來可能可以透過crouton軟體配置來修正。如果你很想要在Linux桌面環境使用F1到F12按鍵，外接鍵盤可能還是最簡單的做法。&lt;/p&gt;
&lt;h3&gt;6. 離開Linux桌面環境 / Exit Linux desktop environment&lt;/h3&gt;
&lt;p&gt;使用crouton安裝的Linux桌面環境是一個chroot隔離區。看似可以使用完整的Linux功能，但部分細節操作仍跟完整的Linux有所不同。其中一個差異，就是離開Linux桌面環境的方法。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-l2cFyHrgLjY/YPwmw7sjqlI/AAAAAAAFA7Q/QvnbRbWKFZMRvxhaxg2b6V9lQ8uZEt3-QCLcBGAsYHQ/s1600/2021-0724-222330.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-l2cFyHrgLjY/YPwmw7sjqlI/AAAAAAAFA7Q/QvnbRbWKFZMRvxhaxg2b6V9lQ8uZEt3-QCLcBGAsYHQ/s450/2021-0724-222330.png&quot; title=&quot;2021-0724-222330.png&quot; alt=&quot;2021-0724-222330.png&quot; width=&quot;421&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;要離開Linux桌面環境，我們不是使用關機，而是要使用登出(Log Out)。做法是按右上角的向下箭頭，再點選你的帳號，從子選單中選擇「Log Out」登出。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Fa8Id8eQyhc/YM9Nl4KcNYI/AAAAAAAE_ws/zfEty1r-OPQG-jTvM-IpaPweHxhajjSLACLcBGAsYHQ/s1600/2021-0620-213137.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Fa8Id8eQyhc/YM9Nl4KcNYI/AAAAAAAE_ws/zfEty1r-OPQG-jTvM-IpaPweHxhajjSLACLcBGAsYHQ/s450/2021-0620-213137.png&quot; title=&quot;2021-0620-213137.png&quot; alt=&quot;2021-0620-213137.png&quot; width=&quot;450&quot; height=&quot;185&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著系統會確認你是否真的要登出。按下「Log Out」登出按鈕後，就會直接登出離開Linux桌面環境，回到Chrome作業系統中。&lt;/p&gt;
&lt;h3&gt;7. Linux桌面環境的管理 / Manage Linux desktop environment&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-g6KUfXTnHq0/YM8BT3-Ai5I/AAAAAAAE_vc/lLsoDNMnk_YuUiE3vB9fYy2mXqvjfAsbwCLcBGAsYHQ/s1600/Screenshot_2021-06-20_4.47.49_PM.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-g6KUfXTnHq0/YM8BT3-Ai5I/AAAAAAAE_vc/lLsoDNMnk_YuUiE3vB9fYy2mXqvjfAsbwCLcBGAsYHQ/s450/Screenshot_2021-06-20_4.47.49_PM.png&quot; title=&quot;Screenshot_2021-06-20_4.47.49_PM.png&quot; alt=&quot;Screenshot_2021-06-20_4.47.49_PM.png&quot; width=&quot;450&quot; height=&quot;285&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;當我們在Linux桌面環境中安裝了應用程式、調整了各種設定後，我們還能將Linux桌面環境進行備份。之前有提到crouton安裝桌面環境時可能會因爲Chrome作業系統的版本而遭遇意外的錯誤，但只要將備份的Linux桌面環境進行還原，就能略過安裝時可能遭遇的問題，直接恢復到你之前配置好的整個Linux桌面環境。&lt;/p&gt;
&lt;p&gt;備份Linux桌面環境的指令如下：&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo&amp;nbsp;edit-chroot&amp;nbsp;-f&amp;nbsp;~/Downloads/&amp;nbsp;-b&amp;nbsp;bionic&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;備份完成後，備份檔會放在「下載」資料夾中。在初始安裝後而且沒有安裝其他應用程式時，備份檔案大約是1.3GB：&lt;br&gt;&lt;/p&gt;
&lt;p&gt;而還原Linux桌面環境的指令如下，其中「bionic-YYYYMMDD-HHmm.tar.gz」請調整為備份檔案的檔案名稱：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo&amp;nbsp;crouton&amp;nbsp;-f&amp;nbsp;~/Downloads/bionic-&lt;span style=&quot;color: inherit;&quot;&gt;YYYYMMDD-HHmm&lt;/span&gt;.tar.gz&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你不想要現在的Linux桌面環境，想要整個重新安裝的話，移除Linux桌面環境的指令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo&amp;nbsp;delete-chroot&amp;nbsp;-y&amp;nbsp;bionic&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;當然，在Chromebook進行重置還原(Powerwash)的時候，也會一併移除Linux桌面環境。&lt;/p&gt;
&lt;p&gt;如果想要瞭解更多crouton的操作，可以參考&lt;a href=&quot;https://github.com/dnschneid/crouton#readme&quot; target=&quot;_blank&quot;&gt;crouton的說明&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;進階功能 / Advanced features&lt;/h2&gt;
&lt;p&gt;在看完ASUS Chromebook Flip CX5 (CX5500)的Chrome作業系統和Linux桌面環境的安裝後，接著我們來看看ASUS Chromebook Flip CX5 (CX5500)在多螢幕、觸控筆、記憶卡、效能評估和電力續航上的表現吧。&lt;/p&gt;
&lt;h3&gt;多螢幕的支援 /&amp;nbsp;Multiple monitors&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-47jFUMUTwCE/YP3HFzFJB-I/AAAAAAAFBAI/5sDAeVMiWt4MAEB9C4Pq5C7QAsCS38xmQCLcBGAsYHQ/s1600/20210726_040620_1.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-47jFUMUTwCE/YP3HFzFJB-I/AAAAAAAFBAI/5sDAeVMiWt4MAEB9C4Pq5C7QAsCS38xmQCLcBGAsYHQ/s450/20210726_040620_1.jpg&quot; title=&quot;20210726_040620.jpg&quot; alt=&quot;20210726_040620.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;說到開發者對於電腦硬體的需求，多螢幕的支援可說是基本且不可或缺的重要功能。ASUS Chromebook Flip CX5 (CX5500)提供的兩個USB Type-C與一個HDMI接孔，加上它自身的15.6吋螢幕，使得ASUS Chromebook Flip CX5 (CX5500)最高能夠支援4個螢幕同時使用。上圖是我同時使用4個螢幕顯示的樣子。&lt;/p&gt;
&lt;p&gt;Chrome作業系統對多螢幕的支援非常完整。我們不僅能調整各個螢幕的相對位置，針對高解析度的螢幕各別調整該螢幕的元件顯示，Chrome作業系統也會記住不同螢幕連接時當下的配置設定。簡單來說，就是你把Chromebook帶出門的時候，螢幕設定會是最適合你單獨使用Chromebook的狀態。而把Chromebook帶回家、接上其他螢幕時，Chromebook就會切換成多螢幕顯示囉。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-7-2oCAo5g_c/YMyzqnLRmoI/AAAAAAAE_os/xQWFvPx7hN0fYzOX7YQ5MA5ucTT7QXVbACLcBGAsYHQ/s1600/IMG_20210618_153546_1.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-7-2oCAo5g_c/YMyzqnLRmoI/AAAAAAAE_os/xQWFvPx7hN0fYzOX7YQ5MA5ucTT7QXVbACLcBGAsYHQ/s450/IMG_20210618_153546_1.jpg&quot; title=&quot;IMG_20210618_153546_1.jpg&quot; alt=&quot;IMG_20210618_153546_1.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果要用Chromebook外接螢幕的話，我特別推薦購買這種USB Type-C轉HDMI、VGA、USB Type-A標準接頭，而且還帶有USB Type-C供電孔的轉接線。如此一來，你的Chromebook不僅能夠支援早期的VGA視訊線，也能透過USB Type-C供電孔同時充電。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-HaxVWbIjHJw/YP3HFXHafmI/AAAAAAAFA_8/0v6Wecw1UMoyhOPsOnqwLEeq3CHAxIytwCLcBGAsYHQ/s1600/20210726_040929_1_.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-HaxVWbIjHJw/YP3HFXHafmI/AAAAAAAFA_8/0v6Wecw1UMoyhOPsOnqwLEeq3CHAxIytwCLcBGAsYHQ/s450/20210726_040929_1_.jpg&quot; title=&quot;20210726_040929_1_.jpg&quot; alt=&quot;20210726_040929_1_.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另一方面，Linux桌面環境也能夠支援多螢幕同時使用。爲了讓Linux桌面環境與Chrome作業系統之間流暢切換，我外接了USB的全尺寸鍵盤。這時候ASUS Chromebook Flip CX5 (CX5500)變形筆電的特性就派上用場了。我們可以用帳篷模式，將筆電反轉爲&lt;span style=&quot;white-space: pre-wrap; color: inherit;&quot;&gt;⋀&lt;/span&gt;字型，把筆電的鍵盤收納到螢幕後面。螢幕前面空出的空間，就能直接擺放外接鍵盤囉。&lt;/p&gt;
&lt;p&gt;不過可惜的是，我們安裝的Linux桌面環境Ubuntu 18.04版本較舊，在設定多螢幕或是連接高解析度的螢幕時，容易發生一些問題。這些問題可能會在較新的Ubuntu版本中獲得改善，期待之後的更新吧。&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;USI觸控筆 / USI stylus&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Y47M55JfnSs/YMyzmrDYAJI/AAAAAAAE_oM/fnytweohI48h8NU9qwwIFCDjebtKcC1lQCLcBGAsYHQ/s1600/IMG_20210617_231144.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-Y47M55JfnSs/YMyzmrDYAJI/AAAAAAAE_oM/fnytweohI48h8NU9qwwIFCDjebtKcC1lQCLcBGAsYHQ/s450/IMG_20210617_231144.jpg&quot; title=&quot;IMG_20210617_231144.jpg&quot; alt=&quot;IMG_20210617_231144.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;ASUS Chromebook CX5 (CX5500)內附了一支能夠吸附在筆電右側的USI觸控筆。將USI觸控筆觸碰螢幕後，Chromebook會顯示「觸控筆工具」的圖示，裡面有「截取部分畫面」、「截取整個畫面」、「雷射筆」與「放大鏡」的四種快捷功能可供使用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-D1VYuUwVyGQ/YMyzmlXo2aI/AAAAAAAE_oY/f06O8Q9qlgUVIboZDghUaHZr9SU96B7DwCLcBGAsYHQ/s1600/IMG_20210617_231216.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-D1VYuUwVyGQ/YMyzmlXo2aI/AAAAAAAE_oY/f06O8Q9qlgUVIboZDghUaHZr9SU96B7DwCLcBGAsYHQ/s450/IMG_20210617_231216.jpg&quot; title=&quot;IMG_20210617_231216.jpg&quot; alt=&quot;IMG_20210617_231216.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;放大鏡功能將觸控筆所指的位置放大顯示。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-xUbFe8RaZU8/YM9Nl6elk7I/AAAAAAAE_w4/1SVyBF-kaFQuCzipSdBnnYwky4whPwJLACLcBGAsYHQ/s1600/IMG_20210620_221235.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-xUbFe8RaZU8/YM9Nl6elk7I/AAAAAAAE_w4/1SVyBF-kaFQuCzipSdBnnYwky4whPwJLACLcBGAsYHQ/s450/IMG_20210620_221235.jpg&quot; title=&quot;IMG_20210620_221235.jpg&quot; alt=&quot;IMG_20210620_221235.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;雷射筆功能則是用紅色墨水來顯示觸控筆的軌跡。&lt;/p&gt;
&lt;p&gt;&lt;iframe frameborder=&quot;0&quot; src=&quot;//www.youtube.com/embed/CVjOa9QepTY&quot; width=&quot;640&quot; height=&quot;360&quot; class=&quot;note-video-clip&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;在Chrome作業系統中，觸控筆對應的預設筆記軟體是&lt;a href=&quot;https://keep.google.com/&quot; target=&quot;_blank&quot;&gt;Google Keep&lt;/a&gt;。我們可以在Google Keep的繪圖記事中，用觸控筆來畫圖。上面就是我用觸控筆在Google Keep畫一個笑臉的影片。從影片中可以看到觸控筆的反應速度良好。觸控筆快速移動的時候，筆畫也能緊緊跟著顯示。然而，Google Keep的繪圖記事並不支援觸控筆的壓力感應。筆畫的粗細是用觸控筆移動的速度來決定。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-mpFHRB8Wfr8/YM7kUxkxx0I/AAAAAAAE_uM/mGLuepY0z8k2MfUmZUFrLoNtTFCtU90wwCLcBGAsYHQ/s1600/Screenshot_2021-06-18_11.29.56_PM_1.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-mpFHRB8Wfr8/YM7kUxkxx0I/AAAAAAAE_uM/mGLuepY0z8k2MfUmZUFrLoNtTFCtU90wwCLcBGAsYHQ/s450/Screenshot_2021-06-18_11.29.56_PM_1.png&quot; title=&quot;Screenshot_2021-06-18_11.29.56_PM_1.png&quot; alt=&quot;Screenshot_2021-06-18_11.29.56_PM_1.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;爲了測試觸控筆的壓力感應功能，我在Google Play上安裝了&lt;a href=&quot;https://play.google.com/store/apps/details?id=jp.ne.ibis.ibispaintx.app&amp;amp;hl=zh_TW&amp;amp;gl=US&quot; target=&quot;_blank&quot;&gt;愛筆思画 X(ibis Paint X)&lt;/a&gt;。這個APP除了支援觸控筆的壓力感應之外，它也是比較完整的繪圖軟體。&lt;/p&gt;
&lt;p&gt;&lt;iframe frameborder=&quot;0&quot; src=&quot;//www.youtube.com/embed/P94iCa5fcxs&quot; width=&quot;640&quot; height=&quot;360&quot; class=&quot;note-video-clip&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;在上面這個影片中，用不同力度使用觸控筆，繪製的線條粗細也會有所不同。這就是愛筆思画 X支援觸控筆壓力感應的證據。&lt;/p&gt;
&lt;p&gt;&lt;iframe frameborder=&quot;0&quot; src=&quot;//www.youtube.com/embed/ByoZA8pZ0MI&quot; width=&quot;640&quot; height=&quot;360&quot; class=&quot;note-video-clip&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;接著我們一樣在愛筆思画 X中畫個笑臉看看。雖然觸控筆在愛筆思画 X能夠正常使用，但反應速度跟我們在Google Keep繪圖記事的操作相比，似乎有些不夠靈敏。這可能是因爲愛筆思画 X所在的Android作業系統，其實只是Chrome作業系統底下的虛擬機器。而虛擬機器的處理效能比不上原本的作業系統，觸控筆的反應速度才會比較慢。如果你想用Chromebook的觸控筆在Android APP畫圖的話，請務必考慮看看這個反應速度你是否能夠接受。&lt;/p&gt;
&lt;p&gt;除了Chrome作業系統和Android APP之外，我們也能在Linux桌面環境使用觸控筆。此時觸控筆的功能就跟滑鼠一樣，它也會將滑鼠的游標帶走。&lt;/p&gt;
&lt;p&gt;對我這種以程式開發為主，沒有繪圖需求的使用者來說，在ASUS Chromebook Flip CX5 (CX5500)的15.6吋觸控螢幕上直接用手指操作，可能會比使用觸控筆更簡單一些。&lt;/p&gt;
&lt;h3&gt;Micro SD記憶卡 / Micro SD card&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-lXcUxkXWpss/YP3HFqZp1LI/AAAAAAAFBAA/9ftQv__hNykN7JjeUSxHu1l-XHttf51CgCLcBGAsYHQ/s1600/20210726_001711.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-lXcUxkXWpss/YP3HFqZp1LI/AAAAAAAFBAA/9ftQv__hNykN7JjeUSxHu1l-XHttf51CgCLcBGAsYHQ/s450/20210726_001711.jpg&quot; title=&quot;20210726_001711.jpg&quot; alt=&quot;20210726_001711.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASUS Chromebook Flip CX5 (CX5500)具有Micro SD記憶卡的擴充槽。Chromebook的記憶卡插槽支援到&lt;a href=&quot;https://www.wikiwand.com/zh-tw/SDXC&quot; target=&quot;_blank&quot;&gt;SDXC標準&lt;/a&gt;，最高可支援到2TB的記憶卡。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-APnBhL2t20o/YPwm29dAhVI/AAAAAAAFA7o/G8WalbTbdG0UPQfqyt0haFg-7Yl5BsPkQCLcBGAsYHQ/s1600/2021-0724-222705.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-APnBhL2t20o/YPwm29dAhVI/AAAAAAAFA7o/G8WalbTbdG0UPQfqyt0haFg-7Yl5BsPkQCLcBGAsYHQ/s450/2021-0724-222705.png&quot; title=&quot;2021-0724-222705.png&quot; alt=&quot;2021-0724-222705.png&quot; width=&quot;280&quot; height=&quot;450&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我將512GB的記憶卡放入ASUS Chromebook Flip CX5 (CX5500)中，它確實能夠正常讀取。&lt;/p&gt;
&lt;p&gt;Micro SD記憶卡在Chromebook中的地位，就跟在Android作業系統裡面使用Micro SD記憶卡類似。記憶卡只能擺放系統核心之外的檔案，而作業系統會用到的大部分應用程式和設定，都還是只能存放在Chromebook內建的儲存空間中。儘管如此，存放在記憶卡的檔案並不會受到Chromebook執行還原重置(Powerwash)的影響，因此特別適合擺放備份檔案。&lt;/p&gt;
&lt;p&gt;以下是Chromebook裡面不能儲存到記憶卡的資料：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Android的應用程式&lt;/li&gt;
  &lt;li&gt;Chrome作業系統中內建的Linux的應用程式 (crostini)&lt;/li&gt;
  &lt;li&gt;crouton跟它安裝的Linux桌面環境：雖然也有&lt;a href=&quot;https://github.com/dnschneid/crouton/wiki/How-To-Install-To-External-Drive&quot; target=&quot;_blank&quot;&gt;把Linux桌面環境安裝到記憶卡上&lt;/a&gt;的做法，但Linux桌面環境會因爲Micro SD記憶卡的讀寫速度限制，以及Chrome作業系統會休眠時中斷Micro SD讀卡機的運作，導致安裝在Micro SD記憶卡的Linux桌面環境可能會遭遇更多意料之外的問題。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相對的，以下檔案相當適合存在Micro SD記憶卡中：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.guidingtech.com/45061/chromebook-downloads/&quot; target=&quot;_blank&quot;&gt;將Google Chrome下載資料夾改到Micro SD記憶卡&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;開發專案的程式碼或其他素材&lt;/li&gt;
  &lt;li&gt;
    &lt;font color=&quot;#ff0000&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;Linux桌面環境的備份&lt;/span&gt;&lt;/font&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中，保存Linux桌面環境的備份檔案可能是Micro SD記憶卡最有價值的用途。只要將備份存放在記憶卡中，即使Chromebook送修、被還原，我們都能使用記憶卡裡的備份，快速地恢復Linux桌面環境。&lt;/p&gt;
&lt;p&gt;除此之外，如果你是熟悉Linux的開發者，我也推薦將Micro SD記憶卡格式化爲Linux主流的&lt;a href=&quot;https://www.wikiwand.com/zh-tw/Ext4&quot; target=&quot;_blank&quot;&gt;ext4檔案格式&lt;/a&gt;。雖然&lt;a href=&quot;https://support.google.com/chromebook/answer/183093?hl=zh-Hant#zippy=%2C%E5%84%B2%E5%AD%98%E8%A3%9D%E7%BD%AE%2C%E6%AA%94%E6%A1%88%E7%B3%BB%E7%B5%B1&quot; target=&quot;_blank&quot;&gt;Chromebook支援的檔案系統&lt;/a&gt;並沒有列入ext4，但實際上Chromebook確實能夠讀寫ext4檔案格式。&lt;/p&gt;
&lt;p&gt;ext4檔案格式能夠讓我們使用Linux常用的&lt;a href=&quot;https://www.opencli.com/linux/ln-create-link-command&quot; target=&quot;_blank&quot;&gt;連結指令ln&lt;/a&gt;。在開發Node.js程式使用npm安裝套件時，部分套件會需要使用ln建立連結。但是ext4檔案格式也與Linux的權限緊密結合。這會讓記憶卡上的檔案操作必須調整權限才能正常執行。如果你只是一般使用者的話，建議還是使用記憶卡預設的&lt;a href=&quot;https://www.wikiwand.com/zh-tw/ExFAT&quot; target=&quot;_blank&quot;&gt;exFAT檔案格式&lt;/a&gt;即可。&lt;/p&gt;
&lt;h3&gt;效能評估 / Benchmark&lt;/h3&gt;
&lt;p&gt;在效能評估的工具上，我選用了支援Linux跟Android等多種不同平臺的&lt;a href=&quot;https://www.geekbench.com/&quot; target=&quot;_blank&quot;&gt;Geekbench 5&lt;/a&gt;。Chrome作業系統的瀏覽器雖然不能直接運作Geekbench 5，但我們已經安裝了Linux桌面環境，而Chrome作業系統也內建了Android作業系統，可以直接從Google Play裡下載&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.primatelabs.geekbench5&amp;amp;hl=zh_TW&amp;amp;gl=US&quot; target=&quot;_blank&quot;&gt;Geekbench 5應用程式&lt;/a&gt;。那我們就用這兩種作業系統，來看看Geekbench 5在ASUS Chromebook Flip CX5 (CX5500)上的分數表現吧。&lt;/p&gt;
&lt;h4&gt;Linux桌面環境的分數 /&amp;nbsp;Benchmark in Linux desktop environment&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-YKEGv1k38aY/YPwm24-6kGI/AAAAAAAFA7g/uCUoYqh4KboKLnxCB258kQoffSmRdwyUgCLcBGAsYHQ/s1600/2021-0724-222931.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-YKEGv1k38aY/YPwm24-6kGI/AAAAAAAFA7g/uCUoYqh4KboKLnxCB258kQoffSmRdwyUgCLcBGAsYHQ/s450/2021-0724-222931.png&quot; title=&quot;2021-0724-222931.png&quot; alt=&quot;2021-0724-222931.png&quot; width=&quot;450&quot; height=&quot;255.75&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.geekbench.com/download/linux/&quot; target=&quot;_blank&quot;&gt;下載Geekbench 5的Linux版本&lt;/a&gt;並解壓縮執行後，ASUS Chromebook Flip CX5 (CX5500)在Linux桌面環境的單核分數爲1484分，多核分數爲5426分。&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Android的分數&amp;nbsp;&lt;span style=&quot;color: inherit;&quot;&gt;/&amp;nbsp;Benchmark in Android&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-rYO7u2m-TIQ/YMyzjTF1CSI/AAAAAAAE_n8/wXoFR00nvKMyI4TClPRHdZwyHF6UoF-8gCLcBGAsYHQ/s1600/Screenshot_2021-06-18_5.07.33_PM.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-rYO7u2m-TIQ/YMyzjTF1CSI/AAAAAAAE_n8/wXoFR00nvKMyI4TClPRHdZwyHF6UoF-8gCLcBGAsYHQ/s450/Screenshot_2021-06-18_5.07.33_PM.png&quot; title=&quot;Screenshot_2021-06-18_5.07.33_PM.png&quot; alt=&quot;Screenshot_2021-06-18_5.07.33_PM.png&quot; width=&quot;450&quot; height=&quot;255.625&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;另一方面，ASUS Chromebook Flip CX5 (CX5500)在Android的單核分數是1183分、多核分數是4627分。這裡的分數比前面在Linux桌面環境的表現稍微低了一些，表示在Chromebook裡面運作Linux桌面環境的效率比Android虛擬機器還要好。&lt;/p&gt;
&lt;h4&gt;ASUS Chromebook Flip C213NA的分數 / Comparison with&amp;nbsp;ASUS Chromebook Flip C213NA&lt;/h4&gt;
&lt;p&gt;ASUS Chromebook Flip CX5 (CX5500)內建的第11代Intel i5的強大，只從一台Chromebook的分數上看不太出來。因此我同時也在教育用入門款的&lt;a href=&quot;/2019/02/chromebook-chromebook-review-after-1.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ASUS Chromebook Flip C213NA&lt;/a&gt;上用Geekbench 5評估效能看看，讓我們能夠比較高階Chromebook和入門款Chromebook之間的效能差異。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-FhsM1MAl36U/YM7kU1x2u8I/AAAAAAAE_uI/fqkcg19mfsUI9ABS5ybLeUXWdz5sOCQ8QCLcBGAsYHQ/s1600/Screenshot_2021-06-20_12.41.43_PM.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-FhsM1MAl36U/YM7kU1x2u8I/AAAAAAAE_uI/fqkcg19mfsUI9ABS5ybLeUXWdz5sOCQ8QCLcBGAsYHQ/s450/Screenshot_2021-06-20_12.41.43_PM.png&quot; title=&quot;Screenshot_2021-06-20_12.41.43_PM.png&quot; alt=&quot;Screenshot_2021-06-20_12.41.43_PM.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ASUS Chromebook Flip C213NA使用的是Intel Celeron雙核CPU。Geekbench 5跑分結果顯示，單核分數為267分，多核分數為506分。實際使用時，兩台Chromebook的流暢度也有明顯的不同。作為高階Chromebook的ASUS Chromebook Flip CX5 (CX5500)效能表現上有著明顯的優勢。&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;電力續航測試 / Battery test&lt;/h3&gt;
&lt;p&gt;最後我們來測試ASUS Chromebook Flip CX5 (CX5500)的續航表現。ASUS Chromebook Flip CX5 (CX5500)內建了3 芯鋰離子，&lt;a href=&quot;https://www.asus.com/tw/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-CX5-CX5500/&quot; target=&quot;_blank&quot;&gt;官方網站表示電力續航最高可達12小時&lt;/a&gt;。在這裡我以生活娛樂中常見的觀看線上串流影片的形式，來爲ASUS Chromebook Flip&amp;nbsp;CX5 (CX5500)進行電力續航測試。測試細節如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;先連接充電器，將電池充滿到100%。然後移除充電器，以電池供電。&lt;/li&gt;
  &lt;li&gt;播放YouTube線上串流影片：這裡我選擇使用的是無版權音樂&lt;a href=&quot;https://www.youtube.com/watch?v=CSSKNCYaQUA&quot; target=&quot;_blank&quot;&gt;Best Of No Copyright Sounds | NCS 1 Hour Gaming Mix&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;聲量與亮度開到上限100%。&lt;/li&gt;
  &lt;li&gt;連接USB滑鼠和耳機。&lt;/li&gt;
  &lt;li&gt;影片播放一小時。&lt;/li&gt;
  &lt;li&gt;一小時後再來看看剩餘電量，評估可能的電力續航時間。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-hEUlPiGO4uQ/YPwm20ouo_I/AAAAAAAFA7s/mekQO6cIgIoePI09WyWy3jOC-n63s6CjACLcBGAsYHQ/s1600/2021-0724-223451.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-hEUlPiGO4uQ/YPwm20ouo_I/AAAAAAAFA7s/mekQO6cIgIoePI09WyWy3jOC-n63s6CjACLcBGAsYHQ/s450/2021-0724-223451.png&quot; title=&quot;2021-0724-223451.png&quot; alt=&quot;2021-0724-223451.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;移除充電器之後，你可以注意到Chromebook的電力計算顯示是7:25後用盡。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-71ieENOicA8/YMyzjV_S4VI/AAAAAAAE_n0/uwRB0Wur0MEZlmIxeUw_3UvoLtBUD96CwCLcBGAsYHQ/s1600/IMG_20210618_171819.jpg&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-71ieENOicA8/YMyzjV_S4VI/AAAAAAAE_n0/uwRB0Wur0MEZlmIxeUw_3UvoLtBUD96CwCLcBGAsYHQ/s450/IMG_20210618_171819.jpg&quot; title=&quot;IMG_20210618_171819.jpg&quot; alt=&quot;IMG_20210618_171819.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;實際測試的狀況，就這樣放著聽音樂吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-axHzv7XsjXc/YMyzjmaHoeI/AAAAAAAE_n4/5moGnpPq0-0h3ItgNUb-zN9Ye8H2cH4egCLcBGAsYHQ/s1600/Screenshot_2021-06-18_6.13.06_PM.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-axHzv7XsjXc/YMyzjmaHoeI/AAAAAAAE_n4/5moGnpPq0-0h3ItgNUb-zN9Ye8H2cH4egCLcBGAsYHQ/s450/Screenshot_2021-06-18_6.13.06_PM.png&quot; title=&quot;Screenshot_2021-06-18_6.13.06_PM.png&quot; alt=&quot;Screenshot_2021-06-18_6.13.06_PM.png&quot; width=&quot;450&quot; height=&quot;255.625&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一個小時過去之後，電量從100%降低到91%，降低了9%。從電量消耗百分比來估計的話，大概會在11個小時後用盡電量。&lt;a href=&quot;https://www.asus.com/tw/Laptops/For-Home/Chromebook/ASUS-Chromebook-Flip-CX5-CX5500/&quot; target=&quot;_blank&quot;&gt;ASUS官方網站&lt;/a&gt;的電力續航是使用顯示器預設亮度跟播放本機影片的測試結果。相較之下，我的測試方式需要額外用到網路，而且螢幕亮度也較高，電力續航時間少於官方數據也是理所當然。由此可知，ASUS官方評估的12小時是合理的評估結果。&lt;/p&gt;
&lt;p&gt;有趣的是，Chromebook的剩餘時間估計在一個小時的使用後從7:25降低到6:17。一個小時的使用竟然耗掉了比估計還要多的電量？就我這幾年使用Chromebook的經驗來看，Chromebook的剩餘電腦可用時間僅供參考。因爲大部分Chromebook續航都能超過10小時，正常使用一整天也不需要插電。我只有在外接USB Type-C的螢幕和幫手機充電的時候有把Chromebook用到電量耗盡，不然真的不太容易遇到Chromebook沒電的情況。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;將開發人員模式關閉，還原爲原始狀態 / Disable Developer mode and reset&lt;/h2&gt;
&lt;p&gt;如果你的ASUS Chromebook Flip CX5 (CX5500)要送修了，你又不想讓官方發現你開啓了開發人員模式，那以下操作可以讓你把開發人員模式關閉，並將整台Chromebook還原到原始狀態。&lt;/p&gt;
&lt;h3&gt;1. 關機 / Shutdown&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-JviO24mrZRA/YPwm2-UJTEI/AAAAAAAFA7k/FxF-VdmQvh4V19eW2b8WeSThbig3fEB3QCLcBGAsYHQ/s1600/2021-0724-223939.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-JviO24mrZRA/YPwm2-UJTEI/AAAAAAAFA7k/FxF-VdmQvh4V19eW2b8WeSThbig3fEB3QCLcBGAsYHQ/s446/2021-0724-223939.png&quot; title=&quot;2021-0724-223939.png&quot; alt=&quot;2021-0724-223939.png&quot; width=&quot;294&quot; height=&quot;446.781&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第一步是將Chromebook關機。你可以按Chromebook右下角的時鐘開啓選單，然後按電源圖示，關閉Chromebook。&lt;/p&gt;
&lt;h3&gt;2.&amp;nbsp;開機並選擇「返回安全模式」 / Start up and return to secure mode&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-i8i0jurCg1E/YP3sakbzBWI/AAAAAAAFBA0/1Wr6ifoGnioLT_E8XTyXDMojuGx1aBO7QCLcBGAsYHQ/s1600/20210726_061041.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-i8i0jurCg1E/YP3sakbzBWI/AAAAAAAFBA0/1Wr6ifoGnioLT_E8XTyXDMojuGx1aBO7QCLcBGAsYHQ/s450/20210726_061041.jpg&quot; title=&quot;20210726_061041.jpg&quot; alt=&quot;20210726_061041.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再次將Chromebook開機後，如果你已經啓用了開發人員模式，你會看到「目前處於開發人員模式」的畫面。這時我們用鍵盤的方向鍵往上移動選項到「返回安全模式」，按下ENTER鍵進入下一步。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-dotvsrSAfn8/YP3sataDb_I/AAAAAAAFBAw/XjrlRtPAddwwD_UCldKkjAXs6Y8imlZuACLcBGAsYHQ/s1600/20210726_061049.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-dotvsrSAfn8/YP3sataDb_I/AAAAAAAFBAw/XjrlRtPAddwwD_UCldKkjAXs6Y8imlZuACLcBGAsYHQ/s450/20210726_061049.jpg&quot; title=&quot;20210726_061049.jpg&quot; alt=&quot;20210726_061049.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著會看到「確認返回安全模式」的確認畫面。關閉開發人員模式、返回安全模式會將整台Chromebook復原到原始狀態。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-5DGN-naujNc/YP3t2HyXfUI/AAAAAAAFBC4/2ln3XdXmoIEFBY3NRX_H9-CnV1dbrkeHgCLcBGAsYHQ/s1600/20210726_061116_1_.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-5DGN-naujNc/YP3t2HyXfUI/AAAAAAAFBC4/2ln3XdXmoIEFBY3NRX_H9-CnV1dbrkeHgCLcBGAsYHQ/s450/20210726_061116_1_.jpg&quot; title=&quot;20210726_061116_1_.jpg&quot; alt=&quot;20210726_061116_1_.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;還原過程很快。完成後，系統會重新啓動。&lt;/p&gt;
&lt;p&gt;值得注意的是，這個原始狀態並不是指Chrome作業系統的版本還原到一開始購買時的版本，而是在維持目前的Chrome作業系統版本下，移除登入資訊與Chromebook內的檔案。&lt;/p&gt;
&lt;p&gt;此外，復原到原始狀態的過程並不會影響到儲存在Micro SD記憶卡的檔案。因此建議大家將下載資料夾和Linux桌面環境備份都放到Micro SD記憶卡，這樣就算整個Chromebook還原也不用怕。&lt;/p&gt;
&lt;h3&gt;3. 完成還原原廠狀態 / Complete reset&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-A8RWkbJ1W_Y/YP3sfkRDvRI/AAAAAAAFBBQ/AC6GSWAXR7QnnRJSnAJg1L_l3MjAX5V6QCLcBGAsYHQ/s1600/20210726_053307.jpg&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-A8RWkbJ1W_Y/YP3sfkRDvRI/AAAAAAAFBBQ/AC6GSWAXR7QnnRJSnAJg1L_l3MjAX5V6QCLcBGAsYHQ/s450/20210726_053307.jpg&quot; title=&quot;20210726_053307.jpg&quot; alt=&quot;20210726_053307.jpg&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;稍待片刻，等復原程序跑完後，Chromebook就會恢復到原始狀態，顯示「歡迎使用Chromebook」的畫面。接下來你就可以正常登入、設定同步等操作了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結論 / Conclusion&lt;/h2&gt;
&lt;p&gt;ASUS Chromebook Flip CX5 (CX5500)無疑是爲Chromebook的高階機型立下了另一個里程碑，讓使用者在教育市場使用的入門款Chromebook之外有了更多的選擇。特別是對於軟體工程師和居家辦公的工作者來說，ASUS Chromebook Flip CX5 (CX5500)內建的第11代Intel i5、16G的記憶體和256GB的高速儲存空間更能滿足我們的需求。除此之外，ASUS Chromebook Flip CX5還有搭載第11代Intel Core i7、儲存空間512GB的更高階機種可供選擇，期待未來也能在臺灣市場看到。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Chromebook除了本身既有的Chrome作業系統之外，我在本篇也介紹了使用crouton安裝的Linux桌面環境，對熟悉Linux的使用者來說更是如虎添翼。如此一來，既能使用原本Chrome作業系統內建的高速瀏覽器、又能使用Android作業系統從Google Play安裝應用程式，還能在Linux桌面環境設定屬於開發者的自由天地。Chromebook真是十分萬能呢。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-6aBp6W56I7Y/YNAwf8tvWCI/AAAAAAAE_yE/lY7j5i5mZ28KtVJpuXKCibwDjeETPnxbQCLcBGAsYHQ/s1600/Screenshot_2021-06-21_10-31-24.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-6aBp6W56I7Y/YNAwf8tvWCI/AAAAAAAE_yE/lY7j5i5mZ28KtVJpuXKCibwDjeETPnxbQCLcBGAsYHQ/s450/Screenshot_2021-06-21_10-31-24.png&quot; title=&quot;Screenshot_2021-06-21_10-31-24.png&quot; alt=&quot;Screenshot_2021-06-21_10-31-24.png&quot; width=&quot;450&quot; height=&quot;302&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最後給大家看看我在另外一台Chromebook上設定的Linux桌面環境，目前我也是在這個Linux桌面環境撰寫blog和整理圖片。GNOME 3桌面環境的啓動器真是越用越順手，而且未來更好用的&lt;a href=&quot;https://www.youtube.com/watch?v=vK-SwsWnEmo&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;GNOME 40&lt;/a&gt;已經蓄勢待發，真是令人期待呢！&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;如何購買ASUS Chromebook Flip CX5 (CX5500) / Where to buy&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-MeI4IF_eul8/YNDlDnOu86I/AAAAAAAE_yo/zG_qdPCR390n3U3TUBKz3aqE2tVjCdNIwCLcBGAsYHQ/s1600/2021-0622-030636.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-MeI4IF_eul8/YNDlDnOu86I/AAAAAAAE_yo/zG_qdPCR390n3U3TUBKz3aqE2tVjCdNIwCLcBGAsYHQ/s450/2021-0622-030636.png&quot; title=&quot;2021-0622-030636.png&quot; alt=&quot;2021-0622-030636.png&quot; width=&quot;450&quot; height=&quot;347.391&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://store.asus.com/tw/&quot; target=&quot;_blank&quot;&gt;ASUS store 台灣&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;看完了這篇ASUS Chromebook Flip CX5 (CX5500)的介紹後，如果你感到興趣的話，可以從ASUS官方的線上購物網站購買ASUS Chromebook Flip CX5 (CX5500)。目前建議售價是26880，還有贈送象徵信仰的ROG印花口罩。購買連結如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://store.asus.com/tw/item/202105DM250000002/D5803&quot; target=&quot;_blank&quot;&gt;Chromebook Flip CX5 (CX5500) CX5500FEA 商用筆電&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://store.asus.com/tw/item/202105DM250000002&quot; target=&quot;_blank&quot;&gt;https://store.asus.com/tw/item/202105DM250000002&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-cK5Q25AJn7s/YP5nXXzOYwI/AAAAAAAFBDI/IIIvzucAxYI1JLbeH2ODFqZLHHUQ8vMXgCLcBGAsYHQ/s1600/2021-0726-154006.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-cK5Q25AJn7s/YP5nXXzOYwI/AAAAAAAFBDI/IIIvzucAxYI1JLbeH2ODFqZLHHUQ8vMXgCLcBGAsYHQ/s450/2021-0726-154006.png&quot; title=&quot;2021-0726-154006.png&quot; alt=&quot;2021-0726-154006.png&quot; width=&quot;450&quot; height=&quot;347&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;那麼這次在Chromebook配置Linux桌面環境的介紹就寫到這裡了。既然你都讀到了最後，表示你可能對Chromebook開始有些興趣了。在此我想問個問題，Chromebook的那些特色，能夠吸引了你的注意呢？&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;A. 我就是需要超級快的Chrome瀏覽器&lt;/b&gt;：Chrome作業系統以Chrome瀏覽器爲主的簡潔和快速正是能夠滿足我樸實無華的需求。&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;B. 整合良好的Android應用程式&lt;/b&gt;：在Chromebook上安裝的Android APP可以跟普通視窗一樣放大、縮小和移動。搭配ASUS Chromebook Flip CX5 (CX5500)的高效能，同時開啓多個Android APP也是輕鬆寫意。&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;C. Linux桌面環境爲開發者拓展全新世界&lt;/b&gt;：Linux作業系統已經是開發者的主要趨勢，高度的自由帶給開發者無限的可能性！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在&lt;a href=&quot;#comment-editor&quot;&gt;下面的留言處&lt;/a&gt;跟大家分享你的想法。你的意見都是我繼續分享的動力喔！&lt;br&gt;&lt;/p&gt;
&lt;p&gt;如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚，或是將這篇分享到Facebook等社群媒體吧！想在社群媒體追蹤我的話，歡迎到我的Facebook粉絲專頁「&lt;a href=&quot;https://www.facebook.com/pulipuli.blogspot&quot; target=&quot;FB&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;」按個讚喔！不知道這篇文章有沒有讓你吃到些有用的東西呢？我是布丁，期待下次見！&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/3662613635777743948/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2021/08/chromebooklinuxasus-chromebook-flip-cx5.html#comment-form' title='2 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3662613635777743948'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3662613635777743948'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2021/08/chromebooklinuxasus-chromebook-flip-cx5.html' title='在Chromebook配置適合開發者的Linux桌面環境吧！ASUS Chromebook Flip CX5華麗上陣 / Installing a Linux Desktop Environment on ASUS Chromebook Flip CX5'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//lh3.googleusercontent.com/-d5Ig95VNC7Y/YP5n08BLwjI/AAAAAAAFBDU/sxfOkHhWTWIjZViMw5j0JT1IhlCFttMWQCLcBGAsYHQ/s72-c/image-template-20210726-1542.png" height="72" width="72"/><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-3708892814560435563</id><published>2021-06-27T22:27:00.009+08:00</published><updated>2021-06-27T22:39:33.835+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Programming/JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="Service/GitHub"/><category scheme="http://www.blogger.com/atom/ns#" term="Work"/><category scheme="http://www.blogger.com/atom/ns#" term="Work/Widget"/><title type='text'>幫操作畫面加個邊框吧！響應式加框網頁工具 / Add a frame on screenshot: Responsive Frame Mockup</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-xIiZsIxd6tU/YNiKozZXRXI/AAAAAAAE_-k/EDRWLuYpBKUB_pAzh3YTVzTnRmSAHYGVwCLcBGAsYHQ/s1600/31-PAW_Frame_Mockup_Add_browser_phone.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-xIiZsIxd6tU/YNiKozZXRXI/AAAAAAAE_-k/EDRWLuYpBKUB_pAzh3YTVzTnRmSAHYGVwCLcBGAsYHQ/s1600/31-PAW_Frame_Mockup_Add_browser_phone.png&quot; title=&quot;31-PAW_Frame_Mockup_Add_browser_phone.png&quot; alt=&quot;31-PAW_Frame_Mockup_Add_browser_phone.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;呀呵，大家最近在吃什麼呢？這裡是寫論文也要加個框的布丁。&lt;/p&gt;
&lt;p&gt;作為軟體開發者，用螢幕截圖的操作畫面來說明軟體功能，是一件相當常見的工作。如果要讓讀者知道你的操作畫面是在什麼裝置上運作的話，為操作畫面加個對應裝置的邊框，絕對可以幫你的文件大大加分。&lt;/p&gt;
&lt;p&gt;為了幫博士論文中的系統操作畫面加上瀏覽器的邊框，我開發了&lt;a href=&quot;https://pulipulichen.github.io/PWA-Frame-Mockup/&quot; target=&quot;_blank&quot;&gt;Responsive Frame Mockup網頁工具&lt;/a&gt;。它可以為任意尺寸和比例的圖片，加上瀏覽器、智慧型手機、以及平板的框架。以下就讓我們來認識&lt;a href=&quot;https://pulipulichen.github.io/PWA-Frame-Mockup/&quot; target=&quot;_blank&quot;&gt;Responsive Frame Mockup&lt;/a&gt;這個好用的網頁工具吧！&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;沒工商版面：準好拔延長線 Elevon / Power extension cord: Elevon&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-3RjugH31kz8/YNhGtMfDzbI/AAAAAAAE_7A/Fowa5RiHWfMiHPuwfJVQv7Y5eweJ0fjfACLcBGAsYHQ/s1600/content_6927f94f-76c4-468e-b79e-2d90a0f5c044_1.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-3RjugH31kz8/YNhGtMfDzbI/AAAAAAAE_7A/Fowa5RiHWfMiHPuwfJVQv7Y5eweJ0fjfACLcBGAsYHQ/s450/content_6927f94f-76c4-468e-b79e-2d90a0f5c044_1.jpg&quot; title=&quot;content_6927f94f-76c4-468e-b79e-2d90a0f5c044.jpg&quot; alt=&quot;content_6927f94f-76c4-468e-b79e-2d90a0f5c044.jpg&quot; width=&quot;450&quot; height=&quot;374&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.elevon.store/collections/a&quot; target=&quot;_blank&quot;&gt;Elevon&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;在開始今天的主題之前，立刻就來段沒工商版面啦。&lt;/p&gt;
&lt;p&gt;電源延長線是現代人居家必備的用具之一，不過你有想過，&lt;span style=&quot;color: red; font-weight: bold; text-decoration-line: underline;&quot;&gt;好的電源延長線可以提高你的生活效率嗎？&lt;/span&gt;為了節能減碳，我們常常會在要用電器時才把它插上插頭，不用時就收下來。但當我們要收拾電器時，總是得要騰出雙手，一手穩住電源延長線，一手握住插頭拔出，非常不方便。如果你常常在這種生活瑣碎事物上浪費了時間，那你一定要來試試&lt;span style=&quot;color: red; font-weight: bold; text-decoration-line: underline;&quot;&gt;準好拔延長線Elevon&lt;/span&gt;。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;有了&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;準好拔延長線Elevon&lt;/span&gt;之後，你只要用一隻手就能插拔電源！準好拔延長線的&lt;u&gt;旋轉開關專利設計&lt;/u&gt;，讓你轉動角度就能固定插頭，也能轉動後鬆脫拔出。轉動開關同時也是通電與斷電開關。電器不使用時，轉一下就能順手節能。它背後設計了&lt;u&gt;強力磁鐵&lt;/u&gt;、&lt;u&gt;止滑矽膠&lt;/u&gt;、&lt;u&gt;雙向掛鉤孔&lt;/u&gt;，讓準好拔延長線能夠輕易固定在各種場所。我把準好拔延長線固定在冰箱旁邊，使用任何廚房電器都能一手拔插。真是方便到容易讓人忘記它的存在呢！&lt;/p&gt;
&lt;p&gt;綜上所述，&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;準好拔延長線Elevon&lt;/span&gt;讓我喜愛的三大特色如下：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;旋轉開關專利設計，一隻手就能插拔電源插頭。只轉到OFF也能節能省電。&lt;/li&gt;
  &lt;li&gt;多種延長線固定設計，吸在鐵櫃、掛在架子上，怎樣都好擺。&lt;/li&gt;
  &lt;li&gt;支持臺灣在地&lt;a href=&quot;https://www.elevon.store/pages/about-us&quot; target=&quot;_blank&quot;&gt;「Elevon準好拔」團隊&lt;/a&gt;，用心設計讓我們的生活更加美好。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;準好拔延長線Elevon&lt;/span&gt;的相關資訊如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Elevon準好拔延長線網站：&lt;a href=&quot;https://www.elevon.store/&quot; target=&quot;_blank&quot;&gt;https://www.elevon.store/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;商品購買網頁：&lt;a href=&quot;https://www.elevon.store/collections/all&quot; target=&quot;_blank&quot;&gt;https://www.elevon.store/collections/all&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;網路上已經有很多&lt;a href=&quot;https://www.youtube.com/watch?v=ls0kep7xlo4&quot; target=&quot;_blank&quot;&gt;準好拔延長線Elevon的開箱和使用影片&lt;/a&gt;。儘管它部分設計不夠萬用這點為人詬病，但它一手插拔的旋轉開關設計，的確是目前市面上無可取代的特色。好的，讓我們結束沒工商版面，回到今天要講的主題吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;為什麼我們要為操作畫面加上邊框？ / Why should we add frame to screenshots?&lt;/h2&gt;
&lt;p&gt;操作畫面加邊框有什麼特別的？我常常使用操作畫面跟文字來說明軟體操作。在撰寫說明的時候，我發現如果為操作畫面的圖片加上邊框，可以帶來兩個好處：避免混淆，以及賦予情境的意義。以下我們用兩個例子，來看看為什麼加框這件事情很重要。&lt;/p&gt;
&lt;h3&gt;避免混淆 /&amp;nbsp;Avoid confusion&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-KlJlxU5Oxu4/YNhGsz6YJ4I/AAAAAAAE_60/ZxcdOKKTIgYlH2RnYkQuo15fuzBP1E_vACLcBGAsYHQ/s1600/2020-11-28_231909.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-KlJlxU5Oxu4/YNhGsz6YJ4I/AAAAAAAE_60/ZxcdOKKTIgYlH2RnYkQuo15fuzBP1E_vACLcBGAsYHQ/s450/2020-11-28_231909.png&quot; title=&quot;2020-11-28_231909.png&quot; alt=&quot;2020-11-28_231909.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這張圖是我在論文中用來說明系統的原始操作畫面。單看圖片的話，似乎不覺得哪裡奇怪。但是一旦擺到文件裡面，你就會發現奇怪的現象：&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-wpyYJLQnnCQ/YNhGtPRSeCI/AAAAAAAE_68/ooBLDOCpJq8gEFg2yxDgE3i4hKssxsMXACLcBGAsYHQ/s1600/2021-0627-161511.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-wpyYJLQnnCQ/YNhGtPRSeCI/AAAAAAAE_68/ooBLDOCpJq8gEFg2yxDgE3i4hKssxsMXACLcBGAsYHQ/s450/2021-0627-161511.png&quot; title=&quot;2021-0627-161511.png&quot; alt=&quot;2021-0627-161511.png&quot; width=&quot;419&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上圖是在文件中插入操作畫面的樣子。操作畫面含有大量文字，而且背景跟文件一樣都是白色，因此乍看之下很容易把操作畫面跟文件內文混在一起，造成閱讀上的困難。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;現在看我Blog的讀者可能沒有這個感覺。這是因為我預先為文章中的圖片加上了陰影邊框的樣式，所以每張圖都自動帶有陰影，能夠跟其他文字有所區隔。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-yZKgmNn6f5U/YNhGs-IX-MI/AAAAAAAE_64/HQKIHUmyogoY_HbxXvNcoLENO4Qf17vGACLcBGAsYHQ/s1600/2021-06-27_161548.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-yZKgmNn6f5U/YNhGs-IX-MI/AAAAAAAE_64/HQKIHUmyogoY_HbxXvNcoLENO4Qf17vGACLcBGAsYHQ/s450/2021-06-27_161548.png&quot; title=&quot;2021-06-27_161548.png&quot; alt=&quot;2021-06-27_161548.png&quot; width=&quot;419&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有些人可能會想，這種小事，我也可以在文件裡面手動幫操作畫面加個簡單的邊框，這問題不就解決了嗎？上圖就是為原始操作畫面加上黑框後的樣子。這樣想並沒有錯，不過既然要加框，那我們可以為操作畫面的邊框賦予更多的意義。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-TWQsqAWRna8/YNhGs1yqCMI/AAAAAAAE_6w/62ckKSMaJlwqFF0VpPyQF-V0MX1NzR1AwCLcBGAsYHQ/s1600/2021-0627-162539.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-TWQsqAWRna8/YNhGs1yqCMI/AAAAAAAE_6w/62ckKSMaJlwqFF0VpPyQF-V0MX1NzR1AwCLcBGAsYHQ/s450/2021-0627-162539.png&quot; title=&quot;2021-0627-162539.png&quot; alt=&quot;2021-0627-162539.png&quot; width=&quot;419&quot; height=&quot;449.562&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上圖是我用響應式加框網頁工具Responsive Frame Mockup加上瀏覽器邊框的效果。圖片跟內文的區隔，是不是更加一目了然了呢？&lt;/p&gt;
&lt;h3&gt;賦予情境的意義 / Show the context of screenshots&lt;/h3&gt;
&lt;p&gt;在&lt;a href=&quot;https://www.worldcat.org/title/zi-xun-jia-gou-xue-wang-zhan-ying-yong/oclc/856710151&amp;amp;referer=brief_results&quot; target=&quot;_blank&quot;&gt;資訊架構學&amp;nbsp;網站應用&lt;/a&gt;一書中，作者強調導覽系統是為了避免使用者在網站中迷路的重要設計。因為很多實體世界裡可以用來幫助使用者瞭解所在位置的情境線索，在虛擬的網站站中並不存在。這個道理對文件裡的操作畫面同樣適用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-OY7tmRKwxDo/YNhGs9AvupI/AAAAAAAE_6s/N2yM_31INc0D7tAwbZ4RH1hogI4Xs1ZeACLcBGAsYHQ/s1600/image_53_.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-OY7tmRKwxDo/YNhGs9AvupI/AAAAAAAE_6s/N2yM_31INc0D7tAwbZ4RH1hogI4Xs1ZeACLcBGAsYHQ/s450/image_53_.png&quot; title=&quot;image_53_.png&quot; alt=&quot;image_53_.png&quot; width=&quot;450&quot; height=&quot;323&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;/2018/05/html5appappapp-hybird-app-framework-for.html&quot; target=&quot;_blank&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;上面這張操作畫面，是我提出的&lt;a href=&quot;/2018/05/html5appappapp-hybird-app-framework-for.html&quot; target=&quot;_blank&quot;&gt;跨平臺混合應用程式框架&lt;/a&gt;中的一張截圖。如果沒有額外的說明、只看圖片的話，你覺得這張操作畫面是在桌面電腦上操作？還是在平板上操作呢？&lt;br&gt;&lt;/p&gt;
&lt;p&gt;對UX不熟的工程師多會認為用於電腦和用於平板並沒有什麼差別，反正就是將手指的觸摸對應到滑鼠點擊就可以了。但實際上滑鼠操作跟手指觸控的邏輯有不小的差異，其實不太適合混為一談。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;話說回來，熟悉APP開發的人應該發現到了，觀察操作畫面中的各個元件設計方式，我們可以知道上圖是為了平板環境開發的操作畫面。不過如果你對我有些認識的話，就會知道其實那個操作畫面是利用&lt;a href=&quot;https://onsen.io/&quot; target=&quot;_blank&quot;&gt;Onsen UI&lt;/a&gt;在網頁上構成的Hyper APP，而且實際上是在桌面電腦上運作。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;如果你只是直接截圖，甚至把瀏覽器的框也一起擷取，那讀者絕對會搞不懂這到底是桌面電腦上運作的網頁、還是要在平板上運作的應用程式。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-u45jh-2PPQ0/YNhGweuN6LI/AAAAAAAE_7g/9mbW2_Fca_c2OiQrf0sJlMc_Q-gTLF1rwCLcBGAsYHQ/s1600/tablet-portrait-0627-1622.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-u45jh-2PPQ0/YNhGweuN6LI/AAAAAAAE_7g/9mbW2_Fca_c2OiQrf0sJlMc_Q-gTLF1rwCLcBGAsYHQ/s450/tablet-portrait-0627-1622.png&quot; title=&quot;tablet-portrait-0627-1622.png&quot; alt=&quot;tablet-portrait-0627-1622.png&quot; width=&quot;450&quot; height=&quot;359.234&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;為了避免節外生枝，最好的方法，還是在操作畫面旁邊加入一個平板的框，讓它看起來就像是在平板上操作的樣子。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;現有的加框服務 / Frame mockup services&lt;/h2&gt;
&lt;p&gt;網路上其實也有其他的加框功能網站。以下我就來跟大家分享我用過的&lt;a href=&quot;https://mockuphone.com/&quot; target=&quot;_blank&quot;&gt;MockuPhone&lt;/a&gt;、&lt;a href=&quot;https://smartmockups.com/&quot; target=&quot;_blank&quot;&gt;SMARTMOCKUPS&lt;/a&gt;跟&lt;a href=&quot;https://browserframe.com/&quot; target=&quot;_blank&quot;&gt;BrowserFrame&lt;/a&gt;，以及它們各自的限制吧。&lt;/p&gt;
&lt;h3&gt;MockuPhone&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-R8SaSH3EqfU/YNhGwWcciyI/AAAAAAAE_7U/2uONSYvwcYsor9KDzhJTFAlY7M1BrrDVgCLcBGAsYHQ/s1600/2021-06-27_172030.png&quot; style=&quot;font-weight: bold; color: rgb(35, 82, 124); outline: 0px;&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-R8SaSH3EqfU/YNhGwWcciyI/AAAAAAAE_7U/2uONSYvwcYsor9KDzhJTFAlY7M1BrrDVgCLcBGAsYHQ/s450/2021-06-27_172030.png&quot; title=&quot;2021-06-27_172030.png&quot; alt=&quot;2021-06-27_172030.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://mockuphone.com/device/googlepixelquiteblack&quot; target=&quot;_blank&quot;&gt;MockuPhone&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;MockuPhone：&lt;a href=&quot;https://mockuphone.com/&quot; target=&quot;_blank&quot;&gt;https://mockuphone.com/&lt;/a&gt;&amp;nbsp;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MockuPhone (Mockup + Phone)是我早期使用的圖片加框服務。之前好一陣都在開發行動裝置的應用程式，例如&lt;a href=&quot;/2017/10/voc4fun-voc4fun-mobile-app-for.html&quot; target=&quot;_blank&quot;&gt;全民樂單字Vock4Fun：單字學習行動應用程式&lt;/a&gt;。那時候我就在應用程式的操作圖片上，加上了手機外框。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-ZHu8Xbtwovw/YNhGwhQ-WQI/AAAAAAAE_7c/hzWDhyPl_ms-f8ENuIFh_1PmD3A4u0GVwCLcBGAsYHQ/s1600/Screenshot_20190110-150716_pixel_quite_black_portrait.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-ZHu8Xbtwovw/YNhGwhQ-WQI/AAAAAAAE_7c/hzWDhyPl_ms-f8ENuIFh_1PmD3A4u0GVwCLcBGAsYHQ/s450/Screenshot_20190110-150716_pixel_quite_black_portrait.png&quot; title=&quot;Screenshot_20190110-150716_pixel_quite_black_portrait.png&quot; alt=&quot;Screenshot_20190110-150716_pixel_quite_black_portrait.png&quot; width=&quot;449&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MockuPhone呈現的效果很漂亮，但實際使用的時候，常常會遇到圖片比例不能符合MockuPhone的問題。現今手機行動裝置的類型太多了，本來說好螢幕比例固定的iPhone，現在也出現了各種尺寸，跟Android陣營一起考驗程式設計師的RWD功力。&lt;/p&gt;
&lt;p&gt;實際處理螢幕截取畫面加框時，截取圖片的時候我可能是用SAMSUNG Galaxy S21 Ultra的裝置(解析度是QHD 1440 x 3200，比例1 : 2.29)，但圖片外框可能是使用iPhone 11 Pro (解析度是1125 x 2436，比例是1 : 2.17)。螢幕較長的SAMSUNG Galaxy S21 Ultra塞到螢幕較矮的iPhone 11 Pro裡面時，圖片下方就會被裁切。&lt;/p&gt;
&lt;h3&gt;SMARTMOCKUPS&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-cUEYz1VzKcU/YNhGwX3irVI/AAAAAAAE_7M/vNadM1HllUMRmQjDmLaZeF9pu6BmXCZlwCLcBGAsYHQ/s1600/smartmockups_jqq9ntyb.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-cUEYz1VzKcU/YNhGwX3irVI/AAAAAAAE_7M/vNadM1HllUMRmQjDmLaZeF9pu6BmXCZlwCLcBGAsYHQ/s450/smartmockups_jqq9ntyb.jpg&quot; title=&quot;smartmockups_jqq9ntyb.jpg&quot; alt=&quot;smartmockups_jqq9ntyb.jpg&quot; width=&quot;450&quot; height=&quot;300&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;/2019/01/hyper-app-framework-ginger-cat-touch.html&quot; target=&quot;_blank&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;SMARTMOCKUPS:&amp;nbsp;&lt;a href=&quot;https://smartmockups.com/&quot; target=&quot;_blank&quot;&gt;https://smartmockups.com/&lt;/a&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我另一個常用的加框網站是&lt;a href=&quot;https://smartmockups.com/&quot; target=&quot;_blank&quot;&gt;SMARTMOCKUPS&lt;/a&gt;。它並不是單純地加上裝置的邊框，而是提供了許多模特兒操作手機、平板、筆電或電腦等不同場景的圖片，讓你可以上傳螢幕截圖後，直接融合在模特兒操作的裝置上。上圖是我在&lt;a href=&quot;/2019/01/hyper-app-framework-ginger-cat-touch.html&quot; target=&quot;_blank&quot;&gt;薑黃喵討摸摸&lt;/a&gt;的封面圖片，看起來真的很像有人在使用我的APP，對吧？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-XBNe4kQQobA/YNhGwXua_KI/AAAAAAAE_7Y/P8i3gkCLQr0Vyu5nobrl7eV6dKq5m3pYwCLcBGAsYHQ/s1600/2021-0627-170827.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-XBNe4kQQobA/YNhGwXua_KI/AAAAAAAE_7Y/P8i3gkCLQr0Vyu5nobrl7eV6dKq5m3pYwCLcBGAsYHQ/s450/2021-0627-170827.png&quot; title=&quot;2021-0627-170827.png&quot; alt=&quot;2021-0627-170827.png&quot; width=&quot;450&quot; height=&quot;258&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://smartmockups.com/mockup/r70%24%24xIkT&quot; target=&quot;_blank&quot;&gt;SMARTMOCKUPS&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;然而，SMARTMOCKUPS的模特兒操作裝置使用的是固定的大小。我們要塞進裝置的圖片，必須配合裝置的大小來調整。SMARTMOCKUPS提供了延展或裁切的功能，你可以在上傳圖片後適度調整要顯示的圖片內容。不過，如果要完美契合SMARTMOCKUPS圖片中的裝置，那在截圖之前得要先確認理想的圖片比例喔。&lt;/p&gt;
&lt;h3&gt;BrowserFrame&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-vSdSi-_Dknw/YNhGwa4MXYI/AAAAAAAE_7I/I_84emqR-04ACe4_hYWOK-QIm559sCmqgCLcBGAsYHQ/s1600/2021-06-27_170233.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-vSdSi-_Dknw/YNhGwa4MXYI/AAAAAAAE_7I/I_84emqR-04ACe4_hYWOK-QIm559sCmqgCLcBGAsYHQ/s450/2021-06-27_170233.png&quot; title=&quot;2021-06-27_170233.png&quot; alt=&quot;2021-06-27_170233.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://browserframe.com/&quot; target=&quot;_blank&quot;&gt;BrowserFrame&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;如果只是要簡單加框的話，那&lt;a href=&quot;https://browserframe.com/&quot; target=&quot;_blank&quot;&gt;BrowserFrame&lt;/a&gt;可能是個不錯的選擇。它提供了多種不同瀏覽器的邊框。你可以讓你的網站放在Google Chrome、Safari、Firefox等瀏覽器裡面。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;BrowserFrame:&amp;nbsp;&lt;a href=&quot;https://browserframe.com/&quot; target=&quot;_blank&quot;&gt;https://browserframe.com/&lt;/a&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-0ErUUVgA0m8/YNhGuA2sarI/AAAAAAAE_7E/TQN6XmrEnYkdCi-oBwYy-jwDOtpJVfwfgCLcBGAsYHQ/s1600/2021-0627-171447.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-0ErUUVgA0m8/YNhGuA2sarI/AAAAAAAE_7E/TQN6XmrEnYkdCi-oBwYy-jwDOtpJVfwfgCLcBGAsYHQ/s450/2021-0627-171447.png&quot; title=&quot;2021-0627-171447.png&quot; alt=&quot;2021-0627-171447.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://browserframe.com/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;BrowserFrame&lt;/a&gt;)&lt;br&gt;&lt;/p&gt;
&lt;p&gt;不過BrowserFrame依然會有圖片尺寸的限制。我上傳一個較高的小型圖片之後，BrowserFrame卻把它往左右拉寬，出現了錯誤的比例。&lt;/p&gt;
&lt;p&gt;看到現在，現有的加框網站似乎都沒辦法配合操作畫面的比例，自動調整合適的邊框。所以我只好捲起袖子，自己做一個吧。&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span style=&quot;color: inherit;&quot;&gt;響應式加框網頁工具 / &lt;/span&gt;Responsive Frame Mockup&lt;br&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-XXh5z0IRtoQ/YNh6SCNY1xI/AAAAAAAE_9U/VHxaB62GQCcZOKo0JupENopXmA4lUpL_wCLcBGAsYHQ/s1600/2021-06-27_195320.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-XXh5z0IRtoQ/YNh6SCNY1xI/AAAAAAAE_9U/VHxaB62GQCcZOKo0JupENopXmA4lUpL_wCLcBGAsYHQ/s450/2021-06-27_195320.png&quot; title=&quot;2021-06-27_195320.png&quot; alt=&quot;2021-06-27_195320.png&quot; width=&quot;450&quot; height=&quot;339.328&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;響應式加框網頁工具Responsive Frame Mockup是我開發的網頁工具。它僅用純前端功能，只在你本機端的瀏覽器中運作。加框時並不會把資料上傳到伺服器。整個網站保存在GitHub上，由GitHub Page提供服務。相關資訊的連結如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;響應式加框網頁工具 Responsive Frame Mockup:&amp;nbsp;&lt;a href=&quot;https://pulipulichen.github.io/Responsive-Frame-Mockup/index.html&quot; target=&quot;_blank&quot;&gt;https://pulipulichen.github.io/Responsive-Frame-Mockup/index.html&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/li&gt;
  &lt;li&gt;GitHub保存庫：&lt;a href=&quot;https://github.com/pulipulichen/Responsive-Frame-Mockup&quot; target=&quot;_blank&quot;&gt;https://github.com/pulipulichen/Responsive-Frame-Mockup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;操作步驟 / How to use Responsive Frame Mockup&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-MEtV_vQPK2M/YNh6SHcb4yI/AAAAAAAE_9M/cGLTPepS5VE9E5doI79gExxhKs3aqRj7ACLcBGAsYHQ/s1600/pulipulichen.github.io_Responsive-Frame-Mockup_index.html_Blog_Image_.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-MEtV_vQPK2M/YNh6SHcb4yI/AAAAAAAE_9M/cGLTPepS5VE9E5doI79gExxhKs3aqRj7ACLcBGAsYHQ/s450/pulipulichen.github.io_Responsive-Frame-Mockup_index.html_Blog_Image_.png&quot; title=&quot;pulipulichen.github.io_Responsive-Frame-Mockup_index.html_Blog_Image_.png&quot; alt=&quot;pulipulichen.github.io_Responsive-Frame-Mockup_index.html_Blog_Image_.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用Responsive Frame Mockup的操作很簡單。以下說明如何操作。&lt;/p&gt;
&lt;h3&gt;1. 選擇要加框的圖片 / Prepare a screenshot&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-vooDcRlSLr0/YNh6SGYAOoI/AAAAAAAE_9c/0bqsCRZ0fpIJr-vIOKugArzdDE3ueyS1ACLcBGAsYHQ/s1600/blog.pulipuli.info__m_1_Pixel_2_.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-vooDcRlSLr0/YNh6SGYAOoI/AAAAAAAE_9c/0bqsCRZ0fpIJr-vIOKugArzdDE3ueyS1ACLcBGAsYHQ/s450/blog.pulipuli.info__m_1_Pixel_2_.png&quot; title=&quot;blog.pulipuli.info__m_1_Pixel_2_.png&quot; alt=&quot;blog.pulipuli.info__m_1_Pixel_2_.png&quot; width=&quot;253&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;選擇一個你要加框的圖片。任何尺寸跟比例的圖片皆可。&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;2. 上傳到網頁 / Upload image to Responsive Frame Mockup&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-tq0cHecr2tI/YNh6SPPzkAI/AAAAAAAE_9g/9PFcuTB8AS8Dhmdo4XB0cpfy-kYcneM1QCLcBGAsYHQ/s1600/anime.gif&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-tq0cHecr2tI/YNh6SPPzkAI/AAAAAAAE_9g/9PFcuTB8AS8Dhmdo4XB0cpfy-kYcneM1QCLcBGAsYHQ/s450/anime.gif&quot; title=&quot;anime.gif&quot; alt=&quot;anime.gif&quot; width=&quot;450&quot; height=&quot;370&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你可以用拖曳的方式，把要處理的圖片拖到網頁工具上。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Tb7xM1pqRb8/YNh6SAac1UI/AAAAAAAE_9Y/A0R9CavKkSAM8ACp8IRP6BrxAFKoHxFOACLcBGAsYHQ/s1600/2021-0627-201940.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Tb7xM1pqRb8/YNh6SAac1UI/AAAAAAAE_9Y/A0R9CavKkSAM8ACp8IRP6BrxAFKoHxFOACLcBGAsYHQ/s450/2021-0627-201940.png&quot; title=&quot;2021-0627-201940.png&quot; alt=&quot;2021-0627-201940.png&quot; width=&quot;450&quot; height=&quot;213&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此外，你也可以按下「Change Image」按鈕來選擇圖片。&lt;/p&gt;
&lt;h3&gt;3. 選擇邊框 / Choose a frame&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-onIjmOOuaPs/YNh6SApY_qI/AAAAAAAE_9Q/FCYQ8cvEEFwP7PVEciKJddw0yUsJ63rMQCLcBGAsYHQ/s1600/2021-06-27_203118.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-onIjmOOuaPs/YNh6SApY_qI/AAAAAAAE_9Q/FCYQ8cvEEFwP7PVEciKJddw0yUsJ63rMQCLcBGAsYHQ/s292/2021-06-27_203118.png&quot; title=&quot;2021-06-27_203118.png&quot; alt=&quot;2021-06-27_203118.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前Responsive Frame Mockup內建了五種邊框，供使用者任意選擇。請從左上角的下拉式選單選擇。這五種邊框各是：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Browser：瀏覽器邊框。這裡是以Google Chrome為基底做成的響應式邊框。&lt;/li&gt;
  &lt;li&gt;Phone (Portrait)：全螢幕智慧型手機的直立狀態。&lt;/li&gt;
  &lt;li&gt;Phone (Landscape)：全螢幕智慧型手機的橫向狀態。&lt;/li&gt;
  &lt;li&gt;Tablet (Portrait)：平板電腦的直立狀態。&lt;/li&gt;
  &lt;li&gt;Tablet&amp;nbsp;(Landscape)：平板電腦的橫向狀態。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4.&amp;nbsp;調整設定 / Options&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-RnpWrpvgTf4/YNh6VX164fI/AAAAAAAE_90/jouU5CKncVsBPx5AVUKkIPIVYA-dZBwyQCLcBGAsYHQ/s1600/2021-0627-202759.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-RnpWrpvgTf4/YNh6VX164fI/AAAAAAAE_90/jouU5CKncVsBPx5AVUKkIPIVYA-dZBwyQCLcBGAsYHQ/s450/2021-0627-202759.png&quot; title=&quot;2021-0627-202759.png&quot; alt=&quot;2021-0627-202759.png&quot; width=&quot;450&quot; height=&quot;167&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;選好邊框後，部分邊框具備可以微調的選項。以瀏覽器邊框來說，這些選項包括了：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;圖片尺寸(Size)：有時候我們可能會在高解析度的螢幕上截圖。這時候需要縮小圖片尺寸，讓它貼近邊框的比例。&lt;/li&gt;
  &lt;li&gt;背景顏色(Background Color)：圖片小於一定尺寸時，邊框內會露出背景。此時可以設定背景的顏色。&lt;/li&gt;
  &lt;li&gt;捲軸顯示 (Scroll Bar)：可以設定要顯示的捲軸。你可設定只顯示垂直捲軸、只顯示水平捲軸、兩者都顯示、或是兩者都不顯示。目前這個功能只有在Windows環境下能夠正常運作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;5.&amp;nbsp;下載 / Download&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-61-iiVh0mP4/YNh6VWA_ZoI/AAAAAAAE_9o/fws0NMwMw4kCrF4RLC1SsuABvu0AQXCGgCLcBGAsYHQ/s1600/2021-0627-205014.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-61-iiVh0mP4/YNh6VWA_ZoI/AAAAAAAE_9o/fws0NMwMw4kCrF4RLC1SsuABvu0AQXCGgCLcBGAsYHQ/s450/2021-0627-205014.png&quot; title=&quot;2021-0627-205014.png&quot; alt=&quot;2021-0627-205014.png&quot; width=&quot;450&quot; height=&quot;296&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最後就是按「Download」下載。你也可以直接按預覽圖片下載。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-c6CYkuBE7Is/YNh6Va9o2HI/AAAAAAAE_9k/s5Y0ZeukXOsD55YXM5PqE6Djc-DTXb8TwCLcBGAsYHQ/s1600/browser-0627-2050.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-c6CYkuBE7Is/YNh6Va9o2HI/AAAAAAAE_9k/s5Y0ZeukXOsD55YXM5PqE6Djc-DTXb8TwCLcBGAsYHQ/s450/browser-0627-2050.png&quot; title=&quot;browser-0627-2050.png&quot; alt=&quot;browser-0627-2050.png&quot; width=&quot;232&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這樣就為網頁截圖加了瀏覽器邊框囉！&lt;/p&gt;
&lt;p&gt;仔細看的話，你會發現這個瀏覽器邊框是以Windows環境中的Google Chrome瀏覽器為底修改而成。邊框雖然有頁籤、網址列，但是那些位置都已經被預先塗白。邊框上隱藏了會令讀者分心的其他資訊。&lt;/p&gt;
&lt;p&gt;許多人都會為瀏覽器畫面直接截圖。但這樣的操作畫面截圖，要不是透露出內部運作的網址，就是把自己使用的書籤暴露出來。姑且不論隱私外洩的問題。當讀者看到你那充滿私人資訊的操作畫面時，其實也很容易想入非非、讀到分心。不過，只要使用Responsive Frame Mockup加上瀏覽器邊框，你就可以輕鬆製作順眼又不奇怪的操作畫面囉。&lt;/p&gt;
&lt;h3&gt;手機邊框與平板邊框 / Phone and tablet frame&lt;/h3&gt;
&lt;p&gt;除了瀏覽器的邊框之外，我們也來看看選擇其他邊框會出現什麼結果。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-eQR-QK8Aq1I/YNh6Vb4iR6I/AAAAAAAE_94/twfnge_NVikU5hhsTA4sIvSv2HNrlucxgCLcBGAsYHQ/s1600/phone-portrait-0627-2052.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-eQR-QK8Aq1I/YNh6Vb4iR6I/AAAAAAAE_94/twfnge_NVikU5hhsTA4sIvSv2HNrlucxgCLcBGAsYHQ/s450/phone-portrait-0627-2052.png&quot; title=&quot;phone-portrait-0627-2052.png&quot; alt=&quot;phone-portrait-0627-2052.png&quot; width=&quot;234&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這是手機的邊框。上面的通知列可以選擇關閉。請注意圖片的四個角落會稍微被切割。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-hHzVNjgi50E/YNh6VSaqK3I/AAAAAAAE_9w/aMXGo9Ojyow3Zl7NPVewBG36xZ50TuuDwCLcBGAsYHQ/s1600/tablet-portrait-0627-2054.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-hHzVNjgi50E/YNh6VSaqK3I/AAAAAAAE_9w/aMXGo9Ojyow3Zl7NPVewBG36xZ50TuuDwCLcBGAsYHQ/s450/tablet-portrait-0627-2054.png&quot; title=&quot;tablet-portrait-0627-2054.png&quot; alt=&quot;tablet-portrait-0627-2054.png&quot; width=&quot;450&quot; height=&quot;371&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;這是平板電腦的邊框。平板電腦的邊框比較適合接近正方形的圖片。上面的通知列一樣可以選擇關閉。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-KM_SdEWvH0w/YNh6VaDR8MI/AAAAAAAE_9s/Kk0xSvsymPYCx2JQGYEoofuUi0DDBJ__ACLcBGAsYHQ/s1600/browser-0627-2105.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-KM_SdEWvH0w/YNh6VaDR8MI/AAAAAAAE_9s/Kk0xSvsymPYCx2JQGYEoofuUi0DDBJ__ACLcBGAsYHQ/s450/browser-0627-2105.png&quot; title=&quot;browser-0627-2105.png&quot; alt=&quot;browser-0627-2105.png&quot; width=&quot;450&quot; height=&quot;325&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pulipulichen.github.io/Responsive-Frame-Mockup/index.html&quot; target=&quot;_blank&quot;&gt;響應式加框工具Responsive Frame Mockup&lt;/a&gt;能為圖片加上瀏覽器、手機和平板的邊框，而且邊框會隨著圖片的比例動態調整。使用設計過的邊框，從軟體截圖的作者就不會因此洩漏個人隱私，讀者也能從邊框直覺地理解圖中軟體的使用情境。&lt;/p&gt;
&lt;p&gt;有了響應式加框工具的加持，整個圖文說明的品質都能夠大幅提升。搞不好教授看了非常滿意，直接就簽名讓你畢業了呢！(誤)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次&lt;a href=&quot;https://pulipulichen.github.io/Responsive-Frame-Mockup/index.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;響應式加框工具Responsive Frame Mockup&lt;/a&gt;的教學就到這裡了。寫到最後，我來問個加框之前的基本問題：&lt;/p&gt;
&lt;p&gt;&lt;b&gt;你都是用什麼工具截取螢幕畫面呢？&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A.&amp;nbsp;我用Print Screen加小畫家，學長都是這樣教的。&lt;/li&gt;
  &lt;li&gt;B.&amp;nbsp;我用手機的相機給螢幕「screen shot」。分享截圖很方便啦。&lt;/li&gt;
  &lt;li&gt;C.&amp;nbsp;我都用專門截取螢幕畫面的工具。例如&lt;a href=&quot;/2016/10/faststone-capture-how-to-capture-high.html&quot; target=&quot;_blank&quot;&gt;FastStone Capture&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在&lt;a href=&quot;#comment-editor&quot;&gt;下面的留言處&lt;/a&gt;跟大家分享你的想法。你的意見都是我繼續分享的動力喔！&lt;/p&gt;
&lt;p&gt;如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚，或是將這篇分享到Facebook等社群媒體吧！想在社群媒體追蹤我的話，歡迎到我的Facebook粉絲專頁「&lt;a href=&quot;https://www.facebook.com/pulipuli.blogspot&quot; target=&quot;FB&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;」按個讚喔！&lt;/p&gt;
&lt;p&gt;不知道這篇文章有沒有讓你吃到什麼有趣的東西呢？我是布丁，期待下次見！&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/3708892814560435563/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2021/06/Responsive-Frame-Mockup.html#comment-form' title='2 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3708892814560435563'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3708892814560435563'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2021/06/Responsive-Frame-Mockup.html' title='幫操作畫面加個邊框吧！響應式加框網頁工具 / Add a frame on screenshot: Responsive Frame Mockup'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//lh3.googleusercontent.com/-xIiZsIxd6tU/YNiKozZXRXI/AAAAAAAE_-k/EDRWLuYpBKUB_pAzh3YTVzTnRmSAHYGVwCLcBGAsYHQ/s72-c/31-PAW_Frame_Mockup_Add_browser_phone.png" height="72" width="72"/><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-7595204412782341525</id><published>2021-06-26T03:32:00.002+08:00</published><updated>2021-06-26T10:24:00.322+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="OS/Linux"/><title type='text'>如何開啓AppImage裡面的指定應用程式？以WPS為例 / How to open a specific application in an AppImage? Using WPS Office as an example</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-VC2n9g3krHo/YNaPqyTV-nI/AAAAAAAE_2A/uEp6QxoeBdsLjAm5e6GG0ucwuTxucUFOgCLcBGAsYHQ/s1600/3-AppImage_WPS_How_to_use_files_in-06021022.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-VC2n9g3krHo/YNaPqyTV-nI/AAAAAAAE_2A/uEp6QxoeBdsLjAm5e6GG0ucwuTxucUFOgCLcBGAsYHQ/s1600/3-AppImage_WPS_How_to_use_files_in-06021022.png&quot; title=&quot;3-AppImage_WPS_How_to_use_files_in-06021022.png&quot; alt=&quot;3-AppImage_WPS_How_to_use_files_in-06021022.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;哈囉，&lt;span style=&quot;text-align: justify;&quot;&gt;大家最近在吃什麼呢？這裡是越用越喜歡&lt;/span&gt;Linux的布丁。&lt;/p&gt;
&lt;p&gt;你知道Linux的免安裝應用程式&lt;a href=&quot;https://docs.appimage.org/introduction/index.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;AppImage&lt;/a&gt;嗎？AppImage主打「一個檔案=一個應用程式」的特色，只要下載並開啓權限後，就能直接執行應用程式。但直接執行AppImage時只能執行創造者預設好的指定指令。如果我們想要執行AppImage中的其他應用程式或檔案的話，可以先把它掛載到/tmp暫存資料夾，然後就可以直接使用AppImage中其他的應用程式了。&lt;/p&gt;
&lt;p&gt;本篇使用的例子是&lt;a href=&quot;https://apprepo.de/appimage/wps-office&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;WPS&amp;nbsp;Office的AppImage&lt;/a&gt;。原本&lt;a href=&quot;https://tw.wpsoffice.com/&quot; target=&quot;_blank&quot;&gt;WPS Office&lt;/a&gt;的AppImage只允許我們使用WPS文件編輯器(WPS Writer)。如果我們要將副檔名為「dps」的WPS投影片檔案格式(WPS Presentation)，用WPS Office的WPP投影片編輯器開啟的話，那就得要用這個方法囉。讓我們來看看要怎麼做吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;沒工商版面：Podcast Republic/ Non-advertising column:&amp;nbsp;Podcast Republic&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-oo-Ipf8dG8k/YNX0wXQsChI/AAAAAAAE_zg/RT4XW_bEshsCVxKZprKwr4ghS3U5bSNTwCLcBGAsYHQ/s1600/2021-06-25_222007.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-oo-Ipf8dG8k/YNX0wXQsChI/AAAAAAAE_zg/RT4XW_bEshsCVxKZprKwr4ghS3U5bSNTwCLcBGAsYHQ/s450/2021-06-25_222007.png&quot; title=&quot;2021-06-25_222007.png&quot; alt=&quot;2021-06-25_222007.png&quot; width=&quot;450&quot; height=&quot;302.984&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.itunestoppodcastplayer.app&quot; target=&quot;_blank&quot;&gt;Google Play&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;在開始之前，我們先來進段沒工商版面。沒工商版面的靈感是來自於動漫評論家&lt;a href=&quot;https://podcasts.apple.com/tw/podcast/a-jie-%E5%AE%85%E6%BC%AB%E6%85%A2%E8%AA%AA/id1570594695&quot; target=&quot;_blank&quot;&gt;A Jie 宅漫慢說&lt;/a&gt;的Podcast。如果有工商，這裡就會是工商的廣告。如果沒有工商，那我就會在這裡簡短地分享一件我有興趣的事物。&lt;/p&gt;
&lt;p&gt;既然沒工商版面是從Podcast來的，那這個第一次沒工商版面就來介紹我很喜歡的Podcast應用程式：&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.itunestoppodcastplayer.app&quot; target=&quot;_blank&quot;&gt;Podcast Republic&lt;/a&gt;。Podcast是一種廣播或影片節目等多媒體內容的訂閱機制。它採用了類似RSS訂閱Blog文章的形式，讓我們可以聆聽訂閱特定資料來源的最新節目。Android上支援Podcast的應用程式很多，但Podcast Republic具有許多其他應用程式所沒有的訂閱清單與播放進度的同步機制。這對擁有多個Android裝置與Chromebook的我來說非常實用。此外，Podcast Republic能夠將多個資訊來源組織成播放清單，並且可按照時間排序或按照不同資料來源輪替要播放的節目。Podcast Republic除了具備超豐富的聲音調節功能之外，還能用它內建的影片播放器，訂閱影片類型的資料來源。&lt;/p&gt;
&lt;p&gt;綜上所述，Podcast Republic讓我喜愛的三大特色如下：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;訂閱清單和播放進度的同步功能：換一個裝置後，你也能從上次的進度繼續聆聽。&lt;/li&gt;
  &lt;li&gt;支援多規則的播放清單：混合多個資料來源輪流播放不同節目，讓你一直聽不膩。&lt;/li&gt;
  &lt;li&gt;超豐富聲音與影片播放器設定功能：要快要慢、大聲小聲都隨你調。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Podcast Republic的相關資訊如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;官方網站：&lt;a href=&quot;https://www.podcastrepublic.net/&quot; target=&quot;_blank&quot;&gt;https://www.podcastrepublic.net/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Google Play下載：&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.itunestoppodcastplayer.app&quot; target=&quot;_blank&quot;&gt;https://play.google.com/store/apps/details?id=com.itunestoppodcastplayer.app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你想知道更多關於Podcast Republic的內容，可以在下面留言跟我說喔。讓我們結束沒工商版面，回到今天要講的主題吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;AppImage是什麼？ / What is AppImage?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-3jq_92vLpcw/YNX0wRr-DkI/AAAAAAAE_zw/jkz2kWrH0Vo6vn0WEQkU8C2OOiTH4QL2ACLcBGAsYHQ/s1600/2021-0625-224310.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-3jq_92vLpcw/YNX0wRr-DkI/AAAAAAAE_zw/jkz2kWrH0Vo6vn0WEQkU8C2OOiTH4QL2ACLcBGAsYHQ/s450/2021-0625-224310.png&quot; title=&quot;2021-0625-224310.png&quot; alt=&quot;2021-0625-224310.png&quot; width=&quot;450&quot; height=&quot;235.891&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://appimage.org/&quot; target=&quot;_blank&quot;&gt;AppImage&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;比起把應用程式安裝在電腦上，我更喜歡不需要安裝、能夠直接執行的免安裝應用程式。以前我也常常介紹Windows上的免安裝應用程式，例如&lt;a href=&quot;/2016/04/libreoffice-portable-libreoffice.html&quot; target=&quot;_blank&quot;&gt;LibreOffice Portable&lt;/a&gt;。免安裝應用程式在Linux作業系統也相當盛行。大部分也是下載後、直接執行就能使用。最知名的免安裝應用程式格式是&lt;a href=&quot;https://blog.longwin.com.tw/2016/07/ubuntu-linux-common-package-snap-2016/&quot; target=&quot;_blank&quot;&gt;snap&lt;/a&gt;。但因為Chromebook的crouton不能使用snap，所以我主要使用另一種Linux上常見免安裝應用程式格式，也就是今天要講的主角：AppImage。&lt;/p&gt;
&lt;p&gt;根據&lt;a href=&quot;https://docs.appimage.org/introduction/index.html&quot; target=&quot;_blank&quot;&gt;AppImage&lt;/a&gt;的說明。在將應用程式以AppImage格式打包後，使用者只要下載該應用程式的AppImage檔案、設定它的執行權限，然後就可以直接執行它。目前Linux的主流發佈版都能使用AppImage，包括Ubuntu、Debian、Fedora。AppImage的核心概念就是：&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;一個應用程式 =&amp;nbsp;一個檔案 (one app = one file)&lt;/span&gt;。容易使用，而且快速。&lt;/p&gt;
&lt;h3&gt;不只一個應用程式的AppImage / Multiple applications in an AppImage file&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Vef7_3vODoU/YNX0wdKpwDI/AAAAAAAE_zo/_04oxn_rNfAjUi-MMXFk-7zDsd7l5ByOgCLcBGAsYHQ/s1600/2021-0625-225616.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Vef7_3vODoU/YNX0wdKpwDI/AAAAAAAE_zo/_04oxn_rNfAjUi-MMXFk-7zDsd7l5ByOgCLcBGAsYHQ/s450/2021-0625-225616.png&quot; title=&quot;2021-0625-225616.png&quot; alt=&quot;2021-0625-225616.png&quot; width=&quot;450&quot; height=&quot;287&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://apprepo.de/appimage/wps-office&quot; target=&quot;_blank&quot;&gt;Apprepo&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;ok，如果一個AppImage裡面只有一個應用程式，那世界一切都很美好。問題是，當我們遇到一個AppImage，裡面不只有一個應用程式的時候，那該怎麼辦？&lt;/p&gt;
&lt;p&gt;現在我們要來使用的AppImage是&lt;a href=&quot;https://tw.wpsoffice.com/&quot; target=&quot;_blank&quot;&gt;WPS Office&lt;/a&gt;。它是一套類似Microsoft Office的辦公室套裝軟體，同樣也具有文書處理、試算表編輯、投影片編輯等多個應用程式。在Apprepo裡面有著已經被打包好的AppImage，它的下載連結如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://apprepo.de/appimage/wps-office&quot; target=&quot;_blank&quot;&gt;AppImage: WPS Office&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果要讓WPS Office可以執行，那需要執行以下兩行指令：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;chmod&amp;nbsp;+x&amp;nbsp;./WPS-Office.AppImage&lt;br&gt;./WPS-Office.AppImage&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-qy1vl93iz4k/YNYiej57j1I/AAAAAAAE_0M/_QpLIadzflAXdGesA1dFK_ZHSgeGAaLfQCLcBGAsYHQ/s1600/Screenshot_2021-06-26_00-38-59.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-qy1vl93iz4k/YNYiej57j1I/AAAAAAAE_0M/_QpLIadzflAXdGesA1dFK_ZHSgeGAaLfQCLcBGAsYHQ/s450/Screenshot_2021-06-26_00-38-59.png&quot; title=&quot;Screenshot_2021-06-26_00-38-59.png&quot; alt=&quot;Screenshot_2021-06-26_00-38-59.png&quot; width=&quot;450&quot; height=&quot;279&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在使用chmod開啟了執行權限後，我們就可以直接執行WPS-Office.AppImage。也可以將WPS-Office.AppImage執行指令加入到應用程式列表中，方便我們將副檔名.wps的檔案直接用WPS-Office.AppImage開啟。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-S7feByXGVMI/YNYienAfYDI/AAAAAAAE_0E/Is_1PJiHDa01wOt9yd99LL-QVWeQU-KpwCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210626004331_a.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-S7feByXGVMI/YNYienAfYDI/AAAAAAAE_0E/Is_1PJiHDa01wOt9yd99LL-QVWeQU-KpwCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210626004331_a.png&quot; title=&quot;DeepinScreenshot_select-area_20210626004331_a.png&quot; alt=&quot;DeepinScreenshot_select-area_20210626004331_a.png&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不過，如果我們手邊的是WPS投影片編輯器的檔案格式，也就是副檔名為.dps的檔案時，那要怎麼用WPS-Office.AppImage開啟呢？&lt;/p&gt;
&lt;h3&gt;不可直接修改AppImage / AppImage are read-only&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-OYKqoc-gkZI/YNX0we1-_vI/AAAAAAAE_zk/onczXZNbxRsX-t4lNPY7Q1cXidHV1urKQCLcBGAsYHQ/s1600/2021-0625-230501.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-OYKqoc-gkZI/YNX0we1-_vI/AAAAAAAE_zk/onczXZNbxRsX-t4lNPY7Q1cXidHV1urKQCLcBGAsYHQ/s450/2021-0625-230501.png&quot; title=&quot;2021-0625-230501.png&quot; alt=&quot;2021-0625-230501.png&quot; width=&quot;450&quot; height=&quot;287&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://unix.stackexchange.com/a/518511&quot; target=&quot;_blank&quot;&gt;StackExchange&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;我本來的想法是看能不能修改AppImage裡面的檔案。不過找了老半天，我找到的方式都是建議重新打包AppImage。要重新打包，意謂著我們得必須準備好處理AppImage的&lt;a href=&quot;https://appimage.github.io/appimagetool/&quot; target=&quot;_blank&quot;&gt;appimagetool&lt;/a&gt;，&lt;a href=&quot;https://docs.appimage.org/packaging-guide/from-source/index.html&quot; target=&quot;_blank&quot;&gt;建置的手續&lt;/a&gt;看起來也有點複雜。我研究了一陣子，最後放棄了修改AppImage的念頭。&lt;/p&gt;
&lt;h3&gt;使用AppImage中的檔案 / Use files in AppImage by mounting&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-9N-Z9kymEBo/YNX0wRX144I/AAAAAAAE_zs/uFndNGigDkA_hJ94xgxZlt33yDtYlBXxQCLcBGAsYHQ/s1600/2021-0625-231108.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-9N-Z9kymEBo/YNX0wRX144I/AAAAAAAE_zs/uFndNGigDkA_hJ94xgxZlt33yDtYlBXxQCLcBGAsYHQ/s450/2021-0625-231108.png&quot; title=&quot;2021-0625-231108.png&quot; alt=&quot;2021-0625-231108.png&quot; width=&quot;450&quot; height=&quot;287&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://docs.appimage.org/user-guide/run-appimages.html&quot; target=&quot;_blank&quot;&gt;AppImage&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;雖然我沒辦法變更AppImage裡面的檔案內容，但還是有方法可以使用AppImage裡面的其他檔案。根據AppImage說明文件中&lt;a href=&quot;https://docs.appimage.org/user-guide/run-appimages.html#mount-an-appimage&quot; target=&quot;_blank&quot;&gt;「掛載AppImage」 (Mount an Image)&lt;/a&gt;裡面有提到，我們可以將AppImage掛載到暫存資料夾 /tmp&amp;nbsp;底下。掛載的指令就是在可執行的AppImage後面加上「&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;--appimage-mount&lt;/span&gt;」參數，例如下面的指令：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;my.AppImage&amp;nbsp;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;--appimage-mount&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接著指令會輸出一段路徑，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/tmp/mount_myXXXX&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這段路徑表示AppImage掛載的位置。此時該指令並不會停止。當指令持續運作時，表示AppImage持續掛載在這個位置。我們可以按「Ctrl + c」取消現在的指令，此時掛載會停止。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-b3czlfs-aUg/YNYies1BVWI/AAAAAAAE_0I/g74Wc2IcZHIGWAgJZVDd0NImyP1SvgqbgCLcBGAsYHQ/s1600/DeepinScreenshot_select-area_20210626005041_p.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-b3czlfs-aUg/YNYies1BVWI/AAAAAAAE_0I/g74Wc2IcZHIGWAgJZVDd0NImyP1SvgqbgCLcBGAsYHQ/s450/DeepinScreenshot_select-area_20210626005041_p.png&quot; title=&quot;DeepinScreenshot_select-area_20210626005041_p.png&quot; alt=&quot;DeepinScreenshot_select-area_20210626005041_p.png&quot; width=&quot;450&quot; height=&quot;143&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果將WPS-Office.AppImage掛載後，我們就可以在/tmp/.mount-WPS_OfXXXXXX/opt/application/ 裡面找到投影片編輯器的檔案wpp。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-5OeIB_f82Ok/YNYiejRULTI/AAAAAAAE_0Q/kg8qf0oHGDwnHyl62U7PF3ICHJdmDEpXgCLcBGAsYHQ/s1600/2021-0626-004532.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-5OeIB_f82Ok/YNYiejRULTI/AAAAAAAE_0Q/kg8qf0oHGDwnHyl62U7PF3ICHJdmDEpXgCLcBGAsYHQ/s450/2021-0626-004532.png&quot; title=&quot;2021-0626-004532.png&quot; alt=&quot;2021-0626-004532.png&quot; width=&quot;450&quot; height=&quot;280&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-ZhKZ7gq1gvU/YNYievsz0oI/AAAAAAAE_0U/XUhnDhUKNJM0oqkaKVTm42jbvcuddTjlgCLcBGAsYHQ/s1600/Screenshot_2021-06-26_00-45-50_e.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-ZhKZ7gq1gvU/YNYievsz0oI/AAAAAAAE_0U/XUhnDhUKNJM0oqkaKVTm42jbvcuddTjlgCLcBGAsYHQ/s450/Screenshot_2021-06-26_00-45-50_e.png&quot; title=&quot;Screenshot_2021-06-26_00-45-50_e.png&quot; alt=&quot;Screenshot_2021-06-26_00-45-50_e.png&quot; width=&quot;450&quot; height=&quot;279&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;執行wpp檔案，就能開啟投影片編輯器WPS Presentation囉。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;腳本與佈署 / Scripts and setup&lt;/h2&gt;
&lt;p&gt;如果我們可以透過掛載來使用AppImage裡面的其他檔案的話，那我們就可以撰寫兩個腳本輔助我們完成這個任務。以下是我在Chromebook以&lt;a href=&quot;https://github.com/dnschneid/crouton&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;crouton&lt;/a&gt;安裝的Ubuntu 18.04環境中所進行的操作。&lt;/p&gt;
&lt;p&gt;這兩個腳本的任務如下：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;讓Linux在開機時自動掛載AppImage。&lt;/li&gt;
  &lt;li&gt;執行掛載後的特定檔案。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我爲WPS-Office.AppImage撰寫了WPS-Office-mount.sh跟WPS-Office-wpp.sh兩個腳本。接著再將WPS-Office.AppImage檔案跟腳本放到以下路徑，此處的USER是使用者帳號：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/home/USER/AppImages/WPS-Office/WPS-Office.AppImage
/home/USER/AppImages/WPS-Office/WPS-Office-mount.sh
/home/USER/AppImages/WPS-Office/WPS-Office-wpp.sh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用chmod指令將這些檔案賦予執行權限：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;chmod&amp;nbsp;+x&amp;nbsp;/home/USER/AppImages/WPS-Office/*&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下我們繼續來看看這兩個腳本的內容，以及這兩個腳本的佈署方式。&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;掛載AppImage: WPS-Office-mount.sh / Script to mount the AppImage file&lt;/h3&gt;
&lt;p&gt;WPS-Office-mount.sh的內容如下：&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/home/USER/AppImages/WPS-Office/WPS-Office.AppImage&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: bold;&quot;&gt;--appimage-mount&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(0, 0, 255); font-weight: bold;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在執行WPS-Office.AppImage的時候，我們加上了「&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: bold;&quot;&gt;--appimage-mount&lt;/span&gt;」參數，使它掛載到/tmp暫存資料夾底下。&lt;/p&gt;
&lt;p&gt;除此之外，我們也在指令後方加上了「&lt;span style=&quot;font-weight: bold; color: rgb(0, 0, 255);&quot;&gt;&amp;amp;&lt;/span&gt;」，讓該指令保持在背景執行。關於在背景執行指令的觀念，請看鳥哥的「&lt;a href=&quot;http://linux.vbird.org/linux_basic/0440processcontrol.php&quot; target=&quot;_blank&quot;&gt;程序管理與 SELinux 初探&lt;/a&gt;」說明。&lt;/p&gt;
&lt;h4&gt;腳本佈署 / Deploy&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-iuihjyer_Fs/YNYihcKL-OI/AAAAAAAE_0o/1pHRGbkrqO0nZPQVXGKOt60JR-pkoF7jACLcBGAsYHQ/s1600/deepin-screenshot.J13691_a.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-iuihjyer_Fs/YNYihcKL-OI/AAAAAAAE_0o/1pHRGbkrqO0nZPQVXGKOt60JR-pkoF7jACLcBGAsYHQ/s450/deepin-screenshot.J13691_a.png&quot; title=&quot;deepin-screenshot.J13691_a.png&quot; alt=&quot;deepin-screenshot.J13691_a.png&quot; width=&quot;450&quot; height=&quot;392&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我們讓Linux開機的時候執行WPS-Office-mount.sh。Linux有很多方式可以設定開機時要執行的指令或腳本。在這裡我使用的是Startup Application Preference (套件名稱是gnome-startup-applications)。指令(Command)的部分設爲WPS-Office-mount.sh的路徑，名稱(Name)隨意即可。關於Startup Application Preference的詳細操作請參考&lt;a href=&quot;https://askubuntu.com/a/48327&quot; target=&quot;_blank&quot;&gt;StackExchange&lt;/a&gt;&lt;a href=&quot;https://askubuntu.com/a/48327&quot; target=&quot;_blank&quot;&gt;的說明&lt;/a&gt;。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;在這裡我們先執行WPS-Office-mount.sh，讓WPS-Office.AppImage先掛載到/tmp資料夾下。接著再來看另一個腳本吧。&lt;/p&gt;
&lt;h3&gt;執行AppImage中的檔案: WPS-Office-wpp.sh / Script to run a file in the AppImage&lt;/h3&gt;
&lt;p&gt;WPS-Office-wpp.sh的內容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/tmp/.mount_WPS-Of*&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/opt/application/wpp&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(41, 82, 24);&quot;&gt;&quot;$1&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這段指令可以分三個部分來說明，我用三種不同的顏色來標示：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/tmp/.mount_WPS-Of*/&lt;/span&gt;：這段表示WPS-Office.AppImage會掛載到/tmp底下的特定目錄。其中Of後面的文字會是隨機字串，因此在此用*表示。&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/opt/application/wpp&lt;/span&gt;：這段是我們要在WPS-Office.AppImage中執行的應用程式路徑。wpp就是WPS Office的投影片編輯器。&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: rgb(41, 82, 24);&quot;&gt;&quot;$1&quot;&lt;/span&gt;：這個符號會被替換成接續在腳本後面的參數。如此一來我們就可以使用WPS-Office-wpp.sh開啓檔案。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;腳本佈署：應用程式清單 / Deploy: Applications&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-s2Z1LAGaGUU/YNYihdLyPNI/AAAAAAAE_0s/5WRAPLvafI8YCJ0KGPPEQw3zxHPmQG0VgCLcBGAsYHQ/s1600/2021-0626-011858.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-s2Z1LAGaGUU/YNYihdLyPNI/AAAAAAAE_0s/5WRAPLvafI8YCJ0KGPPEQw3zxHPmQG0VgCLcBGAsYHQ/s450/2021-0626-011858.png&quot; title=&quot;2021-0626-011858.png&quot; alt=&quot;2021-0626-011858.png&quot; width=&quot;450&quot; height=&quot;348&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我們要將WPS-Office-wpp.sh加入Linux的應用程式清單。這邊我使用的是應用程式清單編輯器Main Menu (套件名稱：&lt;a href=&quot;https://packages.ubuntu.com/search?keywords=alacarte&quot; target=&quot;_blank&quot;&gt;alacarte&lt;/a&gt;)。指令(Command)爲WPS-Office-wpp.sh的路徑，名稱(Name)隨意即可。我設成「WPP」跟後面一串關鍵字，方便搜尋。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-DhNQAUNrgqE/YNYihnzsnVI/AAAAAAAE_0w/wbO-TPt4WBc34p9jasb9_fxs_tZJX40cwCLcBGAsYHQ/s1600/2021-0626-012702.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-DhNQAUNrgqE/YNYihnzsnVI/AAAAAAAE_0w/wbO-TPt4WBc34p9jasb9_fxs_tZJX40cwCLcBGAsYHQ/s450/2021-0626-012702.png&quot; title=&quot;2021-0626-012702.png&quot; alt=&quot;2021-0626-012702.png&quot; width=&quot;450&quot; height=&quot;254&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;應用程式選單中就會出現我們設定的應用程式WPP。&lt;/p&gt;
&lt;h4&gt;腳本佈署：開啓檔案 / Deploy: Open With&lt;/h4&gt;
&lt;p&gt;再來我們要讓副檔名.dps的檔案能夠直接使用WPP開啓。這裡我提供一個Hello, World的範例檔案供大家下載嘗試：&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2021/06/Hello-World.dps&quot; target=&quot;_blank&quot;&gt;Hello-World.dps&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-nII3Atg6BvM/YNYjWy8yghI/AAAAAAAE_1w/i3-zXckipgchdpAAjTy58x3GIvR7iOU2ACLcBGAsYHQ/s1600/eScreenshot_2021-06-26_01-25-16_a_1_1.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-nII3Atg6BvM/YNYjWy8yghI/AAAAAAAE_1w/i3-zXckipgchdpAAjTy58x3GIvR7iOU2ACLcBGAsYHQ/s450/eScreenshot_2021-06-26_01-25-16_a_1_1.png&quot; title=&quot;eScreenshot_2021-06-26_01-25-16_a_1_1.png&quot; alt=&quot;eScreenshot_2021-06-26_01-25-16_a_1_1.png&quot; width=&quot;450&quot; height=&quot;343&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我們在Linux檔案管理器的.dps檔案上按右鍵，使用「Open With Other Application...」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-pvCVb38DeXE/YNYihEL_6EI/AAAAAAAE_0g/gkykCYAxLHM98xZEM9nEPoKx5NiSBL5rACLcBGAsYHQ/s1600/2021-0626-012220.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-pvCVb38DeXE/YNYihEL_6EI/AAAAAAAE_0g/gkykCYAxLHM98xZEM9nEPoKx5NiSBL5rACLcBGAsYHQ/s450/2021-0626-012220.png&quot; title=&quot;2021-0626-012220.png&quot; alt=&quot;2021-0626-012220.png&quot; width=&quot;357&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;選擇剛剛建立應用程式WPP。如果前面有掛載過WPS-Office.AppImage的話，此處按下Open，應該能夠正常啓動。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-glMKEmtWVmg/YNYihSHtrzI/AAAAAAAE_0k/lVZIEzg23WwBPyj8s2I7cl6vxcTp-0OJACLcBGAsYHQ/s1600/2021-0626-013539.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-glMKEmtWVmg/YNYihSHtrzI/AAAAAAAE_0k/lVZIEzg23WwBPyj8s2I7cl6vxcTp-0OJACLcBGAsYHQ/s450/2021-0626-013539.png&quot; title=&quot;2021-0626-013539.png&quot; alt=&quot;2021-0626-013539.png&quot; width=&quot;450&quot; height=&quot;279&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;就像這樣，直接使用WPS Presentation開啓dps檔案了。&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;AppImage原本設計的用途是讓使用者直接執行、開啓指定的應用程式。本篇嘗試使用掛載與執行的方式，讓我們能夠享受AppImage免安裝便利性的同時，也能夠活用AppImage裡面更多的功能。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;雖然寫到最後才聲明，不過其實我還是Linux的初學者，不太確定這樣的形式是否是使用Linux的最佳做法。畢竟Linux的客製化功能真的很多，而且發佈版、發佈版各自的版本之間也有些許不同。直到現在，我還是抱著一顆學習的心，一邊探索Linux的世界。如果您有其他的建議，歡迎在下面留言處給我指教喔！




&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次使用AppImage中其他應用程式的教學就到這裡了。寫到最後，我有個問題想要問問大家：&lt;/p&gt;
&lt;p&gt;&lt;b&gt;你用過哪些Linux的免安裝應用程式格式呢？&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A. &lt;a href=&quot;https://snapcraft.io/store&quot; target=&quot;_blank&quot;&gt;snap&lt;/a&gt;：Ubuntu的主流，有方便的商店可以使用。&lt;/li&gt;
  &lt;li&gt;B. &lt;a href=&quot;https://github.com/flatpak/flatpak&quot; target=&quot;_blank&quot;&gt;Flatpak&lt;/a&gt;：安裝簡單，容易管理。&lt;/li&gt;
  &lt;li&gt;C. &lt;a href=&quot;https://appimage.org/&quot; target=&quot;_blank&quot;&gt;AppImage&lt;/a&gt;：單一檔案就可執行，簡潔有力。&lt;/li&gt;
  &lt;li&gt;D. 我都直接安裝，不使用免安裝應用程式格式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在&lt;a href=&quot;#comment-editor&quot;&gt;下面的留言處&lt;/a&gt;跟大家分享你的想法。你的意見都是我繼續分享的動力喔！&lt;/p&gt;
&lt;p&gt;如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚，或是將這篇分享到Facebook等社群媒體吧！想在社群媒體追蹤我的話，歡迎到我的Facebook粉絲專頁「&lt;a href=&quot;https://www.facebook.com/pulipuli.blogspot&quot; target=&quot;FB&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;」按個讚喔！&lt;/p&gt;
&lt;p&gt;不知道這篇文章有沒有讓你吃到些有用的東西呢？我是布丁，期待下次見！&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/7595204412782341525/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2021/06/open-a-specific-application-in-an-AppImage-Using-WPS-Office-as-an-example.html#comment-form' title='1 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/7595204412782341525'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/7595204412782341525'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2021/06/open-a-specific-application-in-an-AppImage-Using-WPS-Office-as-an-example.html' title='如何開啓AppImage裡面的指定應用程式？以WPS為例 / How to open a specific application in an AppImage? Using WPS Office as an example'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//lh3.googleusercontent.com/-VC2n9g3krHo/YNaPqyTV-nI/AAAAAAAE_2A/uEp6QxoeBdsLjAm5e6GG0ucwuTxucUFOgCLcBGAsYHQ/s72-c/3-AppImage_WPS_How_to_use_files_in-06021022.png" height="72" width="72"/><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-2787946221549113389</id><published>2021-04-07T01:01:00.001+08:00</published><updated>2021-04-07T01:01:04.118+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Blogger"/><category scheme="http://www.blogger.com/atom/ns#" term="CSS"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/CSS"/><title type='text'>為什麼列印網頁時頁首與頁尾消失了？ /  Page Margin Setting causes Headers and Footers to Disappear when Printing</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-XwprDZY-VxY/YGyS7_npVeI/AAAAAAAE8LE/3V3XuBef0b8pq1U-GokKWs2ogykSm5HkwCLcBGAsYHQ/s1600/27-Page_Margin_Setting_causes_Headers_1.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-XwprDZY-VxY/YGyS7_npVeI/AAAAAAAE8LE/3V3XuBef0b8pq1U-GokKWs2ogykSm5HkwCLcBGAsYHQ/s1600/27-Page_Margin_Setting_causes_Headers_1.jpg&quot; title=&quot;27-Page_Margin_Setting_causes_Headers.jpg&quot; alt=&quot;27-Page_Margin_Setting_causes_Headers.jpg&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;嗨，大家最近在吃什麼呢？這裡是&lt;a href=&quot;https://www.twreporter.org/a/taiwan-railway-408-taroko-accident&quot; target=&quot;_blank&quot;&gt;為臺灣祈福&lt;/a&gt;的布丁，最近我苦於處理&lt;a href=&quot;/&quot; target=&quot;_blank&quot;&gt;Blog網頁&lt;/a&gt;列印版本的各種問題。其中一個令我困擾已久的難題，就是列印版的頁首和頁尾消失了。研究後才發現，這是因為我在CSS語法中設定了頁面邊界「&lt;a href=&quot;https://github.com/foundation/foundation-sites/issues/6834#issue-100362615&quot; target=&quot;_blank&quot;&gt;@page {margin: 0.5cm}&lt;/a&gt;」，導致Google Chrome瀏覽器在列印版本中隱藏了頁首與頁尾。接下來我們就一起來看看網頁列印版本的頁首和頁尾，以及造成它們消失的CSS設定細節吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;列印網頁的頁首和頁尾 / Headers and footers when printing&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-9Dv4z_hc-ZE/YGyS74WzCUI/AAAAAAAE8K0/UrRjqiVDHP4W6NeIUgAK_cUkH5TYytuAQCLcBGAsYHQ/s1600/2021-0406-220111-alig-ne-ain-FDr-The-Popular-ax-script.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-9Dv4z_hc-ZE/YGyS74WzCUI/AAAAAAAE8K0/UrRjqiVDHP4W6NeIUgAK_cUkH5TYytuAQCLcBGAsYHQ/s450/2021-0406-220111-alig-ne-ain-FDr-The-Popular-ax-script.png&quot; title=&quot;2021-0406-220111-alig-ne-ain-FDr-The-Popular-ax-script.png&quot; alt=&quot;2021-0406-220111-alig-ne-ain-FDr-The-Popular-ax-script.png&quot; width=&quot;450&quot; height=&quot;297&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;網頁列印版本的頁首和頁尾是什麼呢？這是一種在列印時，瀏覽器自動加入的額外資訊。每個瀏覽器所設計的頁首和頁尾不盡相同。以&lt;a href=&quot;https://www.google.com/chrome/?brand=BNSD&amp;amp;gclid=CjwKCAjwjbCDBhAwEiwAiudBy-inqYprm1UGxDIi9BAjk5pxE3ZD3PObpomsMiaCWVf-29Yq_rpaZRoCKQQQAvD_BwE&amp;amp;gclsrc=aw.ds&quot; target=&quot;_blank&quot;&gt;Google Chrome瀏覽器&lt;/a&gt;為例，它所加入的頁首為左上角列印日期、右上角網頁標題，而頁尾則是左下角網址、右下角是頁碼與頁數。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Z-PRCVrPEU4/YGyS73w70OI/AAAAAAAE8K4/DRqFfRuksG8ZQIih1azahCM2LauA7FS3QCLcBGAsYHQ/s1600/2021-0406-220459-WN-TRG-SAS-MALI-The-Popular-Script.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Z-PRCVrPEU4/YGyS73w70OI/AAAAAAAE8K4/DRqFfRuksG8ZQIih1azahCM2LauA7FS3QCLcBGAsYHQ/s450/2021-0406-220459-WN-TRG-SAS-MALI-The-Popular-Script.png&quot; title=&quot;2021-0406-220459-WN-TRG-SAS-MALI-The-Popular-Script.png&quot; alt=&quot;2021-0406-220459-WN-TRG-SAS-MALI-The-Popular-Script.png&quot; width=&quot;450&quot; height=&quot;297&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一般情況下，要列印的使用者可以自行決定要不要開啟頁首與頁尾。在Google Chrome瀏覽器89版中，使用者可以從預覽列印的顯示更多設定中找到「選項 [v] 頁首及頁尾」選項。如果此選項不勾選，那頁首與頁尾就不會顯示。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-oc7GA8_CDww/YGyS78_lFTI/AAAAAAAE8LA/Ls7vjY9i9E8mKoOiiEa6af6mEGECsEUNwCLcBGAsYHQ/s1600/2021-04-06_220853.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-oc7GA8_CDww/YGyS78_lFTI/AAAAAAAE8LA/Ls7vjY9i9E8mKoOiiEa6af6mEGECsEUNwCLcBGAsYHQ/s347/2021-04-06_220853.png&quot; title=&quot;2021-04-06_220853.png&quot; alt=&quot;2021-04-06_220853.png&quot; width=&quot;246.328&quot; height=&quot;347.719&quot;&gt;&lt;/a&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-cmzCtnmnfvc/YGyS72ni_QI/AAAAAAAE8Kw/EfBkx80KdtUiE0m1B7fb-tNC4CEZq9cIACLcBGAsYHQ/s1600/2021-04-06_220649-sas-masini-tacscssmpuoraniil-The.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-cmzCtnmnfvc/YGyS72ni_QI/AAAAAAAE8Kw/EfBkx80KdtUiE0m1B7fb-tNC4CEZq9cIACLcBGAsYHQ/s347/2021-04-06_220649-sas-masini-tacscssmpuoraniil-The.png&quot; title=&quot;2021-04-06_220649-sas-masini-tacscssmpuoraniil-The.png&quot; alt=&quot;2021-04-06_220649-sas-masini-tacscssmpuoraniil-The.png&quot; width=&quot;246.188&quot; height=&quot;347.516&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上面兩張列印網頁的結果中，左邊是有頁首與頁尾，右邊則關閉了頁首及頁尾的顯示。這樣子大家應該就能知道頁首跟頁尾在網頁列印版本中扮演的角色了吧。&lt;/p&gt;
&lt;h2&gt;消失的頁首和頁尾 / Why does headers and footers&amp;nbsp; disappear?&lt;/h2&gt;
&lt;p&gt;通常的情況下，頁首與頁尾會隨著使用者的設定而隱藏或出現。但我們來看看下面這張預覽列印的操作畫面，它竟然出現了跟使用者預期不一樣的狀況。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-POvjVx2tWco/YGyS78D-S6I/AAAAAAAE8K8/VGtCKXokQ58vayyPDLgI_tba73H1GBckQCLcBGAsYHQ/s1600/2021-0406-221605-awgW-gs-ne-biting-pulipul-nf-popular.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-POvjVx2tWco/YGyS78D-S6I/AAAAAAAE8K8/VGtCKXokQ58vayyPDLgI_tba73H1GBckQCLcBGAsYHQ/s450/2021-0406-221605-awgW-gs-ne-biting-pulipul-nf-popular.png&quot; title=&quot;2021-0406-221605-awgW-gs-ne-biting-pulipul-nf-popular.png&quot; alt=&quot;2021-0406-221605-awgW-gs-ne-biting-pulipul-nf-popular.png&quot; width=&quot;450&quot; height=&quot;297&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;仔細看看，我在選項裡面打勾了「頁首及頁尾」，照理說網頁的頁首跟頁尾應該要出現，但左邊的預覽畫面中卻沒看到頁首與頁尾。這是為什麼呢？&lt;/p&gt;
&lt;h2&gt;頁面邊界太窄了 / The page margin is too small&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-PA7E9dXzQPY/YGyTBcUv25I/AAAAAAAE8LI/GPhFPGt-OuswSGJNhxWXLPoRerkR-2jWACLcBGAsYHQ/s1600/2021-04-06_222013-TWiStErRob-commented-on-Aug-Contributor.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-PA7E9dXzQPY/YGyTBcUv25I/AAAAAAAE8LI/GPhFPGt-OuswSGJNhxWXLPoRerkR-2jWACLcBGAsYHQ/s450/2021-04-06_222013-TWiStErRob-commented-on-Aug-Contributor.png&quot; title=&quot;2021-04-06_222013-TWiStErRob-commented-on-Aug-Contributor.png&quot; alt=&quot;2021-04-06_222013-TWiStErRob-commented-on-Aug-Contributor.png&quot; width=&quot;450&quot; height=&quot;420.531&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://github.com/foundation/foundation-sites/issues/6834&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;我在網路上找了半天，最後發現真正的問題來自於CSS語法中頁面邊界「@page {margin: 0.5cm }」的設定。根據&lt;a href=&quot;https://github.com/foundation/foundation-sites/issues/6834#issue-100362615&quot; target=&quot;_blank&quot;&gt;TWiStErRob&lt;/a&gt;的測試，當頁面邊界被設定低於0.8cm時，頁首與頁尾不會顯示；介於0.8cm到0.83cm之間，頁首與頁尾會被裁切，無法完整顯示；只有在0.83cm以上，頁首與頁尾才能完整顯示。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-uzPtwDX1yeA/YGyTBUjMnHI/AAAAAAAE8LU/yuqKzOghJn0iWP1mThmxZwjj7swVSJHYQCLcBGAsYHQ/s1600/2021-04-06_223513-lagspmtsoaues-Bier-Br-syst-gem-ote.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-uzPtwDX1yeA/YGyTBUjMnHI/AAAAAAAE8LU/yuqKzOghJn0iWP1mThmxZwjj7swVSJHYQCLcBGAsYHQ/s312/2021-04-06_223513-lagspmtsoaues-Bier-Br-syst-gem-ote.png&quot; title=&quot;2021-04-06_223513-lagspmtsoaues-Bier-Br-syst-gem-ote.png&quot; alt=&quot;2021-04-06_223513-lagspmtsoaues-Bier-Br-syst-gem-ote.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;回頭找看看「布丁布丁吃什麼？」的CSS設定，赫然發現我居然也設定了頁面邊界。CSS程式碼如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;@page&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;margin:&amp;nbsp;0.5cm;&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;把這段&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/CSS/Comments&quot; target=&quot;_blank&quot;&gt;CSS設定註解&lt;/a&gt;之後，頁首與頁尾就能正常運作了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-AWdkaJIkkng/YGyTBcWIXtI/AAAAAAAE8LQ/NDywxvr-5IgrcIOYC11ZkNP3_yseoddZwCLcBGAsYHQ/s1600/2021-0406-222504-pgg-rasggg-RasgegggoRL-masoeeuahas.png&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-AWdkaJIkkng/YGyTBcWIXtI/AAAAAAAE8LQ/NDywxvr-5IgrcIOYC11ZkNP3_yseoddZwCLcBGAsYHQ/s450/2021-0406-222504-pgg-rasggg-RasgegggoRL-masoeeuahas.png&quot; title=&quot;2021-0406-222504-pgg-rasggg-RasgegggoRL-masoeeuahas.png&quot; alt=&quot;2021-0406-222504-pgg-rasggg-RasgegggoRL-masoeeuahas.png&quot; width=&quot;450&quot; height=&quot;293&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;然而在Firefox瀏覽器87版中，頁面邊界的設定並不會影響到頁首與頁尾的出現。我不確定這是不是Google Chrome特有的問題，而它在&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=287152&quot; target=&quot;_blank&quot;&gt;2013年已經被提交到chromium的bugs&lt;/a&gt;中，至今仍未獲得改善。&lt;/p&gt;
&lt;h4&gt;為什麼會有頁面邊界0.5公分的設定 / Why do we set the&amp;nbsp;page margin to&amp;nbsp;0.5 cm?&lt;/h4&gt;
&lt;p&gt;話說這個頁面邊界0.5公分的設定到底是從何而來的呢？很可能是來自於我之前取用的&lt;a href=&quot;https://gooyaabitemplates.com/breeze-responsive-fixed-background-blogger-template/&quot; target=&quot;_blank&quot;&gt;Blogger範本Breeze&lt;/a&gt;。關於「布丁布丁吃什麼」範本修改的過程，可以回頭參考&lt;a href=&quot;/2016/04/talk-about-pulipuli-blogs-new-template.html#&quot; target=&quot;_blank&quot;&gt;「布丁布丁吃什麼？」範本改版記錄&lt;/a&gt;一文。&lt;/p&gt;
&lt;p&gt;頁面邊界0.5公分的這個設定，似乎是網路上常見的一種做法。&lt;a href=&quot;https://www.smashingmagazine.com/2011/11/how-to-set-up-a-print-style-sheet/&quot; target=&quot;_blank&quot;&gt;How To Set Up A Print Style Sheet&lt;/a&gt;一文教導大家如何設定網頁的列印版本CSS語法，裡面建議使用頁面邊界0.5公分的設定，而預覽列印的畫面上也看不到頁首與頁尾。不過該文似乎沒有說明頁面邊界與頁首和頁尾之間的關係。&lt;a href=&quot;https://dotblogs.com.tw/duke/2019/12/02/151230&quot; target=&quot;_blank&quot;&gt;詹姆士的筆記本在@Page使用方式&lt;/a&gt;一文中加入了頁面邊界0.5公分的設定，但沒有說明理由。&lt;a href=&quot;https://kakadodo.github.io/2018/03/13/css-media-print-setting/&quot; target=&quot;_blank&quot;&gt;關於 @media print 的二三事..&lt;/a&gt;一文中也有用到頁面邊界0.5公分的設定，但似乎也是參考網路上的寫法，同樣沒有說明理由。&lt;/p&gt;
&lt;p&gt;到底為什麼會有頁面邊界0.5公分的設定呢？也許是因為很多網頁設計師不喜歡瀏覽器自動添加的頁首與頁尾，所以利用頁面邊界0.5公分的設定強制把頁首與頁尾隱藏起來。然而，到底是要強調美觀的統一，還是要讓使用者有自己的選擇權力，這就是一個值得思考的問題了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;這篇文章討論了頁面邊界0.5公分的設定造成列印網頁時無法顯示頁首與頁尾的問題。這到底是一個刻意強制隱藏頁首與頁尾的設定，還是複製別人程式碼的無心錯誤，最後依然不得而知。&lt;/p&gt;
&lt;p&gt;瀏覽器自動添增的頁首與頁尾，也許在網頁設計師的眼中缺乏美感。但對於紙本閱讀的使用者來說，頁首與頁尾提供的列印日期、網址能夠讓人瞭解這份資料的來源，而頁碼則是能夠用於確認現在閱讀的進度。在紙本閱讀時，頁首與頁尾提供的資訊具有不可或缺的重要性。&lt;/p&gt;
&lt;p&gt;作為一位網頁設計師，我們的共同目標應該是讓各式各樣的使用者用自己習慣的方式接收網頁中的資訊。因此，讓閱讀網頁的使用者自行決定是否顯示頁首與頁尾，也許這也是一種站在使用者角度的設計思維。你覺得呢？&lt;/p&gt;
&lt;h3&gt;閒聊「布丁布丁吃什麼？」範本修改 / Talk about blog template modification&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Zzx5IE200O4/YGyTBR7U9oI/AAAAAAAE8LM/vb3H2VVp2Ig0ZnFqHyJkUGf9A0FJeR6lgCLcBGAsYHQ/s1600/2021-04-06_230331-en-res-coco-EE-The-Popular-Script.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Zzx5IE200O4/YGyTBR7U9oI/AAAAAAAE8LM/vb3H2VVp2Ig0ZnFqHyJkUGf9A0FJeR6lgCLcBGAsYHQ/s450/2021-04-06_230331-en-res-coco-EE-The-Popular-Script.png&quot; title=&quot;2021-04-06_230331-en-res-coco-EE-The-Popular-Script.png&quot; alt=&quot;2021-04-06_230331-en-res-coco-EE-The-Popular-Script.png&quot; width=&quot;450&quot; height=&quot;257&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最後來聊聊最近修改「布丁布丁吃什麼？」範本的事情。&lt;/p&gt;
&lt;p&gt;最近需要從Blog列印一些內容的時候，我才發現很久之前設定的列印樣式，在不知不覺的時候已經亂成一團。這個亂成一團的原因，很大部分來自於我之前為了&lt;a href=&quot;https://www.ibest.tw/page01.php&quot; target=&quot;_blank&quot;&gt;響應式網頁設計(Responsive Web Design, RWD)&lt;/a&gt;而調整的版面。列印時的寬度，通常會比用瀏覽器看網頁的寬度還窄。這個結果導致了列印時很容易受到RWD的設定影響。不過實際上列印有列印的考量、RWD有RWD的規劃，兩種設計思維不宜彼此混淆。後來我將RWD在@media的設定上都加上了&lt;a href=&quot;https://www.w3schools.com/cssref/css3_pr_mediaquery.asp&quot; target=&quot;_blank&quot;&gt;@media screen&lt;/a&gt;，這才讓列印版本跟RWD的設定有所區隔。&lt;/p&gt;
&lt;p&gt;總之，如果最近大家打開「布丁布丁吃什麼？」的時候，發現整個網頁都壞掉的話。別驚慌，那只是我在修範本修到一半，或是修到我忘記改回去而已(?)。如果你覺得有什麼問題的話，也可以到&lt;a href=&quot;/2005/12/blogger_113544406852218769.html#comment-editor&quot; target=&quot;_blank&quot;&gt;留言板&lt;/a&gt;跟我反映一下喔。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次關於列印網頁時頁首與頁尾消失的討論就到這裡了。寫到最後，我有個問題想要問問大家：你都習慣用什麼方式閱讀「布丁布丁吃什麼？」呢？&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A.&amp;nbsp;手機：隨身攜帶最方便&lt;/li&gt;
  &lt;li&gt;B.&amp;nbsp;平板：在螢幕大小和攜帶性上取得了平衡，看網頁很舒服&lt;br&gt;&lt;/li&gt;
  &lt;li&gt;C.&amp;nbsp;桌機或筆電：查網頁是為了完成工作，多工視窗才能滿足我的需求&lt;/li&gt;
  &lt;li&gt;D.&amp;nbsp;印出來的列印紙本：眼睛是靈魂之窗，保護眼睛就等於保護了我的靈魂&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在&lt;a href=&quot;http://#comment-editor&quot;&gt;下面的留言處&lt;/a&gt;跟大家分享你的想法。你的意見都是我繼續分享的動力喔！&lt;/p&gt;
&lt;p&gt;如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚，或是將這篇分享到Facebook等社群媒體吧！想在社群媒體追蹤我的話，歡迎到我的Facebook粉絲專頁「&lt;a href=&quot;https://www.facebook.com/pulipuli.blogspot&quot; target=&quot;FB&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;」按個讚喔！&lt;/p&gt;
&lt;p&gt;不知道這篇文章有沒有讓你吃到些有用的東西呢？我是布丁，期待下次見！&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/2787946221549113389/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2021/04/page-margin-setting-causesheaders-and.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/2787946221549113389'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/2787946221549113389'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2021/04/page-margin-setting-causesheaders-and.html' title='為什麼列印網頁時頁首與頁尾消失了？ /  Page Margin Setting causes Headers and Footers to Disappear when Printing'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//lh3.googleusercontent.com/-XwprDZY-VxY/YGyS7_npVeI/AAAAAAAE8LE/3V3XuBef0b8pq1U-GokKWs2ogykSm5HkwCLcBGAsYHQ/s72-c/27-Page_Margin_Setting_causes_Headers_1.jpg" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-7049729736448300057</id><published>2021-03-30T17:20:00.005+08:00</published><updated>2021-03-30T17:20:35.402+08:00</updated><title type='text'>用7-Zip解壓縮含有亂碼檔名的ZIP檔案 / Using 7-Zip to decompress ZIP with given encoding</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-WTNhyImfM70/YGLtNjjYwOI/AAAAAAAE71g/08hcyRvJOhwPaKkGHnypR3YgBecuaBJvQCLcBGAsYHQ/s1600/24-7_Zip_ZIP_Using_7_Zip_to_decompress.jpg&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-WTNhyImfM70/YGLtNjjYwOI/AAAAAAAE71g/08hcyRvJOhwPaKkGHnypR3YgBecuaBJvQCLcBGAsYHQ/s1600/24-7_Zip_ZIP_Using_7_Zip_to_decompress.jpg&quot; title=&quot;24-7_Zip_ZIP_Using_7_Zip_to_decompress.jpg&quot; alt=&quot;24-7_Zip_ZIP_Using_7_Zip_to_decompress.jpg&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;啊囉哈～這裡是不管天氣冷熱都要跟蚊子生死鬥的布丁。今天要來跟大家聊聊壓縮檔的檔名問題。&lt;/p&gt;
&lt;p&gt;華人世界比較常用的壓縮檔格式為&lt;a href=&quot;https://rar.tw/download.html&quot; target=&quot;_blank&quot;&gt;RAR&lt;/a&gt;，不過我個人則是推崇泛用的&lt;a href=&quot;/2017/06/winrarzip-better-file-compression.html&quot; target=&quot;_blank&quot;&gt;傳統壓縮檔格式ZIP&lt;/a&gt;以及壓縮率更好的&lt;a href=&quot;https://www.developershome.com/7-zip/&quot; target=&quot;_blank&quot;&gt;7-Zip&lt;/a&gt;。在正式典藏資料的網站中，ZIP也是許多網站的首選。不過，有時候在為ZIP壓縮檔解壓縮時，&lt;b&gt;
    &lt;font color=&quot;#ff0000&quot;&gt;不是發現裡面沒有檔案，就是檔名變成亂碼或底線。&lt;/font&gt;
  &lt;/b&gt;為什麼會變成這樣呢？&lt;/p&gt;
&lt;p&gt;調查之後才發現，ZIP壓縮檔的檔名出現亂碼時，通常是因為我們現在在用的作業系統跟壓縮者當下的作業系統並不相同的緣故。因此當我使用大五碼的作業系統處理來自日文編碼的ZIP壓縮檔時，解壓縮後的檔案名稱就或變成亂碼。&lt;/p&gt;
&lt;p&gt;那如果我想要解壓縮來自日文編碼的ZIP壓縮檔，又想要維持檔名不要變成亂碼的話，該怎麼做好呢？這篇我會說明如何使用&lt;a href=&quot;https://www.developershome.com/7-zip/&quot; target=&quot;_blank&quot;&gt;7-Zip&lt;/a&gt;的參數「&lt;a href=&quot;https://sevenzip.osdn.jp/chm/cmdline/switches/method.htm&quot; target=&quot;_blank&quot;&gt;cp&lt;/a&gt;」來設定解壓縮時使用的編碼。這樣就能正確將檔案解壓縮、並且避免亂碼出現囉。接下來就讓我們來看看要怎麼做吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;ZIP壓縮檔中的檔名亂碼 / When a character encoding in the ZIP file is incorrect&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-E2QcEzXLZt4/YGLtNR-q4aI/AAAAAAAE71Y/-k7IPS5psLcUVslrLK6CLINQ0QG8SUhPQCLcBGAsYHQ/s1600/2021-0329-232334.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-E2QcEzXLZt4/YGLtNR-q4aI/AAAAAAAE71Y/-k7IPS5psLcUVslrLK6CLINQ0QG8SUhPQCLcBGAsYHQ/s156/2021-0329-232334.png&quot; title=&quot;2021-0329-232334.png&quot; alt=&quot;2021-0329-232334.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先我們來個含有亂碼的ZIP檔案吧。我從已經結束的&lt;a href=&quot;/2017/03/end-of-aquarian-age.html&quot; target=&quot;_blank&quot;&gt;卡牌遊戲水瓶戰記&lt;/a&gt;裡下載了一個卡牌列表。檔案下載連結如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.aquarian-age.org/&quot; target=&quot;_blank&quot;&gt;水瓶戰記官方網站 (日文)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.aquarian-age.org/wordpress/wp-content/uploads/file/ex_style.zip&quot; target=&quot;_blank&quot;&gt;ex_style.zip&lt;/a&gt; (&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2021/03/ex_style.zip&quot; target=&quot;_blank&quot;&gt;GitHub備份&lt;/a&gt;)&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-2SloEadqWOU/YGLtNUByWaI/AAAAAAAE71M/jKyb4fMy2XUKBgJpw786NjV6uZM-K9tJwCLcBGAsYHQ/s1600/2021-0329-231905.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-2SloEadqWOU/YGLtNUByWaI/AAAAAAAE71M/jKyb4fMy2XUKBgJpw786NjV6uZM-K9tJwCLcBGAsYHQ/s450/2021-0329-231905.png&quot; title=&quot;2021-0329-231905.png&quot; alt=&quot;2021-0329-231905.png&quot; width=&quot;450&quot; height=&quot;310.078&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我的環境是Windows 7 64位元。利用&lt;a href=&quot;https://www.developershome.com/7-zip/download.asp&quot; target=&quot;_blank&quot;&gt;7-Zip&lt;/a&gt;&amp;nbsp;19.00版本把ex_style.zip解壓縮後，我們可以得到一個檔案「____.xls」。顯然的，檔案名稱已經變成亂碼了。&lt;/p&gt;
&lt;p&gt;會出現這個問題，是因為ZIP壓縮檔的製作者採用的編碼，跟我現在使用的這臺電腦所採用的編碼並不相同。我們可能會以為Windows都已經採用了&lt;a href=&quot;https://www.wikiwand.com/zh-tw/Unicode&quot; target=&quot;_blank&quot;&gt;Unicode萬國碼&lt;/a&gt;，但實際上製作ZIP檔案時，可能會受到製作軟體與設定的影響，而未必會真的以Unicode壓縮。&lt;/p&gt;
&lt;p&gt;Kuan-Yi Li在「&lt;a href=&quot;https://blog.abysm.org/2016/04/pkzip-filename-mojibake/&quot; target=&quot;_blank&quot;&gt;對抗 ZIP 亂碼檔名大作戰&lt;/a&gt;」一文中，針對Windows、OS X和Linux採用不同工具進行壓縮，比較同語系檔名和異語系檔名之間有沒有出現亂碼的情況。但實驗的內容有點讓人看不太懂，最後的結論是不建議使用ZIP格式。&lt;/p&gt;
&lt;p&gt;但如果你現在手上就是有一個ZIP壓縮檔，而你要讓它解壓縮的時候不要出現亂碼的話，那得怎麼辦好呢？&lt;/p&gt;
&lt;h3&gt;解決方法 / Solutions&lt;/h3&gt;
&lt;p&gt;根據Kuan-Yi Li的建議，在不同平臺上皆有對應的工具，可以幫助你處理ZIP檔案亂碼的問題：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Windows作業系統：&lt;a href=&quot;https://tw.bandisoft.com/bandizip/&quot; target=&quot;_blank&quot;&gt;Bandzip&lt;/a&gt;。有提供免費版本，內含廣告。可參考軟體使用教學的「&lt;a href=&quot;https://blog.xuite.net/yh96301/blog/500845958&quot; target=&quot;_blank&quot;&gt;免費壓縮與解壓縮軟體Bandizip&lt;/a&gt;」跟Err的「&lt;a href=&quot;https://errerrors.blogspot.com/2015/12/blog-post.html&quot; target=&quot;_blank&quot;&gt;解決壓縮檔解壓縮後，簡體字檔名變成亂碼的問題&lt;/a&gt;」。&lt;/li&gt;
  &lt;li&gt;Mac OS作業系統：&lt;a href=&quot;http://www.kekaosx.com/&quot; target=&quot;_blank&quot;&gt;Keka&lt;/a&gt;。可參考瘋先生的「&lt;a href=&quot;https://mrmad.com.tw/keka&quot; target=&quot;_blank&quot;&gt;Keka 中文免費最強大macOS 加密壓縮、解壓軟體，含設定與操作攻略&lt;/a&gt;」教學。&lt;/li&gt;
  &lt;li&gt;Linux作業系統：zip。可參考Sam Tang的「&lt;a href=&quot;https://www.opencli.com/linux/linux-zip-unzip&quot; target=&quot;_blank&quot;&gt;Linux 壓縮及解壓 ZIP 檔&lt;/a&gt;」教學。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除此之外，也有人建議使用pAppLocale將軟體設定為特定語系，這樣就能正常處理該語系的檔案。關於pAppLocale可以看阿榮福利味的「&lt;a href=&quot;https://www.azofreeware.com/2006/12/papplocale.html&quot; target=&quot;_blank&quot;&gt;pAppLocale - 讓簡體中文軟體可以正常顯示&lt;/a&gt;」。愛分享的「&lt;a href=&quot;https://blog.xuite.net/lovesharelove/twblog/126541627&quot; target=&quot;_blank&quot;&gt;解壓縮日文RAR檔的三種方法(劣+正常+快速) 日文檔亂碼&lt;/a&gt;」提供了pAppLocale搭配7-Zip的解壓縮方法，不過處理手續有點複雜。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-uFNs9QzaA-k/YGLtNjfAioI/AAAAAAAE71c/Xyu5-qMJFN09f09txSINVKEVxQaIaqBQgCLcBGAsYHQ/s1600/2021-03-30_013908.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-uFNs9QzaA-k/YGLtNjfAioI/AAAAAAAE71c/Xyu5-qMJFN09f09txSINVKEVxQaIaqBQgCLcBGAsYHQ/s450/2021-03-30_013908.png&quot; title=&quot;2021-03-30_013908.png&quot; alt=&quot;2021-03-30_013908.png&quot; width=&quot;450&quot; height=&quot;202&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://sevenzip.osdn.jp/chm/cmdline/switches/method.htm&quot; target=&quot;_blank&quot;&gt;7-zip日文說明網頁中的壓縮參數說明&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;如果你的電腦本來就有7-Zip，那最簡單的方法，還是使用7-Zip內建的「&lt;a href=&quot;https://sevenzip.osdn.jp/chm/cmdline/switches/method.htm&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;cp&lt;/a&gt;」參數來指定解壓縮時使用的字元編碼，就可以使用跟壓縮者一樣的編碼來解壓縮，檔案名稱也就不會出現亂碼了。&lt;/p&gt;
&lt;p&gt;不過，說明裡面提到了「cp={CodePage}」。這個Code Page是指什麼呢？&lt;/p&gt;
&lt;h3&gt;ZIP的代碼頁 / Code page in ZIP&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-nvOXii7bvUY/YGLtNdkXvBI/AAAAAAAE71U/K82sn96q0MwE8NPAny3Bj4EzBq4yuBIggCLcBGAsYHQ/s1600/2021-03-29_234820.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-nvOXii7bvUY/YGLtNdkXvBI/AAAAAAAE71U/K82sn96q0MwE8NPAny3Bj4EzBq4yuBIggCLcBGAsYHQ/s450/2021-03-29_234820.png&quot; title=&quot;2021-03-29_234820.png&quot; alt=&quot;2021-03-29_234820.png&quot; width=&quot;450&quot; height=&quot;287&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot; target=&quot;_blank&quot;&gt;ZIP File Format Specification&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot; target=&quot;_blank&quot;&gt;ZIP檔案格式規格書&lt;/a&gt;中記載了ZIP語言編碼的細節。首先該文件指出「當檔名和註解欄位都是UTF-8的時候，新的多用途位元標誌(General Purpose Bit Flat)，也就是位於bit 11的語言編碼標誌(Language encoding flag, EFS)可以用來表示該檔名和註解都使用了UTF-8。」後面附錄D的D.2又提到，「如果bit 11沒有設定，則檔名和註解應該符合原始的ZIP字元編碼」。&lt;/p&gt;
&lt;p&gt;這邊指的字元編碼(character encoding)是使用&lt;a href=&quot;https://www.wikiwand.com/zh-tw/%E4%BB%A3%E7%A0%81%E9%A1%B5&quot; target=&quot;_blank&quot;&gt;IBM代碼頁(Code Page)&lt;/a&gt;的規則。這跟網頁中用&amp;lt;meta&amp;gt;標籤指定網頁語系&lt;a href=&quot;http://www.iana.org/assignments/character-sets/character-sets.xhtml&quot; target=&quot;_blank&quot;&gt;Character Sets&lt;/a&gt;的方式不太相同，IBM代碼頁是用數字表示字元編碼。我們常見的代碼頁如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;繁體中文 (Big5，大五碼)：950&lt;/li&gt;
  &lt;li&gt;簡體中文 (GBK)：936&lt;/li&gt;
  &lt;li&gt;簡體中文 (GB18030)：54936&lt;/li&gt;
  &lt;li&gt;日文 (Shift_JIS)：932&lt;/li&gt;
  &lt;li&gt;韓文 (EUC-KR)：949&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他的&lt;a href=&quot;https://www.wikiwand.com/zh-tw/%E4%BB%A3%E7%A0%81%E9%A1%B5&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;IBM代碼頁(Code Page)&lt;/a&gt;可以參考維基百科中的&lt;a href=&quot;https://www.wikiwand.com/en/Code_page#/DOS_code_pages&quot; target=&quot;_blank&quot;&gt;DOS code pages&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://www.aquarian-age.org/wordpress/wp-content/uploads/file/ex_style.zip&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ex_style.zip&lt;/a&gt;的例子中，我們可以得知該ZIP壓縮檔來自日本，表示對方可能使用的是日文編碼，對應的代碼頁為932。接下來我們就可以用7-Zip搭配cp參數來解壓縮囉。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;用7-Zip解壓縮含有日文檔名的ZIP檔 / Decompress ZIP with Japanese character encoding (code page) via 7-Zip&lt;/h2&gt;
&lt;p&gt;我本來是打算使用&lt;a href=&quot;https://portableapps.com/apps/utilities/7-zip_portable&quot; target=&quot;_blank&quot;&gt;7-Zip圖形化介面&lt;/a&gt;來操作，研究了一下赫然發現7-Zip圖形化界面中只有在壓縮的時候才能用參數，但解壓縮的時候卻不行。因此以下操作是在指令列中進行。&lt;/p&gt;
&lt;h3&gt;操作環境與7-Zip檔案下載 / Environment and 7-Zip download&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-3t96pgJ50YQ/YGLtNafzlsI/AAAAAAAE71Q/JE-kHvE1OWYaZemv1KzBknbCF1cVr9ZvwCLcBGAsYHQ/s1600/2021-0330-020358.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-3t96pgJ50YQ/YGLtNafzlsI/AAAAAAAE71Q/JE-kHvE1OWYaZemv1KzBknbCF1cVr9ZvwCLcBGAsYHQ/s450/2021-0330-020358.png&quot; title=&quot;2021-0330-020358.png&quot; alt=&quot;2021-0330-020358.png&quot; width=&quot;450&quot; height=&quot;256&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.developershome.com/7-zip/download.asp&quot; target=&quot;_blank&quot;&gt;7-Zip下載&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;首先我們要取得7-Zip的指令列版本。我的作業系統是Windows 7 64位元，在下載頁面中可以找到僅有指令列版本的「7-Zip 附加程式：命令行介面版本、7z DLL 及 FAR Manager 外掛程式」。下載連結如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.7-zip.org/a/7z1900-extra.7z&quot; target=&quot;_blank&quot;&gt;7z1900-extra.7z&lt;/a&gt; (&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2021/03/7z1900-extra.7z&quot; target=&quot;_blank&quot;&gt;GitHub備份&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;將7-Zip指令列工具解壓縮到一個資料夾後，我們就可以來解壓縮含有日文檔名的資料夾了。&lt;/p&gt;
&lt;h3&gt;用指令列解壓縮 / Depression the ZIP file on the command line&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-ptHhq0SyktU/YGLtQ6-It7I/AAAAAAAE71s/M6HlJ-dIIPMFC9hVl8Wnaf2YtWskmW0DgCLcBGAsYHQ/s1600/2021-03-30_021009.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-ptHhq0SyktU/YGLtQ6-It7I/AAAAAAAE71s/M6HlJ-dIIPMFC9hVl8Wnaf2YtWskmW0DgCLcBGAsYHQ/s421/2021-03-30_021009.png&quot; title=&quot;2021-03-30_021009.png&quot; alt=&quot;2021-03-30_021009.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.aquarian-age.org/wordpress/wp-content/uploads/file/ex_style.zip&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;ex_style.zip&lt;/a&gt;&amp;nbsp;(&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2021/03/ex_style.zip&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;GitHub備份&lt;/a&gt;)&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我們把前面含有日文檔案名稱的壓縮檔擺到7-Zip同一個目錄底下。&lt;/p&gt;
&lt;p&gt;接著請開啟命令提示字元，輸入指令移動到7-Zip目錄底下。如果你不會用cd指令操作指令列的話，可以參考讀樂島的「&lt;a href=&quot;https://readandplay.pixnet.net/blog/post/156379832&quot; target=&quot;_blank&quot;&gt;DOS指令/命令提示字元 簡易使用教學&lt;/a&gt;」。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Tv5I8sxNV3s/YGLtQ_CHBBI/AAAAAAAE710/gBnb4dv0nPEoRlT-qDgR1lv7735L4vIGgCLcBGAsYHQ/s1600/2021-0330-022226.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-Tv5I8sxNV3s/YGLtQ_CHBBI/AAAAAAAE710/gBnb4dv0nPEoRlT-qDgR1lv7735L4vIGgCLcBGAsYHQ/s450/2021-0330-022226.png&quot; title=&quot;2021-0330-022226.png&quot; alt=&quot;2021-0330-022226.png&quot; width=&quot;450&quot; height=&quot;294&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在確保該目錄底下有7-Zip執行檔「7za.exe」跟要解壓縮的ZIP檔案「ex_style.zip」之後，請輸入以下指令：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;dos&quot;&gt;7za.exe&amp;nbsp;x&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;ex_style.zip&lt;/font&gt;&amp;nbsp;-mcp=&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;932&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這串指令中有兩個參數需要注意，我各別用紅字跟藍字標示：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ex_style.zip&lt;/span&gt;：表示要解壓縮的壓縮檔。&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;932&lt;/span&gt;：表示&lt;a href=&quot;https://www.wikiwand.com/en/Code_page#/DOS_code_pages&quot; target=&quot;_blank&quot;&gt;代碼頁&lt;/a&gt;。932為日文(Shift_JIS)的代碼頁。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-WWdRrgvfIxs/YGLtQ57zipI/AAAAAAAE71o/l6VivgPt30MasUqGTZrhBW_H4uH_bnM0gCLcBGAsYHQ/s1600/2021-0330-023242.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-WWdRrgvfIxs/YGLtQ57zipI/AAAAAAAE71o/l6VivgPt30MasUqGTZrhBW_H4uH_bnM0gCLcBGAsYHQ/s421/2021-0330-023242.png&quot; title=&quot;2021-0330-023242.png&quot; alt=&quot;2021-0330-023242.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;成功執行解壓縮之後，該目錄底下就會出現一個新的檔案。檔案名稱為「エキストラスタイル対応カードリスト.xls」，這就是原本解壓縮會出現亂碼檔案的正常檔名。&lt;/p&gt;
&lt;p&gt;到這裡為止，我們就算是大功告成了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;布丁客製化的檔案壓縮工具：AutoIt-Archive-Util / An archive tool built with 7-Zip and AutoIT:&amp;nbsp;AutoIt-Archive-Util&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-KxJJ6lwUy88/YGLtQnjuFTI/AAAAAAAE71k/adbNBKFYnwgZFGlFbZtJ4kAju0-xDl7IQCLcBGAsYHQ/s1600/2021-0330-163904.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-KxJJ6lwUy88/YGLtQnjuFTI/AAAAAAAE71k/adbNBKFYnwgZFGlFbZtJ4kAju0-xDl7IQCLcBGAsYHQ/s450/2021-0330-163904.png&quot; title=&quot;2021-0330-163904.png&quot; alt=&quot;2021-0330-163904.png&quot; width=&quot;450&quot; height=&quot;334&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;儘管如此，要用指令列才能解壓縮的話也太麻煩了吧。所以我把這個功能整合到我之前開發的「&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util&quot; target=&quot;_blank&quot;&gt;AutoIt-Archive-Util&lt;/a&gt;」上了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-CbZ7njt4bUE/YGLtQ-fv66I/AAAAAAAE714/k0OhZoNNhVMX2N-hiTt2wlqeZiefWFO7QCLcBGAsYHQ/s1600/2021-03-30_163349.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//lh3.googleusercontent.com/-CbZ7njt4bUE/YGLtQ-fv66I/AAAAAAAE714/k0OhZoNNhVMX2N-hiTt2wlqeZiefWFO7QCLcBGAsYHQ/s450/2021-03-30_163349.png&quot; title=&quot;2021-03-30_163349.png&quot; alt=&quot;2021-03-30_163349.png&quot; width=&quot;450&quot; height=&quot;358.203&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;要解壓縮檔案的時候，我只要把檔案「傳送到」&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;AutoIt-Archive-Util&lt;/a&gt;中的zip-archive-charset-util.exe。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-jv-FD9zDdSA/YGLtQ2I2_VI/AAAAAAAE71w/7opNdf7UnCE0sLY7Di6e4tNxC_U0TmKDQCLcBGAsYHQ/s1600/2021-03-30_164118.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-jv-FD9zDdSA/YGLtQ2I2_VI/AAAAAAAE71w/7opNdf7UnCE0sLY7Di6e4tNxC_U0TmKDQCLcBGAsYHQ/s259/2021-03-30_164118.png&quot; title=&quot;2021-03-30_164118.png&quot; alt=&quot;2021-03-30_164118.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候可以設定代碼頁(code page)。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-4PsthXBlp7A/YGLtUIiOUaI/AAAAAAAE718/zF84Dz85RKMrLIJpHvykxMfQzuyc79jIgCLcBGAsYHQ/s1600/2021-03-30_164312.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-4PsthXBlp7A/YGLtUIiOUaI/AAAAAAAE718/zF84Dz85RKMrLIJpHvykxMfQzuyc79jIgCLcBGAsYHQ/s450/2021-03-30_164312.png&quot; title=&quot;2021-03-30_164312.png&quot; alt=&quot;2021-03-30_164312.png&quot; width=&quot;450&quot; height=&quot;357&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這樣就能夠順利解壓縮囉。&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;AutoIt-Archive-Util&lt;/a&gt;內建會把原本的壓縮檔刪除，所以ex_style.zip也會被放到資源回收桶裡面。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;AutoIt-Archive-Util&lt;/a&gt;的相關連結如下。如果有人感興趣的話，我之後再寫一篇介紹。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util&quot; target=&quot;_blank&quot;&gt;AutoIt-Archive-Util的GitHub保存庫&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util/archive/refs/heads/master.zip&quot; target=&quot;_blank&quot;&gt;AutoIt-Archive-Util下載&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-ULx5HgOpFlE/YGLtUC25dwI/AAAAAAAE72A/TpyLSuQug1ArgA_-jHx7a-wtBdSrpdwJACLcBGAsYHQ/s1600/1200px-7ziplogo.svg.png&quot;&gt;
    &lt;img src=&quot;//lh3.googleusercontent.com/-ULx5HgOpFlE/YGLtUC25dwI/AAAAAAAE72A/TpyLSuQug1ArgA_-jHx7a-wtBdSrpdwJACLcBGAsYHQ/s450/1200px-7ziplogo.svg.png&quot; title=&quot;1200px-7ziplogo.svg.png&quot; alt=&quot;1200px-7ziplogo.svg.png&quot; width=&quot;450&quot; height=&quot;258&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.wikiwand.com/zh-tw/7-Zip&quot; target=&quot;_blank&quot;&gt;維基百科&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;這篇介紹如何使用7-Zip來處理含有日文檔名的ZIP壓縮檔，並確保用正確的編碼解壓縮。跟其他解壓縮方案相比，7-Zip是常用熟悉的壓縮工具，不需要額外安裝其他軟體。但7-Zip使用參數「&lt;a href=&quot;https://sevenzip.osdn.jp/chm/cmdline/switches/method.htm&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;cp&lt;/a&gt;」解壓縮的方式必須在指令列裡面操作，對一般人來說操作起來不太方便。所以我最後提供了&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;AutoIt-Archive-Util&lt;/a&gt;來解決這個問題。&lt;/p&gt;
&lt;p&gt;事實上，這篇一開始就是為了擴充&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;AutoIt-Archive-Util&lt;/a&gt;的功能而做的功課。本來我還以為要處理亂碼問題需要搭配更多工具，結果沒想到直接使用參數「&lt;a href=&quot;https://sevenzip.osdn.jp/chm/cmdline/switches/method.htm&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;cp&lt;/a&gt;」就完成了，比預想來的簡單。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次使用7-Zip解壓縮含有亂碼檔名ZIP檔案的教學就到這裡了。寫到這裡，我很好奇大家現在偏好使用的壓縮格式是什麼呢？&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A. RAR：因為電腦都內建&lt;a href=&quot;https://rar.tw/download.html&quot; target=&quot;_blank&quot;&gt;WinRAR&lt;/a&gt;，所以我也壓縮成RAR。&lt;/li&gt;
  &lt;li&gt;B. ZIP：誰可以告訴我&lt;a href=&quot;https://www.cna.com.tw/news/firstnews/202003020346.aspx&quot; target=&quot;_blank&quot;&gt;臺灣的郵遞區號&lt;/a&gt;現在是5碼、3+2碼、還是3+3碼？&lt;/li&gt;
  &lt;li&gt;C. 7z：沒有什麼局面是&lt;a href=&quot;https://playhearthstone.com/zh-tw/cards/49184-zilliax/&quot; target=&quot;_blank&quot;&gt;齊里亞斯&lt;/a&gt;無法解決的。如果有，那就來個合體的齊里亞斯。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/7049729736448300057/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2021/03/7-zipzip-using-7-zip-to-decompress-zip.html#comment-form' title='8 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/7049729736448300057'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/7049729736448300057'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2021/03/7-zipzip-using-7-zip-to-decompress-zip.html' title='用7-Zip解壓縮含有亂碼檔名的ZIP檔案 / Using 7-Zip to decompress ZIP with given encoding'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//lh3.googleusercontent.com/-WTNhyImfM70/YGLtNjjYwOI/AAAAAAAE71g/08hcyRvJOhwPaKkGHnypR3YgBecuaBJvQCLcBGAsYHQ/s72-c/24-7_Zip_ZIP_Using_7_Zip_to_decompress.jpg" height="72" width="72"/><thr:total>8</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-7934657487706834011</id><published>2021-03-24T16:40:00.005+08:00</published><updated>2021-03-31T13:17:01.874+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Programming/CSS"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Database"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Java"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/PHP"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Python"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/R"/><title type='text'>2020年臺灣工程師喜愛的程式語言與資料庫竟然跟全球流行不一樣 / The Popular Script Language and Database Technology in Taiwan in 2020</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-nACl5PQvIpc/YFrupAbnMoI/AAAAAAAE7mA/c79EugiYT_cE5_bXcQkYu2moDDwiPwFsQCLcBGAsYHQ/s1600/23-2020_ENG.png&quot; class=&quot;&quot;&gt;
    &lt;img alt=&quot;23-2020_ENG.png&quot; class=&quot;original-size&quot; src=&quot;//lh3.googleusercontent.com/-nACl5PQvIpc/YFrupAbnMoI/AAAAAAAE7mA/c79EugiYT_cE5_bXcQkYu2moDDwiPwFsQCLcBGAsYHQ/s1600/23-2020_ENG.png&quot; title=&quot;23-2020_ENG.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pui Pui大家午安啊，我是在寒冷又溼漉漉的地方裡，期望下雨降在集水區的布丁。在這個寒冷的天氣裡，今天就跟大家聊聊臺灣工程師最受歡迎的程式語言跟資料庫技術吧！&lt;/p&gt;
&lt;p&gt;全世界工程師最後的救星&lt;a href=&quot;https://stackoverflow.com/&quot; target=&quot;_blank&quot;&gt;Stack Overflow&lt;/a&gt;在2020年二月發佈了&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020&quot; target=&quot;_blank&quot;&gt;2020年開發者調查結果&lt;/a&gt;。統計5萬多位工程師最喜歡的程式語言中，&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#most-popular-technologies&quot; target=&quot;_blank&quot;&gt;JavaScript以67.7%名列第一&lt;/a&gt;。年初時&lt;a href=&quot;https://easywebsitetw.com/&quot; target=&quot;_blank&quot;&gt;Easy Website&lt;/a&gt;的站長&lt;a href=&quot;https://easywebsitetw.com/%e9%97%9c%e6%96%bc%e6%88%91/&quot; target=&quot;_blank&quot;&gt;網站哥&lt;/a&gt;以這份開發者調查資料為基礎，將臺灣開發者所流行的程式語言與資料庫繪製成統計圖表，結果竟然跟世界潮流不太一樣。至於差異在哪裡，就讓我們看下去吧。&lt;/p&gt;
&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;h2&gt;資料來源 / Data&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-heABhu1b9VE/YFrupEfHkVI/AAAAAAAE7l8/4JeKi_DWbMcRBl8xdT9NTekZ68-zYzQNwCLcBGAsYHQ/s1600/Stack_Overflow_website_logo.png&quot; class=&quot;&quot;&gt;
    &lt;img alt=&quot;Stack_Overflow_website_logo.png&quot; src=&quot;//lh3.googleusercontent.com/-heABhu1b9VE/YFrupEfHkVI/AAAAAAAE7l8/4JeKi_DWbMcRBl8xdT9NTekZ68-zYzQNwCLcBGAsYHQ/s257/Stack_Overflow_website_logo.png&quot; title=&quot;Stack_Overflow_website_logo.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://stackoverflow.com/&quot; target=&quot;_blank&quot;&gt;Stack Overflow&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;本篇資料是以Stack Overflow的&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020&quot; target=&quot;_blank&quot;&gt;2020年開發者調查(2020 Developer Survey)&lt;/a&gt;結果所進行的分析。Stack Overflow是知名的程式設計領域問答網站。自2008年8月推出後，根據&lt;a href=&quot;https://stackexchange.com/sites&quot; target=&quot;_blank&quot;&gt;StackExchange的網站資訊統計&lt;/a&gt;，到2021年已經有2100萬個問題與1400萬位已經註冊的使用者。Stack Overflow可說是程式設計領域工程師最常用的問答網站。如果在寫程式時遇到了問題，我會先嘗試把程式跳出來的錯誤資訊拿去Google搜尋，而Stack Overflow通常都是搜尋結果排名前面的推薦解答。&lt;/p&gt;
&lt;p&gt;Stack Overflow自2011年起每年都會舉行開發者調查活動，並將調查結果典藏在&lt;a href=&quot;https://insights.stackoverflow.com/survey&quot; target=&quot;_blank&quot;&gt;Stack Overflow年度開發者調查網站(Stack Overflow Annual Developer Survey)&lt;/a&gt;之中。在&lt;a href=&quot;https://stackoverflow.blog/2011/01/11/survey-says/?_ga=2.117055814.1949325673.1616173369-1755882385.1565184885&quot; target=&quot;_blank&quot;&gt;2011年&lt;/a&gt;年初進行2010年的調查時，填答人數僅有2532人。而在&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#developer-profile-educational-attainment-all-respondents&quot; target=&quot;_blank&quot;&gt;2020年&lt;/a&gt;二月的調查中，開發者填答的數量增加到了6萬5千位。根據&lt;a href=&quot;https://evansdata.com/press/viewRelease.php?pressID=278&quot; target=&quot;_blank&quot;&gt;EDC的調查結果&lt;/a&gt;，2019年軟體開發者為2390萬人。由此可知，Stack Overflow的填答結果大概佔了全世界的0.27%。&lt;/p&gt;
&lt;p&gt;作為一位臺灣的程式工程師，&lt;a href=&quot;https://easywebsitetw.com/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Easy Website&lt;/a&gt;的站長&lt;a href=&quot;https://easywebsitetw.com/%e9%97%9c%e6%96%bc%e6%88%91/&quot; target=&quot;_blank&quot;&gt;網站哥&lt;/a&gt;特別關注&lt;a href=&quot;https://insights.stackoverflow.com/survey&quot; target=&quot;_blank&quot;&gt;2020年開發者調查結果&lt;/a&gt;中臺灣工程師喜愛的程式語言與資料庫。他利用Python跟R語言深入分析了亞洲國家華人工程師間最受歡迎的程式語言、過去兩年臺灣最受歡迎的程式語言(2018-2020)、在臺灣使用度最高的資料庫等統計資料，並將之繪製成四張統計圖表。當他跟我分享這份統計結果時，我也覺得非常有趣。在經過他的同意之後，我們就一起來看看臺灣工程師的喜好跟全世界之間到底有什麼不同吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span style=&quot;color: inherit;&quot;&gt;亞洲國家華人工程師間最受歡迎的程式語言 /&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: inherit;&quot;&gt;The most popular language in Asian&amp;nbsp; ethnic Chinese countries&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Eh57E9hmhMY/YFrupNIM26I/AAAAAAAE7mM/7imq2d2iQ14f6-ylwq7afbQ1bYadAfTPwCLcBGAsYHQ/s1600/2021-0322-230143.png&quot; style=&quot;font-weight: 400;&quot; class=&quot;&quot;&gt;&lt;img alt=&quot;2021-0322-230143.png&quot; height=&quot;275.562&quot; src=&quot;//lh3.googleusercontent.com/-Eh57E9hmhMY/YFrupNIM26I/AAAAAAAE7mM/7imq2d2iQ14f6-ylwq7afbQ1bYadAfTPwCLcBGAsYHQ/s450/2021-0322-230143.png&quot; title=&quot;2021-0322-230143.png&quot; width=&quot;450&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;font-weight: 400;&quot;&gt;(資料來源：&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#technology-programming-scripting-and-markup-languages&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Stack Overflow Developer Survey 2020&lt;/a&gt;)&lt;/p&gt;
&lt;p style=&quot;font-weight: 400;&quot;&gt;Stack Overflow的2020年開發者調查中，最值得關注的統計資料是&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#technology-programming-scripting-and-markup-languages&quot; target=&quot;_blank&quot;&gt;全世界最受歡迎的程式語言&lt;/a&gt;。在統計57378位填答者的結果後，排行前五名的程式語言各別是JavaScript、HTML/CSS、SQL、Python與Java。其中JavaScript與HTML/CSS的組合很明顯是為了開發網頁應用的技術，而SQL結構化查詢語言則是相當泛用的程式語言，這三者名列前茅並不令人意外。新興的直譯式程式語言Python和上一世代的編譯式程式語言Java則是位於第四名和第五名，也許這象徵了程式語言世代之間的交替。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-zAdtDR2kXno/YFrupMX50MI/AAAAAAAE7mE/sm1WUstVIdwChbR7LxnvrhDp21TSzWgnQCLcBGAsYHQ/s1600/2._.jpg&quot; class=&quot;&quot;&gt;&lt;img alt=&quot;2._.jpg&quot; height=&quot;300&quot; src=&quot;//lh3.googleusercontent.com/-zAdtDR2kXno/YFrupMX50MI/AAAAAAAE7mE/sm1WUstVIdwChbR7LxnvrhDp21TSzWgnQCLcBGAsYHQ/s450/2._.jpg&quot; title=&quot;2._.jpg&quot; width=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#most-popular-technologies&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Stack Overflow Developer Survey 2020&lt;/a&gt;、&lt;a href=&quot;https://easywebsitetw.com/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Easy Website&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;在瞭解了全世界最受歡迎程式語言的排行後，我們來看看&lt;a href=&quot;https://easywebsitetw.com/%e9%97%9c%e6%96%bc%e6%88%91/&quot; target=&quot;_blank&quot;&gt;網站哥&lt;/a&gt;為華人工程師統計的最受歡迎程式語言排行。華人工程師的所在地區主要是分析中國、香港、日本、馬來西亞、新加坡、韓國與臺灣。上圖可以看到各個地區的華人工程師所喜愛的程式語言之間的差異。&lt;/p&gt;
&lt;p&gt;這七個地區所在位置的華人工程師所喜愛的程式語言，在排名和所佔比例上都十分相似。Java、JavaScript和Python三大程式語言，不僅排行大多為各地區受歡迎程度的前三名，而且所佔比例也相當大，可說是華人工程師的主流。在全世界最受歡迎的JavaScript，在華人工程師中僅是第二受歡迎的程式語言。至於第四名之後的程式語言，在各地區則有很大的不同，而且所佔比例跟前三名相比都有不小的差距。其中僅有馬來西亞的排名分佈跟其他地區有些不同。最受馬來西亞工程師歡迎的程式語言排行前三名為Java、JavaScript跟PHP。其他地區排名第三的Python，在馬來西亞淪落到第五名，落後於排名第四的C#。&lt;/p&gt;
&lt;p&gt;為什麼華人工程師所偏好的程式語言會是Java？而華人工程師所偏好的程式語言與世界潮流偏好的JavaScript之間的不同，又表示什麼意涵呢？從我個人的經驗來推測，這個結果可能暗示著&lt;font color=&quot;#ff0000&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold; text-decoration: underline;&quot;&gt;華人工程師偏好將程式語言視為工作技術，而非用於創新的工具&lt;/span&gt;&lt;/font&gt;。Java這種編譯式語言是上一代許多大型專案偏好的程式語言，也是以前許多學校所教授的課程內容。上一代工程師所開發的專案如果能夠持續穩定地運作，對於後續接手的這一代工程師而言，的確沒有什麼需要特別更換架構的理由。儘管後來因網頁應用而興起的JavaScript、以及與因人工智慧而興起的Python，兩者蔚為軟體界的新寵兒，但由於在工作上繼承了前人的架構，也就繼續使用Java來維護系統，而這可能就是華人工程師偏好Java程式語言而不是JavaScript的可能理由。&lt;/p&gt;
&lt;h3&gt;過去兩年臺灣最受歡迎的程式語言 /&amp;nbsp;The most popular language in Taiwan in 2018 - 2020&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-lWHVuoimvTo/YFrupFheu-I/AAAAAAAE7mI/VtYkG6jAcsAGRppqf7R41rRKZtNw2CAfgCLcBGAsYHQ/s1600/3.__1.jpg&quot; class=&quot;&quot;&gt;
    &lt;img alt=&quot;3._.jpg&quot; height=&quot;301.734&quot; src=&quot;//lh3.googleusercontent.com/-lWHVuoimvTo/YFrupFheu-I/AAAAAAAE7mI/VtYkG6jAcsAGRppqf7R41rRKZtNw2CAfgCLcBGAsYHQ/s450/3.__1.jpg&quot; title=&quot;3._.jpg&quot; width=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: inherit;&quot;&gt;(圖片來源：&lt;/span&gt;&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#most-popular-technologies&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Stack Overflow Developer Survey 2020&lt;/a&gt;&lt;span style=&quot;color: inherit;&quot;&gt;、&lt;/span&gt;&lt;a href=&quot;https://easywebsitetw.com/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Easy Website&lt;/a&gt;&lt;span style=&quot;color: inherit;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在了解華人地區工程師偏好程式語言跟世界潮流之間的差異之後，&lt;a href=&quot;https://easywebsitetw.com/%e9%97%9c%e6%96%bc%e6%88%91/&quot; target=&quot;_blank&quot;&gt;網站哥&lt;/a&gt;將分析的角度從橫向轉到縱向，觀察臺灣工程師所喜好的程式語言中，2018年到2020年之間的差異。圖表的橫軸列出了12個程式語言，縱軸為填答者人數。每個程式語言皆有三個直方圖，個別反應出了2018年、2019年與2020年的填答數量。其中，綠色的2020年的整體分佈，就是前一張圖表中臺灣的部分。&lt;/p&gt;
&lt;p&gt;從比例來看，2018年到2020年排行前三名的程式語言都保持不變，個別是由Java、JavaScript與Python佔據山頭。從填答數量來看，主流的三個程式語言有著不同的趨勢。Java與JavaScript的偏好人數在2018年與2019年較高，但2020年有明顯降低，呈現衰退的趨勢；Python在2018年偏好人數較少，但在2019年和2020年有明顯增加，呈現成長的趨勢。&lt;/p&gt;
&lt;p&gt;根據這張圖表的結果，我整理一下個人的觀點。繼承前面的說法，我認為每種程式語言的偏好會個別反映出工程師對於守舊工作和創新挑戰的取捨。Java反映的是工作上的需求；而Python則反映了人工智慧的新興技術。至於JavaScript嘛，雖然我已經在用Node.js來做資料分析和視覺化處理，但一般工程師還是會認為它的主場是網頁應用上，而網頁應用也是一種維持前人專案架構的工作，因此地位會跟Java類似，偏好JavaScript的工程師也可能是將程式語言視為工作需要的技術。&lt;/p&gt;
&lt;p&gt;我對於JavaScript的看法也可以從PHP和R的歷年趨勢獲得一些佐證。PHP的趨勢與JavaScript類似，兩者都是在2018年與2019年受到較多工程師的喜愛，但在2020年降低。而PHP的主場，毋庸置疑的就是用於網頁開發(為&lt;a href=&quot;https://www.php.net/manual/en/refs.ui.php&quot; target=&quot;_blank&quot;&gt;PHP的GUI Extensions&lt;/a&gt;掬一把眼淚)。另一方面，以統計和資料分析為主場的R語言，一直在學界有著穩固的簇擁者。跟JavaScript的歷年趨勢並不一樣，R語言在2018年到2020年之間變化並不大。儘管R語言在&lt;a href=&quot;https://shiny.rstudio.com/articles/dynamic-ui.html&quot; target=&quot;_blank&quot;&gt;Shiny&lt;/a&gt;這種互動的視覺化上會用到JavaScript，但從兩者歷年趨勢之間的差異來看，JavaScript的定位顯然跟R語言有所不同。換句話說，臺灣工程師並非是以資料分析為目的來使用JavaScript，很可能還是將JavaScript用於網頁開發的應用上。&lt;/p&gt;
&lt;p&gt;綜合以上觀點來看，從2018年到2020年之中，主導傳統專案的程式語言Java和網頁應用相關的JavaScript與PHP的臺灣工程師逐漸降低，而以人工智慧和資料分析為主的Python則逐漸增加。當然，我這種個人觀點的劃分並不精確，畢竟Python也是可以作為網頁後端伺服器、而JavaScript也能拿來作資料分析與人工智慧(例如&lt;a href=&quot;https://www.tensorflow.org/js?hl=zh-tw&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;TensorFlow.js&lt;/a&gt;)。不過從大方向來看，仍然可以察覺臺灣的軟體工程界正邁向世代交替的路上。我也期待Python這種直譯式、具有便捷軟體包管理系統的程式語言能夠成為主流，讓「&lt;a href=&quot;https://www.electronicdesign.com/technologies/embedded-revolution/article/21772079/write-once-debug-everywhere&quot; target=&quot;_blank&quot;&gt;Write Once, Debug Everywhere&lt;/a&gt;」的Java早日退場吧(是的，&lt;a href=&quot;/2019/10/weka-practice-data-mining-with-weka.html&quot; target=&quot;_blank&quot;&gt;Weka&lt;/a&gt;、&lt;a href=&quot;/2018/01/cortana-discovery-knowledge-in-your.html&quot; target=&quot;_blank&quot;&gt;Cortona&lt;/a&gt;跟&lt;a href=&quot;/2011/05/dspace-dlll.html&quot; target=&quot;_blank&quot;&gt;DSpace&lt;/a&gt;，你們還是早點安息吧)。&lt;/p&gt;
&lt;p&gt;不過話說回來，這張圖表仍然有兩點改善的空間。一是縱軸的單位應該在圖上標示，二是最好是用當年的百分比來作為縱軸的單位。由於每年的填答人數總數都不盡相同，如果單純用填答人數來做歷年比較的話，只能反映出單一程式語言在不同年之間的差異。但如果比較的單位是百分比，那就可以看到程式語言之間的歷年趨勢變化，在解釋上比較有意義。&lt;/p&gt;
&lt;h2&gt;在台灣使用度最高的資料庫&amp;nbsp;/ The most popular database in Taiwan&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-kD-4clyIcL8/YFrupHhx0wI/AAAAAAAE7l4/9-e3LSBpQcIAp-gb13-J5aZ425lRi_K-ACLcBGAsYHQ/s1600/2021-0323-170556.png&quot; class=&quot;&quot;&gt;
    &lt;img alt=&quot;2021-0323-170556.png&quot; height=&quot;450&quot; src=&quot;//lh3.googleusercontent.com/-kD-4clyIcL8/YFrupHhx0wI/AAAAAAAE7l4/9-e3LSBpQcIAp-gb13-J5aZ425lRi_K-ACLcBGAsYHQ/s450/2021-0323-170556.png&quot; title=&quot;2021-0323-170556.png&quot; width=&quot;375&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(資料來源：&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#technology-databases&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Stack Overflow Developer Survey 2020&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;看完了臺灣工程師喜歡的程式語言排行後，讓我們來看看資料庫的部分。上圖是Stack Overflow 2020年開發者調查中&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#technology-databases&quot; target=&quot;_blank&quot;&gt;最受歡迎的資料庫排行&lt;/a&gt;，排行前三名的資料庫各別是海豚MySQL、大象PostgreSQL、&amp;nbsp;網子Microsoft SQL Server。這三個資料庫都是發展成熟的關聯式資料庫，而新形態NoSQL資料庫並沒有對資料庫技術帶來革命性的變革，MongoDB和Redis僅排名在第五名和第六名，甚至不如因行動裝置興起而重獲重視的SQLite。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-xhbsH0nxiQw/YFruwR-CopI/AAAAAAAE7mc/kyXlyqb2eWU9Ehg73hyZEduoOmiSrQOLACLcBGAsYHQ/s1600/4._.jpg&quot; class=&quot;&quot;&gt;&lt;img alt=&quot;4._.jpg&quot; height=&quot;300&quot; src=&quot;//lh3.googleusercontent.com/-xhbsH0nxiQw/YFruwR-CopI/AAAAAAAE7mc/kyXlyqb2eWU9Ehg73hyZEduoOmiSrQOLACLcBGAsYHQ/s450/4._.jpg&quot; title=&quot;4._.jpg&quot; width=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#most-popular-technologies&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Stack Overflow Developer Survey 2020&lt;/a&gt;&lt;span style=&quot;color: inherit;&quot;&gt;、&lt;/span&gt;&lt;a href=&quot;https://easywebsitetw.com/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Easy Website&lt;/a&gt;&lt;span style=&quot;color: inherit;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同樣地，&lt;a href=&quot;https://easywebsitetw.com/%e9%97%9c%e6%96%bc%e6%88%91/&quot; target=&quot;_blank&quot;&gt;網站哥&lt;/a&gt;也將焦點集中到臺灣工程師上，製作了一份臺灣工程師使用度最高的資料庫排行。該排行中最受歡迎的資料庫前三名各別是MySQL、MongoDB和Microsoft SQL Server。全球第二受歡迎的資料庫PostgreSQL，在臺灣工程師的受歡迎程度僅有第四名。&lt;/p&gt;
&lt;h3&gt;關聯式資料庫、非關聯式資料庫、新型資料庫 / RDBM, NoSQL, and New SQL&lt;/h3&gt;
&lt;p&gt;這個結果令我相當意外。以MongoDB為首的NoSQL的確在臺灣有過一陣風潮，不僅許多相關書籍如雨後春筍般的出版，學界也因其容易架設、使用的特性而開設了許多相關課程。不過我個人對MongoDB的涉獵並不多，對於MongoDB在臺灣工程師之中相當受到歡迎的理由，仍需要更多的觀察。&lt;/p&gt;
&lt;p&gt;我在資料庫技術的選擇上比較保守。在NoSQL概念興起的時候，我並不是直接採用MongoDB這種新型技術，而是選擇使用&lt;a href=&quot;https://redbeanphp.com/index.php&quot; target=&quot;_blank&quot;&gt;RedBeanPHP&lt;/a&gt;或&lt;a href=&quot;https://sequelize.org/&quot; target=&quot;_blank&quot;&gt;Sequelize&lt;/a&gt;這種&lt;a href=&quot;https://www.tutorialspoint.com/Object-relational-Data-Model&quot; target=&quot;_blank&quot;&gt;物件關聯模型框架(Object-Relational Model, ORM)&lt;/a&gt;，來將原本設計在資料庫的邏輯全部轉移到程式語言端。在程式開發的過程中我會大量使用ORM來建立、修改、刪除物件，而有資料分析需求時再回到SQL語法來進行查詢。因此對我來說，實際操作大多面對的是高層的ORM。至於底層資料庫的選擇上，只要挑一個ORM能夠支援的資料庫即可。在搭配ORM的情況下，我在小型專案上常使用SQLite，當資料量變多時再切換到PostgreSQL。通常ORM都具備在不同資料庫之間遷移的功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-i_-ulBu2Q1M/YFruwSlqxOI/AAAAAAAE7mk/63C8f_fvHNMWcA_jn2NM43Qxi_x5EhKkACLcBGAsYHQ/s1600/0_SjaSaU5YPd8u0Mr8.jpg&quot; class=&quot;&quot;&gt;&lt;img alt=&quot;0_SjaSaU5YPd8u0Mr8.jpg&quot; height=&quot;247.469&quot; src=&quot;//lh3.googleusercontent.com/-i_-ulBu2Q1M/YFruwSlqxOI/AAAAAAAE7mk/63C8f_fvHNMWcA_jn2NM43Qxi_x5EhKkACLcBGAsYHQ/s450/0_SjaSaU5YPd8u0Mr8.jpg&quot; title=&quot;0_SjaSaU5YPd8u0Mr8.jpg&quot; width=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://medium.com/rabiprasadpadhy/google-spanner-a-newsql-journey-or-beginning-of-the-end-of-the-nosql-era-3785be8e5c38&quot; target=&quot;_blank&quot;&gt;Google Spanner:A NewSQL Journey or Beginning of the End of the NoSQL Era&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;除了已經廣為人知的關聯式資料庫和NoSQL資料庫技術之外，我最近關注的是新興的NewSQL技術。NewSQL的特色是結合了關聯式資料庫經典的ACID穩定性，同時具備NoSQL的橫向延展性。有興趣的朋友可以看看&lt;a href=&quot;https://softwareengineeringdaily.com/2019/02/24/what-is-new-about-newsql/&quot; target=&quot;_blank&quot;&gt;Gokhan Simsek&lt;/a&gt;的介紹。不過在&lt;a href=&quot;https://easywebsitetw.com/%e9%97%9c%e6%96%bc%e6%88%91/&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;網站哥&lt;/a&gt;所製作的排行榜中，屬於NewSQL的技術似乎僅有Microsoft Azure下的&lt;a href=&quot;https://docs.microsoft.com/zh-tw/azure/cosmos-db/introduction&quot; target=&quot;_blank&quot;&gt;Cosmos DB&lt;/a&gt;入榜。這部份我還瞭解的不夠多，請求高人在下面的留言區給我指教。&lt;/p&gt;
&lt;h3&gt;SQLite其實比大家想象中的更好用 / The reasons to use SQLite&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-Up3_qhKTOuY/YFruwQVekfI/AAAAAAAE7mg/4hH6vpc04h0sm2CPgKcZbkuarxST3u6mQCLcBGAsYHQ/s1600/sqlite370_banner.gif&quot; class=&quot;&quot;&gt;
    &lt;img alt=&quot;sqlite370_banner.gif&quot; src=&quot;//lh3.googleusercontent.com/-Up3_qhKTOuY/YFruwQVekfI/AAAAAAAE7mg/4hH6vpc04h0sm2CPgKcZbkuarxST3u6mQCLcBGAsYHQ/s220/sqlite370_banner.gif&quot; title=&quot;sqlite370_banner.gif&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.sqlite.org/index.html&quot; target=&quot;_blank&quot;&gt;SQLite&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;另一個令我意外的一點是SQLite在全球和臺灣排行之間的差異。SQL在全球排行到了第四名，但在臺灣則相對不受歡迎。在很多臺灣工程師的眼中，SQLite只能用於小型專案，無法用於需要多人同時操作的其他應用場景，特別是網頁應用上。但其實很多人並沒有意識到SQLite在APP開發、個人資料分析以及教學上的實用價值。&lt;/p&gt;
&lt;p&gt;隨著智慧型手機的興起，有些小型APP的開發上可以選擇在本機端以SQLite儲存資料。&lt;a href=&quot;https://www.w3.org/TR/webdatabase/&quot; target=&quot;_blank&quot;&gt;Web SQL Database&lt;/a&gt;也是用SQLite作為資料庫技術，讓網頁開發者能用SQL語法存取結構複雜的資料。&lt;/p&gt;
&lt;p&gt;另一方面，SQLite在許多中小型研究專案的資料分析中也非常實用。我常常聽到研究者在抱怨「Excel沒辦法容納我要分析的資料」，或是在分析大量資料時用來儲存資料的格式，卻是使用純文字檔案CSV格式(而且&lt;a href=&quot;/2016/12/utf-8notepad-how-to-convert-plain-text.html&quot; target=&quot;_blank&quot;&gt;編碼通常都有問題&lt;/a&gt;)。&lt;font color=&quot;#ff0000&quot;&gt;&lt;u&gt;&lt;b&gt;面對個人的資料分析問題，我一率推薦SQLite。&lt;/b&gt;&lt;/u&gt;&lt;/font&gt;將資料儲存成SQLite之後，不僅資料的儲存方式統一、&lt;a href=&quot;https://stackoverflow.com/a/10824421/6645399&quot; target=&quot;_blank&quot;&gt;儲存成二進位檔案也比純文字檔案節省空間&lt;/a&gt;，而且還能夠用SQL語法調用資料，大幅度提升分析的效率。&lt;/p&gt;
&lt;p&gt;最後，在教學上，SQLite可說是架設起來最簡單的關聯式資料庫，同時也支援大部分標準的SQL語法，正是學習SQL程式語言的最佳起點。我們可以輕易找到一些具有圖形化操作界面的工具來建立和管理SQLite資料庫。在Windows作業系統中，我最常用的就是&lt;a href=&quot;https://portableapps.com/apps/development/sqlite_database_browser_portable&quot; target=&quot;_blank&quot;&gt;DB Browser for SQLite Portable&lt;/a&gt;。不需安裝，開箱即用。當其他課程還在安裝MySQL與PHP的組合、或是為了Microsoft Access不同版本而苦惱時，你已經可以用SQL語法來為SQLite資料庫建立table了。&lt;/p&gt;
&lt;p&gt;麻雀雖小，五臟俱全，這正是SQLite的最佳寫照。希望上述這些SQLite的優點，可以讓大家對SQLite重新改觀。&lt;/p&gt;
&lt;h3&gt;如何改善這張直方圖 /&amp;nbsp;Suggestions to improve the chart&lt;/h3&gt;
&lt;p&gt;最後來說說&lt;a href=&quot;https://easywebsitetw.com/%e9%97%9c%e6%96%bc%e6%88%91/&quot; target=&quot;_blank&quot;&gt;網站哥&lt;/a&gt;這張圖表的改善空間。除了縱軸應標明單位之外，也許可以將橫軸的資料庫順序依照回應人數多寡遞減排序，讓讀者能夠迅速瞭解資料庫排行。此外，由於資料庫種類眾多，導致直方圖的顏色多有重複，最右邊的橘色直方圖甚至已經超出了右邊圖例的說明範圍而消失。而且在資料清理上也有可以改進的空間。圖例中「Amazon DynamoDB」與「DynamoDB」這兩項似乎是相同的資料庫技術，在分析時應予以合併。&lt;/p&gt;
&lt;p&gt;遇到這種項目太多的直方圖，我們可以選擇僅呈現填答人數較多的前10名項目，最後一項歸類到其他。另一個方法是將資料庫技術進行分組比較。舉例來說，我們可以把資料庫技術區分為RDBM、NoSQL、NewSQL三組，先比較三組整體的差異，再看各組之中不同資料庫技術的差異。由於這三種資料庫類型的應用場景都有些許不同，分組比較會比混在一起來看還要清楚得多。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / Conclusion&lt;/h2&gt;
&lt;p&gt;本篇是以Stack Overflow的&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#most-popular-technologies&quot; target=&quot;_blank&quot;&gt;2020年開發者調查&lt;/a&gt;與&lt;a href=&quot;https://easywebsitetw.com/%e9%97%9c%e6%96%bc%e6%88%91/&quot; target=&quot;_blank&quot;&gt;網站哥&lt;/a&gt;整理的統計圖表來說明2020年臺灣工程師喜歡的程式語言與資料庫技術，再加上我的一些個人觀點。當然，我知道自己的所知有限，這些解讀可能存在相當程度的誤解。如果大家有什麼看法，歡迎在下方留言區一起討論。&lt;/p&gt;
&lt;h3&gt;調查結果的價值 /&amp;nbsp;The value of survey results&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-b_8ehtKQwu8/YFruwYataYI/AAAAAAAE7mY/gI6CwmraAWI2XqjJXGhoHuNkpb7jW6hCgCLcBGAsYHQ/s1600/2021-0323-035719.png&quot; class=&quot;&quot;&gt;&lt;img alt=&quot;2021-0323-035719.png&quot; height=&quot;289.172&quot; src=&quot;//lh3.googleusercontent.com/-b_8ehtKQwu8/YFruwYataYI/AAAAAAAE7mY/gI6CwmraAWI2XqjJXGhoHuNkpb7jW6hCgCLcBGAsYHQ/s450/2021-0323-035719.png&quot; title=&quot;2021-0323-035719.png&quot; width=&quot;450&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#most-popular-technologies&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Stack Overflow Developer Survey 2020&lt;/a&gt;&lt;span style=&quot;color: inherit;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;總結來說，Stack Overflow的2020年開發者調查所統計的全世界軟體工程師趨勢，對於開發者、求職者與教育界可各別帶來不同的啟發。&lt;/p&gt;
&lt;p&gt;對於開發者來說，這些主流的技術可能是開發專案選擇程式語言、框架、資料庫時可以作為參考的依據。選擇主流的技術，表示較容易找到熟悉該技術的相關人材，讓專案有比較高的機率能夠順利進行。同時，開發者也可從主流技術中學習新興的技術，確保自己的技術水準能夠與時俱進。&lt;/p&gt;
&lt;p&gt;對於求職者來說，主流技術是選擇學習目標的一個很好的方向。主流技術反映的是大部分工作所需要的技能，而且通常該技術的學習資源也會相對較為豐富。選定一個合適的學習目標，能夠有效提升學習效率，並早日找到理想的工作。&lt;/p&gt;
&lt;p&gt;對於教育界來說，更是應該將主流技術納入課程安排。雖然「程式教學」這門科目在近年來逐漸獲得重視，但仍有許多教師僅是以自己已知的技術進行教學，往往跟世界潮流脫節。當然，為了備課還要學習新的技術，的確是一件很辛苦的事情，我能夠體會教師的辛苦。不過將最新的知識帶給學生這件事情本來就是教師的職責，只能期許老師們加油囉。&lt;/p&gt;
&lt;h3&gt;關於Easy Website / About Easy Website&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//lh3.googleusercontent.com/-6BoLxDxHco0/YFruwV97DmI/AAAAAAAE7mU/OBVm4m_iRYYFtZy9hlDH2eNIeHTJ92cYgCLcBGAsYHQ/s1600/2021-0323-035559.png&quot; class=&quot;&quot;&gt;
    &lt;img alt=&quot;2021-0323-035559.png&quot; height=&quot;279&quot; src=&quot;//lh3.googleusercontent.com/-6BoLxDxHco0/YFruwV97DmI/AAAAAAAE7mU/OBVm4m_iRYYFtZy9hlDH2eNIeHTJ92cYgCLcBGAsYHQ/s450/2021-0323-035559.png&quot; title=&quot;2021-0323-035559.png&quot; width=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://easywebsitetw.com/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Easy Website&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;最後來講講前面三張圖表的製作者&lt;a href=&quot;https://easywebsitetw.com/%e9%97%9c%e6%96%bc%e6%88%91/&quot; target=&quot;_blank&quot;&gt;網站哥&lt;/a&gt;主推的&lt;a href=&quot;https://easywebsitetw.com/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Easy Website&lt;/a&gt;。該網站主要是如何架設網站的教學，並介紹了多個架站平臺，包括Webnode、Wix、Weebly、Jimdo、SimpleSite，並分析這些平臺的優缺點。未來網站哥可能還會加入關於程式開發(網站哥稱之為「編碼」，但這個詞蠻容易造成混淆)與行銷的教學文章。如果對網站架設感興趣的朋友，不妨關注一下&lt;a href=&quot;https://easywebsitetw.com/&quot; target=&quot;_blank&quot;&gt;Easy Website&lt;/a&gt;的發展。
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次從Stack Overflow的2020年開發者調查來看臺灣工程師喜愛的程式語言與資料庫的討論就到這裡了。在這邊我也來做個小小調查：如果你也是一位軟體工程師，那麼這些主流的程式語言中，你知道那些語言呢？&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A. Java：&lt;a href=&quot;https://game.udn.com/game/story/10451/3671477&quot; target=&quot;_blank&quot;&gt;經典永不退流行&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;B. JavaScript：我要強調它不是Java&lt;/li&gt;
  &lt;li&gt;C. Python：喜劇我只承認&lt;a href=&quot;https://www.wikiwand.com/zh-tw/%E8%92%99%E6%8F%90%C2%B7%E6%B4%BE%E6%A3%AE&quot; target=&quot;_blank&quot;&gt;Monty Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;D.&amp;nbsp;其他：留言跟大家分享吧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/7934657487706834011/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2021/03/2020-popular-script-language-and.html#comment-form' title='2 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/7934657487706834011'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/7934657487706834011'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2021/03/2020-popular-script-language-and.html' title='2020年臺灣工程師喜愛的程式語言與資料庫竟然跟全球流行不一樣 / The Popular Script Language and Database Technology in Taiwan in 2020'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//lh3.googleusercontent.com/-nACl5PQvIpc/YFrupAbnMoI/AAAAAAAE7mA/c79EugiYT_cE5_bXcQkYu2moDDwiPwFsQCLcBGAsYHQ/s72-c/23-2020_ENG.png" height="72" width="72"/><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-6308235157754456465</id><published>2020-09-09T19:04:00.004+08:00</published><updated>2020-09-10T15:52:25.251+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="PHP"/><category scheme="http://www.blogger.com/atom/ns#" term="Programing/PHP"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="程式語言/JavaScript"/><title type='text'>如何從句子中的單字搜尋詞典中符合的詞彙？ / How to search for the matching terms in the dictionary from a word in the sentence?</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-rOC-kQBHml8/X1i2DH28-hI/AAAAAAAExRM/FfGADHjcuuwvkm4cul4LskMNPvX6XkQSQCLcBGAsYHQ/s1280/21-How_to_search_for_the_matching_terms.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-rOC-kQBHml8/X1i2DH28-hI/AAAAAAAExRM/FfGADHjcuuwvkm4cul4LskMNPvX6XkQSQCLcBGAsYHQ/s1280/21-How_to_search_for_the_matching_terms.png&quot; title=&quot;21-How_to_search_for_the_matching_terms.png&quot; alt=&quot;21-How_to_search_for_the_matching_terms.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果我想要以一個字搜尋字典裡面有的詞彙，而這個詞彙又需要符合該字在句子構成的詞彙時，要怎麼做呢？舉例來說，我想在「清晨時去游泳池」這個句子裡，用「泳」來找出「游泳池」、「泳池」、「游泳」，但要排除掉「晨泳」、「泳褲」等詞彙。我整理了一套搜尋演算法來實作這個目標，這套搜尋演算法包括了過濾出現字、過濾相連順序、過濾相符詞彙、排序詞彙長度、排序錨點字位置這五個步驟。以下我將以JavaScript程式碼來講解各步驟的做法，最後附上JavaScript跟PHP兩種版本的實作程式碼。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;問題陳述 / Problem&lt;/h2&gt;
&lt;h3&gt;輸入 / Input&lt;/h3&gt;
&lt;p&gt;現在我們有一個從句子的其中一個字來搜尋詞典的需求。在這個例子中輸入的參數有三個：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;句子 (sentence)：「清晨很想去游一下，到了游泳池，才發現沒帶泳褲。」資料類型為字串&lt;/li&gt;
  &lt;li&gt;句子中欲搜尋的一個字的位置(在這裡稱為錨點字之位置) (anchorPosition)：「12」 (該位置對應的字是「泳」)，資料類型為整數&lt;/li&gt;
  &lt;li&gt;詞典中符合該字的詞彙列表 (dictTerms)：目前已經從資料庫中找出對應了「泳」的詞彙，資料類型為陣列，詞彙如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;table table-bordered&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;編號&lt;/td&gt;
      &lt;td&gt;詞彙&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;晨&lt;font color=&quot;#ff0000&quot;&gt;泳&lt;/font&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;游&lt;font color=&quot;#ff0000&quot;&gt;泳&lt;/font&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;游&lt;font color=&quot;#ff0000&quot;&gt;泳&lt;/font&gt;池&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;
        &lt;font color=&quot;#ff0000&quot;&gt;泳&lt;/font&gt;池游
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;
        &lt;font color=&quot;#ff0000&quot;&gt;泳&lt;/font&gt;池
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;
        &lt;font color=&quot;#ff0000&quot;&gt;泳&lt;/font&gt;褲
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;
        &lt;font color=&quot;#ff0000&quot;&gt;泳&lt;/font&gt;客
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;預期輸出 / Output&lt;/h3&gt;
&lt;p&gt;我們希望透過以上三個輸入參數，找出最符合句子中出現的詞彙，並依照詞彙長度遞減、錨點字位置遞增的順序排序，最後結果應該如下：&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;table table-bordered&quot; style=&quot;background-color: rgb(255, 255, 255); width: 668px;&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;編號&lt;/td&gt;
      &lt;td&gt;詞彙&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;游&lt;font color=&quot;#ff0000&quot;&gt;泳&lt;/font&gt;池&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;
        &lt;font color=&quot;#ff0000&quot;&gt;泳&lt;/font&gt;池&lt;br&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;游&lt;font color=&quot;#ff0000&quot;&gt;泳&lt;/font&gt;&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;實作程式碼 / Codes&lt;/h3&gt;
&lt;p&gt;這要怎麼做呢？&lt;/p&gt;
&lt;p&gt;我將這套搜尋演算法寫成JavaScript與PHP兩種版本，都放在GitHub上可供參考：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2020/09/search-dictionary-by-word-in-sentence.html&quot; target=&quot;_blank&quot;&gt;JavaScript版本&lt;/a&gt;：你可以直接用瀏覽器開啟來測試&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2020/09/search-dictionary-by-word-in-sentence.php&quot; target=&quot;_blank&quot;&gt;PHP版本&lt;/a&gt;：你可以在&lt;a href=&quot;https://sandbox.onlinephpfunctions.com/&quot; target=&quot;_blank&quot;&gt;PHP Sandbox&lt;/a&gt;測試&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下我們就用JavaScript版本來看看整個演算法要怎麼運作吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;演算法流程 /&amp;nbsp;Algorithm&lt;/h2&gt;
&lt;p&gt;演算法的大致上順序如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;searchDictionaryByWordInSentence(sentence, anchorPosition, dictTerms)：進行以句子中的單字搜尋字典詞彙&lt;ul&gt;
      &lt;li&gt;filterByOccurs 詞彙的每個字都得要出現在句子中&lt;/li&gt;
      &lt;li&gt;filterBySequence 詞彙每個字在句子中的位置，必須是連續出現&lt;/li&gt;
      &lt;li&gt;filterTermSequence 詞彙每個字在句子中的連續位置所組成的字，必須和詞彙相同&lt;/li&gt;
      &lt;li&gt;sortTerms 詞彙排序&lt;ul&gt;
          &lt;li&gt;如果詞彙長度不同，較長的詞彙排序較前&lt;/li&gt;
          &lt;li&gt;如果詞彙長度相同，錨點字位置在詞彙中出現的位置較前者，排序較前&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下我不講解每個函式內部的運作細節，主要是展現資料在每個階段的變化，讓大家瞭解一下整個演算法是怎麽實際運作的吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;主要流程 / Main&lt;/h2&gt;
&lt;p&gt;撇除前面的函式宣告之外，下面是主要執行的流程：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//&amp;nbsp;輸入句子&lt;br&gt;let&amp;nbsp;sentence&amp;nbsp;=&amp;nbsp;&quot;清晨很想去游一下，到了游泳池，才發現沒帶泳褲。&quot;&lt;br&gt;&lt;br&gt;//&amp;nbsp;輸入錨點字的位置&lt;br&gt;let&amp;nbsp;anchorPosition&amp;nbsp;=&amp;nbsp;12&amp;nbsp;//&amp;nbsp;泳&lt;br&gt;&lt;br&gt;//&amp;nbsp;輸入詞彙&lt;br&gt;let&amp;nbsp;dictTerms&amp;nbsp;=&amp;nbsp;[&lt;br&gt;&amp;nbsp;&amp;nbsp;&quot;晨泳&quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&quot;游泳&quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&quot;游泳池&quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&quot;泳池游&quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&quot;泳池&quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&quot;泳褲&quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&quot;泳客&quot;&lt;br&gt;]&lt;br&gt;&lt;br&gt;//&amp;nbsp;開始執行&lt;br&gt;let&amp;nbsp;sortedFilterTerms&amp;nbsp;=&amp;nbsp;searchDictionaryByWordInSentence(sentence,&amp;nbsp;anchorPosition,&amp;nbsp;dictTerms)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最後得到的sortedFilterTerms就是我們要的結果。&lt;/p&gt;
&lt;p&gt;接下來讓我們來看看searchDictionaryByWordInSentence()這隻程式在做什麼吧。&lt;/p&gt;
&lt;h2&gt;以句子中的單字搜尋字典詞彙 searchDictionaryByWordInSentence() / Search for the matching terms in the dictionary from a word in the sentence&lt;/h2&gt;
&lt;p&gt;該程式做的事情大多都會對應到之前宣告的函式，讓我們一個一個來看看。&lt;/p&gt;
&lt;h3&gt;將句子轉換成反向索引典 buildInvertedIndex() / Convert sentence into inverted index&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;let&amp;nbsp;sentenceIndex&amp;nbsp;=&amp;nbsp;buildInvertedIndex(sentence)&amp;nbsp;//&amp;nbsp;將句子轉換成反向索引典&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在這一步中，會將輸入句子「清晨很想去游一下，到了游泳池，才發現沒帶泳褲。」轉換成反向索引典，這是一個JSON關聯陣列，結果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;{&lt;br&gt;&amp;nbsp;&amp;nbsp;。:&amp;nbsp;[22],&lt;br&gt;&amp;nbsp;&amp;nbsp;一:&amp;nbsp;[6],&lt;br&gt;&amp;nbsp;&amp;nbsp;下:&amp;nbsp;[7],&lt;br&gt;&amp;nbsp;&amp;nbsp;了:&amp;nbsp;[10],&lt;br&gt;&amp;nbsp;&amp;nbsp;到:&amp;nbsp;[9],&lt;br&gt;&amp;nbsp;&amp;nbsp;去:&amp;nbsp;[4],&lt;br&gt;&amp;nbsp;&amp;nbsp;帶:&amp;nbsp;[19],&lt;br&gt;&amp;nbsp;&amp;nbsp;很:&amp;nbsp;[2],&lt;br&gt;&amp;nbsp;&amp;nbsp;想:&amp;nbsp;[3],&lt;br&gt;&amp;nbsp;&amp;nbsp;才:&amp;nbsp;[15],&lt;br&gt;&amp;nbsp;&amp;nbsp;晨:&amp;nbsp;[1],&lt;br&gt;&amp;nbsp;&amp;nbsp;池:&amp;nbsp;[13],&lt;br&gt;&amp;nbsp;&amp;nbsp;沒:&amp;nbsp;[18],&lt;br&gt;&amp;nbsp;&amp;nbsp;泳:&amp;nbsp;[12,&amp;nbsp;20],&lt;br&gt;&amp;nbsp;&amp;nbsp;清:&amp;nbsp;[0],&lt;br&gt;&amp;nbsp;&amp;nbsp;游:&amp;nbsp;[5,&amp;nbsp;11],&lt;br&gt;&amp;nbsp;&amp;nbsp;現:&amp;nbsp;[17],&lt;br&gt;&amp;nbsp;&amp;nbsp;發:&amp;nbsp;[16],&lt;br&gt;&amp;nbsp;&amp;nbsp;褲:&amp;nbsp;[21]&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;反向索引典將根據字來記錄字在句子中出現的位置。例如「清」是句子中的第一個字，編號是0。「泳」則在句子中出現了兩次，各別是在「12」跟「20」這兩個位置。&lt;/p&gt;
&lt;h3&gt;將詞彙轉換成二維詞彙表格 buildTermsTable()&amp;nbsp;/ Convert terms into table&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;let&amp;nbsp;termsTable&amp;nbsp;=&amp;nbsp;buildTermsTable(dictTerms)&amp;nbsp;//&amp;nbsp;將詞彙轉換成二維詞彙表格&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;原本輸入的詞彙列表如下，資料格式為陣列：&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;table table-bordered&quot; style=&quot;background-color: rgb(255, 255, 255); width: 668px;&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;晨泳&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;游泳&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;游泳池&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;泳池游&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;泳池&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;泳褲&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;泳客&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;轉換過程會加上位置欄位(positions)，建立一個二維陣列的表格termsTable：&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;table table-bordered&quot; style=&quot;background-color: rgb(255, 255, 255); width: 668px;&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;編號&lt;/td&gt;
      &lt;td&gt;term&lt;/td&gt;
      &lt;td&gt;positions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;晨泳&lt;/td&gt;
      &lt;td&gt;[]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;游泳&lt;/td&gt;
      &lt;td&gt;[]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;游泳池&lt;/td&gt;
      &lt;td&gt;[]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;泳池游&lt;/td&gt;
      &lt;td&gt;[]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;泳池&lt;/td&gt;
      &lt;td&gt;[]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;泳褲&lt;/td&gt;
      &lt;td&gt;[]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;泳客&lt;/td&gt;
      &lt;td&gt;[]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;詞彙的每個字都得要出現在句子中 filterByOccurs() / Does every words in term occurred in sentence&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;termsTable&amp;nbsp;=&amp;nbsp;termsTable.filter(item&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;let&amp;nbsp;positions&amp;nbsp;=&amp;nbsp;filterByOccurs(sentenceIndex,&amp;nbsp;anchorPosition,&amp;nbsp;item.term)&lt;br&gt;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(positions&amp;nbsp;===&amp;nbsp;false)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;false&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;item.positions&amp;nbsp;=&amp;nbsp;positions&lt;br&gt;&amp;nbsp;&amp;nbsp;return&amp;nbsp;true&lt;br&gt;})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在處理後，原本7個詞彙的termsTable只剩下6個，內容如下：&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;table table-bordered&quot; style=&quot;background-color: rgb(255, 255, 255); width: 668px;&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;編號&lt;/td&gt;
      &lt;td&gt;term&lt;/td&gt;
      &lt;td&gt;positions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;晨泳&lt;/td&gt;
      &lt;td&gt;[1, 12, 20]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;游泳&lt;/td&gt;
      &lt;td&gt;[5, 11, 12, 20]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;游泳池&lt;/td&gt;
      &lt;td&gt;[5, 11, 12, 13, 20]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;泳池游&lt;/td&gt;
      &lt;td&gt;[5, 11, 12, 13, 20]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;泳池&lt;/td&gt;
      &lt;td&gt;[12, 13, 20]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;泳褲&lt;/td&gt;
      &lt;td&gt;[12, 20, 21]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;6&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;泳客&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;[12, 20, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;「泳客」這個詞彙會在此階段中被刪除，因為「客」並不存在句子中。其他詞彙中每個字在句子中的位置則記錄在positions裡。例如「晨泳」的positions為[1, 12, 20]，這是由「晨」在句子中的位置 [1] 跟「泳」在句子中的位置[12, 20]所組成。&lt;/p&gt;
&lt;h3&gt;詞彙每個字在句子中的位置，必須是連續出現 filterBySequence() / Does the positions of term keep&amp;nbsp;it continuous&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;termsTable&amp;nbsp;=&amp;nbsp;termsTable.filter(item&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;let&amp;nbsp;termlegnth&amp;nbsp;=&amp;nbsp;item.term.length&lt;br&gt;&amp;nbsp;&amp;nbsp;let&amp;nbsp;positionSequence&amp;nbsp;=&amp;nbsp;filterBySequence(anchorPosition,&amp;nbsp;termlegnth,&amp;nbsp;item.positions)&lt;br&gt;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(positionSequence&amp;nbsp;===&amp;nbsp;false)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;false&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;item.positions&amp;nbsp;=&amp;nbsp;positionSequence&lt;br&gt;&amp;nbsp;&amp;nbsp;return&amp;nbsp;true&lt;br&gt;})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在處理後，原本6個詞彙的termsTable只剩下4個，內容如下：&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;table table-bordered&quot; style=&quot;background-color: rgb(255, 255, 255); width: 668px;&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;編號&lt;/td&gt;
      &lt;td&gt;term&lt;/td&gt;
      &lt;td&gt;positions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;0&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;晨泳&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;[1, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;12&lt;/span&gt;, 20]&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;游泳&lt;/td&gt;
      &lt;td&gt;[&lt;span style=&quot;text-decoration: line-through;&quot;&gt;5,&lt;/span&gt; 11, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;12&lt;/span&gt;&lt;span style=&quot;text-decoration: line-through;&quot;&gt;, 20&lt;/span&gt;]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;游泳池&lt;/td&gt;
      &lt;td&gt;[&lt;span style=&quot;text-decoration: line-through;&quot;&gt;5, &lt;/span&gt;11, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;12&lt;/span&gt;, 13&lt;span style=&quot;text-decoration: line-through;&quot;&gt;, 20&lt;/span&gt;]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;泳池游&lt;/td&gt;
      &lt;td&gt;[&lt;span style=&quot;text-decoration: line-through;&quot;&gt;5, &lt;/span&gt;11, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;12&lt;/span&gt;, 13&lt;span style=&quot;text-decoration: line-through;&quot;&gt;, 20&lt;/span&gt;]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;泳池&lt;/td&gt;
      &lt;td&gt;[&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;12&lt;/span&gt;, 13&lt;span style=&quot;text-decoration: line-through;&quot;&gt;, 20&lt;/span&gt;]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;5&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;泳褲&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;[&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;12&lt;/span&gt;, 20, 21]&lt;/span&gt;&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;「晨泳」跟「泳褲」都在這個階段中被刪除。「晨泳」在句子中的位置並沒有連續，所以被移除。另一方面，「泳褲」的位置雖然有連續，而且連續的長度達到該詞彙的長度2，但是因為不包含錨點字的位置而被移除。&lt;/p&gt;
&lt;p&gt;其他保留的四個詞彙，他們的positions欄位只留下有連續的位置，其餘位置資料移除。&lt;/p&gt;
&lt;h3&gt;詞彙每個字在句子中的連續位置所組成的字，必須和詞彙相同 filterTermSequence() / Is the positions of term in sentence match the term&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;termsTable&amp;nbsp;=&amp;nbsp;termsTable.filter(item&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(filterTermSequence(sentence,&amp;nbsp;item.positions,&amp;nbsp;item.term)&amp;nbsp;===&amp;nbsp;false)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;  return&amp;nbsp;false&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;  return&amp;nbsp;true&lt;br&gt;})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在處理後，原本4個詞彙的termsTable只剩下3個，內容如下：&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;table table-bordered&quot; style=&quot;background-color: rgb(255, 255, 255); width: 668px;&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;編號&lt;/td&gt;
      &lt;td&gt;term&lt;/td&gt;
      &lt;td&gt;positions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;游泳&lt;/td&gt;
      &lt;td&gt;[11,&amp;nbsp;12]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;游泳池&lt;/td&gt;
      &lt;td&gt;[11,&amp;nbsp;12, 13]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;2&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;泳池游&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;text-decoration: line-through; background-color: rgb(206, 198, 206);&quot;&gt;[11,&amp;nbsp;12, 13]&lt;/span&gt;&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;泳池&lt;/td&gt;
      &lt;td&gt;[12, 13]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;「泳池游」在這個階段中被刪除。在這個階段中，我們根據「泳池游」在句子中的位置取出對應的文字，並組成文字「游泳池」，結果發現這個字並不符合詞彙「泳池游」，所以被移除。&lt;/p&gt;
&lt;h3&gt;詞彙排序&amp;nbsp;sortTerms() / Sort terms by length and anchor position&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;let&amp;nbsp;sortedFilterTerms&amp;nbsp;=&amp;nbsp;sortTerms(termsTable,&amp;nbsp;anchorPosition)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;排序之後，sortedFilterTerms的內容如下：&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;table table-bordered&quot; style=&quot;background-color: rgb(255, 255, 255); width: 668px;&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;編號&lt;/td&gt;
      &lt;td&gt;term&lt;/td&gt;
      &lt;td&gt;positions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;游泳池&lt;br&gt;&lt;/td&gt;
      &lt;td&gt;[11, 12, 13]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;泳池&lt;/td&gt;
      &lt;td&gt;[12, 13]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;游泳&lt;/td&gt;
      &lt;td&gt;[11,&amp;nbsp;12]&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;排序有兩種權重，當前者相同時，再來考慮後者：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;詞彙長度較長者，排序優先。因此「游泳池」比「泳池」還要前面。&lt;/li&gt;
  &lt;li&gt;錨點字位置較前者，排序優先。錨點字位置「12」在「泳池」的positions中的位置是0，在「游泳」的positions中的位置是1，因此「泳池」比「游泳」還要前面。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最後再重新建構一個只有term構成的陣列，就完成我們整個搜尋演算法囉。&lt;/p&gt;
&lt;p&gt;想要自己試試看的話，請從以下連結找到演算法原始碼喔。&lt;/p&gt;
&lt;li&gt;&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2020/09/search-dictionary-by-word-in-sentence.html&quot; target=&quot;_blank&quot;&gt;JavaScript版本&lt;/a&gt;：你可以直接用瀏覽器開啟來測試&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2020/09/search-dictionary-by-word-in-sentence.php&quot; target=&quot;_blank&quot;&gt;PHP版本&lt;/a&gt;：你可以在&lt;a href=&quot;https://sandbox.onlinephpfunctions.com/&quot; target=&quot;_blank&quot;&gt;PHP Sandbox&lt;/a&gt;測試&lt;/li&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;這個演算法為了講解方便，我做了很多拆分。運作效率可能還有提升的空間。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-fCf5VdALDwo/X1i2DOt3foI/AAAAAAAExRI/dSrFRQxEkwUMpVADGpqnZB5ppqymJdu9wCLcBGAsYHQ/s927/2020-0909-185904.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-fCf5VdALDwo/X1i2DOt3foI/AAAAAAAExRI/dSrFRQxEkwUMpVADGpqnZB5ppqymJdu9wCLcBGAsYHQ/s927/2020-0909-185904.png&quot; title=&quot;2020-0909-185904.png&quot; alt=&quot;2020-0909-185904.png&quot; width=&quot;450&quot; height=&quot;337&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;為什麼會想要整理這個演算法呢？以前在面對這個問題時，很多人都會先將句子進行「&lt;a href=&quot;/2017/03/jieba-js-online-chinese-analyzer-jieba.html&quot; target=&quot;_blank&quot;&gt;斷詞處理&lt;/a&gt;」，然後再用斷詞結果來查詢詞典。舉例來說，句子是「清晨時去游泳池」，斷詞結果會取出「清晨」、「時」、「去」、「游泳池」這四個字，而搜尋時會以「游泳池」這個詞彙來搜尋。&lt;/p&gt;
&lt;p&gt;這個方法有很多缺點：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;加入斷詞器會大幅度增加程式的複雜性。你必須先確保整個系統能夠運作斷詞器。&lt;/li&gt;
  &lt;li&gt;斷詞結果可能會與詞典中的詞彙不符合。&lt;/li&gt;
  &lt;li&gt;只能保存單一斷詞結果。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2跟3這個兩個缺點在實務運作上影響甚鉅。當我們用斷詞結果「游泳池」來搜尋詞典時，就找不出「游泳」和「泳池」這兩個字。&lt;/p&gt;
&lt;p&gt;最近又有人遇到類似的問題，我才把這個問題的解法整理一下，寫成JavaScript跟PHP兩種版本。希望大家未來想要根據句子中的單字來搜尋詞典時，不要再用複雜的斷詞器了，用這個簡單的演算法就可以了。&lt;/p&gt;

&lt;hr&gt;
&lt;p&gt;那麼這次從句子中的單字搜尋詞典的教學就到這裡了。寫到最後，我想問你在面對這個問題時，你會怎麽做呢？&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A. 試試看這個演算法好了&lt;/li&gt;
  &lt;li&gt;B. 看不太懂，我還是比較信賴斷詞器的結果&lt;/li&gt;
  &lt;li&gt;C. 我從來沒遇到這樣的問題&lt;/li&gt;
  &lt;li&gt;D. 其他&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/6308235157754456465/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2020/09/how-to-search-for-matching-terms-in.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/6308235157754456465'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/6308235157754456465'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2020/09/how-to-search-for-matching-terms-in.html' title='如何從句子中的單字搜尋詞典中符合的詞彙？ / How to search for the matching terms in the dictionary from a word in the sentence?'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//1.bp.blogspot.com/-rOC-kQBHml8/X1i2DH28-hI/AAAAAAAExRM/FfGADHjcuuwvkm4cul4LskMNPvX6XkQSQCLcBGAsYHQ/s72-c/21-How_to_search_for_the_matching_terms.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-5035947270094988165</id><published>2020-04-29T00:15:00.002+08:00</published><updated>2020-04-29T01:02:22.871+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Software/Google"/><title type='text'>如何讓Google Chrome開啟時就佔滿整個螢幕並隱藏控制介面？ / How to make Google Chrome open to fill the entire screen and hide the control interface?</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-lpXoZJCST6A/XqhWQcLo3qI/AAAAAAAEn8w/ydyojb9MXUAiTQEKopjtgReEgZTXnSwMwCK4BGAYYCw/s1600/20-Google_Chrome_How_to_make_Google_cover.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-lpXoZJCST6A/XqhWQcLo3qI/AAAAAAAEn8w/ydyojb9MXUAiTQEKopjtgReEgZTXnSwMwCK4BGAYYCw/s1600/20-Google_Chrome_How_to_make_Google_cover.png&quot; title=&quot;20-Google_Chrome_How_to_make_Google_cover.png&quot; alt=&quot;20-Google_Chrome_How_to_make_Google_cover.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近在展示網頁系統的時候，為了不讓使用者被瀏覽器的其他介面干擾，我在啟動&lt;a href=&quot;https://www.google.com/intl/zh-TW/chrome/&quot; target=&quot;_blank&quot;&gt;Google Chrome&lt;/a&gt;的指令上加上&lt;a href=&quot;https://peter.sh/experiments/chromium-command-line-switches/&quot; target=&quot;_blank&quot;&gt;指令列參數(Command Line Switches)&lt;/a&gt;，使得瀏覽器用新的帳號、隱藏控制介面的APP模式開啟，並讓整個瀏覽器的尺寸設為整個螢幕的大小。這篇就來講講這個指令內包含了什麼參數，以及為什麼我要這樣設定。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;用指令開啟Google Chrome瀏覽器 / Open Google Chrome from command line&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-P29uavFfb2A/XqhWQEueurI/AAAAAAAEn8k/pDCseTJ1f9Ieg-tSNdWkBKj4Stf9RU7SwCK4BGAYYCw/s1600/2020-0428-192221-commwdpemn-opyright-Microsoft-Corporation.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-P29uavFfb2A/XqhWQEueurI/AAAAAAAEn8k/pDCseTJ1f9Ieg-tSNdWkBKj4Stf9RU7SwCK4BGAYYCw/s450/2020-0428-192221-commwdpemn-opyright-Microsoft-Corporation.png&quot; title=&quot;2020-0428-192221-commwdpemn-opyright-Microsoft-Corporation.png&quot; alt=&quot;2020-0428-192221-commwdpemn-opyright-Microsoft-Corporation.png&quot; width=&quot;450&quot; height=&quot;294&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;普通使用者是使用捷徑來開啟Google Chrome。我們可以在捷徑裡面加上參數，讓Google Chrome以特殊狀態開啟。例如我這篇就在「&lt;a href=&quot;http://blog.pulipuli.info/2017/08/start-browser-in-incognito-inprivate.html&quot; target=&quot;_blank&quot;&gt;從捷徑直接開啟瀏覽器的無痕/私密模式&lt;/a&gt;」介紹如何透過在捷徑裡面加上參數「--incognito」使得Google Chrome一打開來就是無痕模式。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-7MJ4jeF_2hE/XqhWQzg3QDI/AAAAAAAEn88/MznMcRmPsWsnvQchA7zQcoWEFeFn177NQCK4BGAYYCw/s1600/2020-0428-192558-Peter-Beverloo-Home-About-Experiments.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-7MJ4jeF_2hE/XqhWQzg3QDI/AAAAAAAEn88/MznMcRmPsWsnvQchA7zQcoWEFeFn177NQCK4BGAYYCw/s450/2020-0428-192558-Peter-Beverloo-Home-About-Experiments.png&quot; title=&quot;2020-0428-192558-Peter-Beverloo-Home-About-Experiments.png&quot; alt=&quot;2020-0428-192558-Peter-Beverloo-Home-About-Experiments.png&quot; width=&quot;450&quot; height=&quot;272&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://peter.sh/experiments/chromium-command-line-switches/&quot; target=&quot;_blank&quot;&gt;List of Chromium Command Line Switches&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Google Chrome支援了相當多的參數，但到底那些參數可以使用呢？我們可以查看「&lt;a href=&quot;https://peter.sh/experiments/chromium-command-line-switches/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;List of Chromium Command Line Switches&lt;/a&gt;」這篇列出的各種參數。值得注意的是，隨著Google Chrome頻繁改版，這些參數也時常在調整。有些以前可以用的參數，在新版本裡面就無法使用了。如果你要用指令列參數來控制Google Chrome，請務必在正式使用之前測試看看。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-XJe1KUu2aSY/XqhWQc4fkhI/AAAAAAAEn80/EGedTaCRWK4PxZhWhslza7qoQD_nFy4NQCK4BGAYYCw/s1600/.png&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-XJe1KUu2aSY/XqhWQc4fkhI/AAAAAAAEn80/EGedTaCRWK4PxZhWhslza7qoQD_nFy4NQCK4BGAYYCw/s450/.png&quot; title=&quot;.png&quot; alt=&quot;.png&quot; width=&quot;429&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;http://www.ipcedu.tku.edu.tw/document/ITBC9.0%E5%BB%A3%E6%92%AD%E6%95%99%E5%AD%B8%E7%B3%BB%E7%B5%B1%E4%BD%BF%E7%94%A8%E8%AA%AA%E6%98%8E(2010-07).pdf&quot; target=&quot;_blank&quot;&gt;ITBC 9.0廣播教學系統使用說明&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;什麼時候會使用指令列來開啟Google Chrome呢？除了設成捷徑，方便讓你自己開啟之外，最常用的就是搭配廣播教學系統上的遠端命令。我們可以在教師的控制端設好指令，就能讓電腦教室中每一台電腦執行相同的指令，省下讓學生自己開啟視窗的操作流程。&lt;/p&gt;
&lt;p&gt;底下我們就介紹四種常用的全螢幕開啟Google Chrome的方法：全螢幕、最大化、以佔滿螢幕的尺寸開啟、以及搭配JavaScript自動偵測螢幕尺寸來開啟。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;1. 以全螢幕開啟 / Open in full screen&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-TiQXqksihnY/XqhWSXrctLI/AAAAAAAEn9I/VBtOqwb0nnAXU-v48E1YQyQkOVq3w_qPQCK4BGAYYCw/s1600/smartmockups_k9jw3u10.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-TiQXqksihnY/XqhWSXrctLI/AAAAAAAEn9I/VBtOqwb0nnAXU-v48E1YQyQkOVq3w_qPQCK4BGAYYCw/s450/smartmockups_k9jw3u10.png&quot; title=&quot;smartmockups_k9jw3u10.png&quot; alt=&quot;smartmockups_k9jw3u10.png&quot; width=&quot;450&quot; height=&quot;242&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(模板網頁：&lt;a href=&quot;https://smartmockups.com/mockup/macbook-air-in-3-colors-V3Irsd7od&quot; target=&quot;_blank&quot;&gt;SmartMockups&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;以全螢幕開啟Google Chrome的指令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;dos&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&quot;C:\Program&amp;nbsp;Files&amp;nbsp;(x86)\Google\Chrome\Application\chrome.exe&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(57, 123, 33);&quot;&gt;--app=http://blog.pulipuli.info&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(156, 0, 255);&quot;&gt;--user-data-dir=&quot;D:/Test/Chrome-Profiles/1&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;--start-fullscreen&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這一整串指令包括四個部分：&lt;/p&gt;
&lt;h3&gt;藍字「&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;&lt;/span&gt;」&lt;/h3&gt;
&lt;p&gt;這是Windows電腦裡面Google Chrome的安裝位置。如果你使用的是其他作業系統，那把這串換成你電腦裡面的Google Chrome路徑即可。&lt;/p&gt;
&lt;h3&gt;綠字「&lt;span style=&quot;color: rgb(107, 165, 74);&quot;&gt;--app=http://blog.pulipuli.info&lt;/span&gt;」&lt;/h3&gt;
&lt;p&gt;以應用程式模式開啟網頁「http://blog.pulipuli.info」。在應用程式模式中，Google Chrome瀏覽列只會留下標題、捲軸，其他控制介面會全部隱藏起來，包括網址列、擴充功能的按鈕等等。而且在Windows工作列上也會把這個網頁當作獨立的應用程式來處理，不會跟其他Google Chrome的分頁混在一起。&lt;/p&gt;
&lt;p&gt;我非常喜歡這個指令列參數，在「&lt;a href=&quot;http://blog.pulipuli.info/2016/11/chromeapp-run-standalone-web-app-in.html&quot; target=&quot;_blank&quot;&gt;自製網頁應用程式！使用Chrome的命令列選項app來製作網頁應用程式捷徑&lt;/a&gt;」這篇還有更多的介紹。&lt;/p&gt;
&lt;h3&gt;紫字「&lt;span style=&quot;color: rgb(156, 0, 255);&quot;&gt;--user-data-dir=&quot;D:/Test/Chrome-Profiles/1&quot;&lt;/span&gt;」&lt;/h3&gt;
&lt;p&gt;讓Google Chrome以另一個帳號開啟，而這個帳號的資料保存在本機端路徑「D:/Test/Chrome-Profiles/1」裡面。&lt;/p&gt;
&lt;p&gt;如果你電腦上已經開啟了Google Chrome，那大部分的指令列參數都會受到原本開啟的Google Chrome影響，不會生效。我們需要透過--user-data-dir以新帳號開啟Google Chrome，這樣就能以全新的Google Chrome來測試、使用系統，而不會受到原本帳號的影響。&lt;/p&gt;
&lt;p&gt;另一個類似的做法是使用「--incognito」以無痕視窗開啟。但無痕視窗依然會使用主要帳號的設定以及部分的擴充功能，而且無痕視窗關掉之後就刪除cookie暫存資料，而使用--user-data-dir則仍會保存之前的cookie操作狀態。&lt;/p&gt;
&lt;p&gt;如果我們要再使用全新的帳號開啟，那可以修改路徑，或是刪除原本路徑裡面的檔案即可。&lt;/p&gt;
&lt;h3&gt;紅字「&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;--start-fullscreen&lt;/span&gt;」&lt;/h3&gt;
&lt;p&gt;以全螢幕開啟Google Chrome。這個效果就跟你打開Google Chrome，然後按下「F11」一樣。&lt;/p&gt;
&lt;p&gt;在全螢幕的狀態下，使用者無法直覺地按下關閉視窗的按鈕來離開。要離開這個畫面的話，必須先按下F11離開全螢幕狀態，這樣才能關閉這個視窗。&lt;/p&gt;
&lt;h3&gt;適用情景 / When to use it&lt;/h3&gt;
&lt;p&gt;如果你的目標是讓使用者固定在這個視窗畫面，例如觀看影片、觀看網頁文章、填寫問卷，這些任務不會使用到其他分頁、也不會另外開啟網頁、更不會使用其他應用程式的話，那全螢幕模式蠻適合這種情況下使用。&lt;/p&gt;
&lt;p&gt;如果你會想要同時讓使用者操作其他程式的話，那可能就不能使用全螢幕，不然使用者會不知道如何切換到其他畫面。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: bold; color: inherit;&quot;&gt;2. 以最大化視窗開啟 / Open in maximized window&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-J5R-6FDDufU/XqhWSTDzCYI/AAAAAAAEn9M/GEdUOnHkW5gc_pleUrQRI0tVzNcep_kDACK4BGAYYCw/s1600/smartmockups_k9jwbop6.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-J5R-6FDDufU/XqhWSTDzCYI/AAAAAAAEn9M/GEdUOnHkW5gc_pleUrQRI0tVzNcep_kDACK4BGAYYCw/s450/smartmockups_k9jwbop6.png&quot; title=&quot;smartmockups_k9jwbop6.png&quot; alt=&quot;smartmockups_k9jwbop6.png&quot; width=&quot;450&quot; height=&quot;242&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;跟前面的全螢幕相比，最大化視窗會顯示視窗標題以及右邊的縮小、還原、關閉按鈕，也會保留Windows原本的工作列。以最大化視窗開啟Google Chrome的指令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;dos&quot;&gt;&quot;C:\Program&amp;nbsp;Files&amp;nbsp;(x86)\Google\Chrome\Application\chrome.exe&quot;&amp;nbsp;--app=http://blog.pulipuli.info&amp;nbsp;--user-data-dir=&quot;D:/Test/Chrome-Profiles/1&quot;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;--start-maximized&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;前面的部分與全螢幕開啟的指令差不多，主要是最後一個參數不是使用「--start-fullscreen」，而是使用「--start-maximized」。&lt;/p&gt;
&lt;h3&gt;紅字「&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;--start-maximized&lt;/span&gt;」&lt;/h3&gt;
&lt;p&gt;這表示以視窗最大化的狀態開啟Google Chrome。這個效果就跟打開Google Chrome再按下右上角的「最大化」來放大視窗一樣。&lt;/p&gt;
&lt;p&gt;使用者可以直接按右上角的「縮小」、「還原」、「關閉」來控制視窗狀態，也能夠從下面的Windows工作列切換到其他應用程式。&lt;/p&gt;
&lt;h3&gt;適用情景 / When to use it&lt;/h3&gt;
&lt;p&gt;如果你的目標是讓使用者可以切換到其他應用程式的話，那保留顯示Windows工作列、讓使用者方便切換，也許是個不錯的做法。&lt;/p&gt;
&lt;p&gt;但如果要讓使用者同時查看兩個應用程式，而螢幕的尺寸又組夠大的話，那我會建議不要使用全螢幕，而是指定視窗大小與位置，這樣就更能活用螢幕的空間。&lt;/p&gt;
&lt;p&gt;必須要注意的是，如果我們在開啟Google Chrome時加入了「--start-maximized」參數，那在這個網頁上用另開視窗、開啟分頁等形式點開網頁時，新的視窗都會套用原本指令列參數的影響，變成以最大化的形式開啟。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-AGl65XX-FwA/XqhWZpCsaZI/AAAAAAAEn-A/dGBdYZDyV6spQYVCa9iEFZYznabxT_KIwCK4BGAYYCw/s1600/2020-0428-205833-ggaveggg-gg-blog-pulipuliinfo-wekahotspot.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-AGl65XX-FwA/XqhWZpCsaZI/AAAAAAAEn-A/dGBdYZDyV6spQYVCa9iEFZYznabxT_KIwCK4BGAYYCw/s450/2020-0428-205833-ggaveggg-gg-blog-pulipuliinfo-wekahotspot.png&quot; title=&quot;2020-0428-205833-ggaveggg-gg-blog-pulipuliinfo-wekahotspot.png&quot; alt=&quot;2020-0428-205833-ggaveggg-gg-blog-pulipuliinfo-wekahotspot.png&quot; width=&quot;450&quot; height=&quot;281&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候如果以開新視窗的方式開啟連結，它會脫離應用程式模式，以Google Chrome標準的分頁模式來瀏覽網頁。而主要的網頁依然是以應用程式模式獨立在分頁之外。&lt;/p&gt;
&lt;p&gt;如果不想要讓新視窗變成最大化的話，那我們可能要採用下面的「以佔滿螢幕的尺寸開啟」做法。&lt;/p&gt;
&lt;h4&gt;加入關閉視窗的確認提示 / Add confirmation prompt before closing window&lt;/h4&gt;
&lt;p&gt;使用最大化視窗的時候，使用者可能會自己關閉視窗。為了避免誤觸關閉按鈕，我建議開發者參考&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/Events/beforeunload&quot; target=&quot;_blank&quot;&gt;MDN web docs的說明&lt;/a&gt;，加入以下程式碼，讓使用者要離開網頁之前跳出一個確認提示：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;window.addEventListener(&quot;beforeunload&quot;,&amp;nbsp;function&amp;nbsp;(e)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;confirmationMessage&amp;nbsp;=&amp;nbsp;&quot;\o/&quot;;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;(e&amp;nbsp;||&amp;nbsp;window.event).returnValue&amp;nbsp;=&amp;nbsp;confirmationMessage;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Gecko&amp;nbsp;and&amp;nbsp;Trident&lt;br&gt;&amp;nbsp;&amp;nbsp;return&amp;nbsp;confirmationMessage;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Gecko&amp;nbsp;and&amp;nbsp;WebKit&lt;br&gt;});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-0QbohBRnGZ4/XqhWW8yCTzI/AAAAAAAEn9U/-wn6RWKilA44mBrAt2Tca-mNRkt-0GbQwCK4BGAYYCw/s1600/2020-0428-210542-RulligRgNgSgKSg-Hom.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-0QbohBRnGZ4/XqhWW8yCTzI/AAAAAAAEn9U/-wn6RWKilA44mBrAt2Tca-mNRkt-0GbQwCK4BGAYYCw/s450/2020-0428-210542-RulligRgNgSgKSg-Hom.png&quot; title=&quot;2020-0428-210542-RulligRgNgSgKSg-Hom.png&quot; alt=&quot;2020-0428-210542-RulligRgNgSgKSg-Hom.png&quot; width=&quot;450&quot; height=&quot;183&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;離開前的確認訊息如上圖所示。使用者如果執意要離開網頁，依然可以按下「離開」按鈕，但這至少可以避免很多不小心按到關閉視窗按鈕的情況了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;3. 以佔滿螢幕的尺寸開啟 / Open to fill the screen&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-NQdM3eLGut8/XqhWZqMYAoI/AAAAAAAEn98/t78nPJwITCULHZ_QZQzCGZUrYYy7JJM6ACK4BGAYYCw/s1600/smartmockups_k9jxltg0.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-NQdM3eLGut8/XqhWZqMYAoI/AAAAAAAEn98/t78nPJwITCULHZ_QZQzCGZUrYYy7JJM6ACK4BGAYYCw/s450/smartmockups_k9jxltg0.png&quot; title=&quot;smartmockups_k9jxltg0.png&quot; alt=&quot;smartmockups_k9jxltg0.png&quot; width=&quot;450&quot; height=&quot;242&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這種方法看起來很像是前面的最大化視窗，但兩者並不相同。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-YeBYczPxy1M/XqhWXbXzm_I/AAAAAAAEn9k/G1kMHYxAKBcBcsWPSQ1-Q3hLfJ-hErAVACK4BGAYYCw/s1600/2020-0428-211431.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-YeBYczPxy1M/XqhWXbXzm_I/AAAAAAAEn9k/G1kMHYxAKBcBcsWPSQ1-Q3hLfJ-hErAVACK4BGAYYCw/s224/2020-0428-211431.png&quot; title=&quot;2020-0428-211431.png&quot; alt=&quot;2020-0428-211431.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這種模式依然是普通的視窗，只是將視窗的尺寸放到螢幕最大，並把位置挪到剛好的左上角而已。使用者依然可以縮小、最大化、關閉視窗，在視窗邊緣也可以拖曳改變視窗大小。&lt;/p&gt;
&lt;p&gt;以佔滿螢幕的尺寸開啟Google Chrome的指令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;dos&quot;&gt;&quot;C:\Program&amp;nbsp;Files&amp;nbsp;(x86)\Google\Chrome\Application\chrome.exe&quot;&amp;nbsp;--app=http://blog.pulipuli.info&amp;nbsp;--user-data-dir=&quot;D:/Test/Chrome-Profiles/1&quot;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;--window-size=&quot;1680,1010&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;--window-position=&quot;0,0&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這次我們不使用「--start-maximized」，而是使用「--window-size」和「--window-position」兩個指令列參數。讓我們看看為什麼要這樣設定吧。&lt;/p&gt;
&lt;h3&gt;紅字「&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;--window-size=&quot;1680,1010&quot;&lt;/span&gt;」&lt;/h3&gt;
&lt;p&gt;這個意思是開啟視窗，並將視窗尺寸調整成寬度1680像素、高度1010像素。&lt;/p&gt;
&lt;p&gt;為什麼我的寬度和高度是這樣設定呢？這是因為我的螢幕尺寸為1680x1050，而Windows的工作列高度為40像素，所以視窗尺寸設為寬1680、高1010 (也就是1050-40=1010)的話，就能夠佔滿整個螢幕範圍，同時保留Windows工作列的位置。&lt;/p&gt;
&lt;h3&gt;藍字「&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;--window-position=&quot;0,0&quot;&lt;/span&gt;」&lt;/h3&gt;
&lt;p&gt;這個意思是將視窗的位置擺到螢幕位置x為0、y為0的地方，也就是螢幕的左上角。&lt;/p&gt;
&lt;p&gt;如果不這樣設定的話，通常新開啟的視窗會在離螢幕邊緣有些距離的情況下出現。這樣就喪失以佔滿螢幕尺寸來開啟Google Chrome的目的了。&lt;/p&gt;
&lt;h3&gt;適用情景 / When to use it&lt;/h3&gt;
&lt;p&gt;這種方式跟最大化視窗開啟Google Chrome最大的不同在於視窗並非「最大化」，而是可以調整視窗尺寸的狀態。這帶來了兩個好處：可以活用大螢幕、以及能夠使用彈跳視窗。&lt;/p&gt;
&lt;h4&gt;在螢幕上顯示多視窗 /&amp;nbsp;Display multiple windows on the screen&lt;/h4&gt;
&lt;p&gt;我們可以用--window-size和--window-position來控制Google Chrome的視窗大小與位置，如果綜合考量過螢幕尺寸、需要開啟的應用程式數量，想要讓使用者在螢幕上同時顯示多個視窗的話，不妨修改--window-size和--window-position，讓Google Chrome不要佔滿全螢幕。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-7iDft028Q1Y/XqhWXmwnsmI/AAAAAAAEn9o/8q0nDU0uJr4WCpEvFkvpGfJz64H33Am0gCK4BGAYYCw/s1600/2020-04-28_205439-HTHTEHE-le-Tes-Program-Visualization.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-7iDft028Q1Y/XqhWXmwnsmI/AAAAAAAEn9o/8q0nDU0uJr4WCpEvFkvpGfJz64H33Am0gCK4BGAYYCw/s450/2020-04-28_205439-HTHTEHE-le-Tes-Program-Visualization.png&quot; title=&quot;2020-04-28_205439-HTHTEHE-le-Tes-Program-Visualization.png&quot; alt=&quot;2020-04-28_205439-HTHTEHE-le-Tes-Program-Visualization.png&quot; width=&quot;450&quot; height=&quot;281&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在這個例子中，我將Google Chrome的尺寸設為螢幕寬度的一半。這樣子就可以保留左邊顯示網頁、右邊開啟其他應用程式的使用方式。這樣使用者可以一邊對著網頁，一邊操作其他軟體，能夠活用大螢幕帶來的好處。&lt;/p&gt;
&lt;h4&gt;&lt;span style=&quot;color: inherit;&quot;&gt;使用彈跳視窗 / Using popup&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;如果你在網頁裡面有&lt;a href=&quot;https://stackoverflow.com/a/16861050&quot; target=&quot;_blank&quot;&gt;用JavaScript的window.open()開啟彈跳式視窗(popup)&lt;/a&gt;的話，那就不能讓網頁以最大化開啟，而必須讓它以單純的視窗開啟。&lt;/p&gt;
&lt;p&gt;但使用JavaScript開啟的彈跳視窗，依然會受到Google Chrome指令列參數的影響，以佔滿螢幕畫面的狀態開啟。這時候我們就要使用一些特殊的方式來開啟彈跳視窗。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-lWXtdwlBEWQ/XqhWYNV8SEI/AAAAAAAEn9w/ecL_L7Z3yZwFeNgug7de4-EP5YccJHNNACK4BGAYYCw/s1600/smartmockups_k9jyeorz.png&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-lWXtdwlBEWQ/XqhWYNV8SEI/AAAAAAAEn9w/ecL_L7Z3yZwFeNgug7de4-EP5YccJHNNACK4BGAYYCw/s450/smartmockups_k9jyeorz.png&quot; title=&quot;smartmockups_k9jyeorz.png&quot; alt=&quot;smartmockups_k9jyeorz.png&quot; width=&quot;450&quot; height=&quot;242&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我參考&lt;a href=&quot;http://www.xtf.dk/2011/08/center-new-popup-window-even-on.html&quot; target=&quot;_blank&quot;&gt;xTF&lt;/a&gt;的寫法改寫了開啟彈跳視窗的函式。這個函式打開的彈跳視窗按照螢幕畫面80%縮小視窗、並將彈跳視窗的位置挪到畫面中央。&lt;/p&gt;
&lt;p&gt;你可以用以下指令來開啟這個&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2020/04/20200428-popup-center/index.html&quot; target=&quot;_blank&quot;&gt;彈跳視窗範例網頁&lt;/a&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;dos&quot;&gt;&quot;C:\Program&amp;nbsp;Files&amp;nbsp;(x86)\Google\Chrome\Application\chrome.exe&quot;&amp;nbsp;--app=https://pulipulichen.github.io/blog-pulipuli-info-data-2020/04/20200428-popup-center/index.html&amp;nbsp;--window-size=&quot;1680,1010&quot;&amp;nbsp;--window-position=&quot;0,0&quot;&amp;nbsp;--user-data-dir=&quot;D:/Test/Chrome-Profiles/1&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;左邊的「Open Blog (Raw)」是普通的window.open()方法，你可以注意到新開啟的彈跳視窗是以佔滿整個螢幕的尺寸顯示。如果按下右邊的「Open Blog (Redirect)」，那新開啟的彈跳視窗就會以螢幕畫面80%的尺寸顯示。&lt;/p&gt;
&lt;p&gt;這個函式popupCenterRedirect(url, ratio, title)原始碼在&lt;a href=&quot;https://github.com/pulipulichen/blog-pulipuli-info-data-2020/blob/master/04/20200428-popup-center/popupCenterRedirect.js&quot; target=&quot;_blank&quot;&gt;popupCenterRedirect.js&lt;/a&gt;裡面，內容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;function&amp;nbsp;popupCenterRedirect(url,&amp;nbsp;ratio,&amp;nbsp;title)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;ratio&amp;nbsp;=&amp;nbsp;(typeof(ratio)&amp;nbsp;===&amp;nbsp;&#39;number&#39;)&amp;nbsp;?&amp;nbsp;ratio&amp;nbsp;:&amp;nbsp;0.8&lt;br&gt;&amp;nbsp;&amp;nbsp;title&amp;nbsp;=&amp;nbsp;(typeof(title)&amp;nbsp;===&amp;nbsp;&#39;string&#39;)&amp;nbsp;?&amp;nbsp;title&amp;nbsp;:&amp;nbsp;&#39;_blank&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;w&amp;nbsp;=&amp;nbsp;screen.availWidth&amp;nbsp;*&amp;nbsp;ratio&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;h&amp;nbsp;=&amp;nbsp;screen.availHeight&amp;nbsp;*&amp;nbsp;ratio&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;w&amp;nbsp;=&amp;nbsp;(w&amp;nbsp;&amp;lt;&amp;nbsp;300)&amp;nbsp;?&amp;nbsp;300&amp;nbsp;:&amp;nbsp;w&lt;br&gt;&amp;nbsp;&amp;nbsp;h&amp;nbsp;=&amp;nbsp;(h&amp;nbsp;&amp;lt;&amp;nbsp;300)&amp;nbsp;?&amp;nbsp;300&amp;nbsp;:&amp;nbsp;h&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;userAgent&amp;nbsp;=&amp;nbsp;navigator.userAgent&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;mobile&amp;nbsp;=&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;/\b(iPhone|iP[ao]d)/.test(userAgent)&amp;nbsp;||&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/\b(iP[ao]d)/.test(userAgent)&amp;nbsp;||&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/Android/i.test(userAgent)&amp;nbsp;||&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/Mobile/i.test(userAgent)&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;screenX&amp;nbsp;=&amp;nbsp;typeof&amp;nbsp;window.screenX&amp;nbsp;!==&amp;nbsp;&#39;undefined&#39;&amp;nbsp;?&amp;nbsp;window.screenX&amp;nbsp;:&amp;nbsp;window.screenLeft&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;screenY&amp;nbsp;=&amp;nbsp;typeof&amp;nbsp;window.screenY&amp;nbsp;!==&amp;nbsp;&#39;undefined&#39;&amp;nbsp;?&amp;nbsp;window.screenY&amp;nbsp;:&amp;nbsp;window.screenTop&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;outerWidth&amp;nbsp;=&amp;nbsp;typeof&amp;nbsp;window.outerWidth&amp;nbsp;!==&amp;nbsp;&#39;undefined&#39;&amp;nbsp;?&amp;nbsp;window.outerWidth&amp;nbsp;:&amp;nbsp;document.documentElement.clientWidth&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;taskbarHeight&amp;nbsp;=&amp;nbsp;22&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;outerHeight&amp;nbsp;=&amp;nbsp;typeof&amp;nbsp;window.outerHeight&amp;nbsp;!==&amp;nbsp;&#39;undefined&#39;&amp;nbsp;?&amp;nbsp;window.outerHeight&amp;nbsp;:&amp;nbsp;document.documentElement.clientHeight&amp;nbsp;-&amp;nbsp;taskbarHeight&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;targetWidth&amp;nbsp;=&amp;nbsp;mobile()&amp;nbsp;?&amp;nbsp;null&amp;nbsp;:&amp;nbsp;w&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;targetHeight&amp;nbsp;=&amp;nbsp;mobile()&amp;nbsp;?&amp;nbsp;null&amp;nbsp;:&amp;nbsp;h&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;V&amp;nbsp;=&amp;nbsp;screenX&amp;nbsp;&amp;lt;&amp;nbsp;0&amp;nbsp;?&amp;nbsp;window.screen.width&amp;nbsp;+&amp;nbsp;screenX&amp;nbsp;:&amp;nbsp;screenX&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;left&amp;nbsp;=&amp;nbsp;parseInt(V&amp;nbsp;+&amp;nbsp;(outerWidth&amp;nbsp;-&amp;nbsp;targetWidth)&amp;nbsp;/&amp;nbsp;2,&amp;nbsp;10)&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;right&amp;nbsp;=&amp;nbsp;parseInt(screenY&amp;nbsp;+&amp;nbsp;(outerHeight&amp;nbsp;-&amp;nbsp;targetHeight)&amp;nbsp;/&amp;nbsp;2.5,&amp;nbsp;10)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;features&amp;nbsp;=&amp;nbsp;[]&lt;br&gt;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(targetWidth&amp;nbsp;!==&amp;nbsp;null)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;features.push(&#39;width=&#39;&amp;nbsp;+&amp;nbsp;targetWidth);&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(targetHeight&amp;nbsp;!==&amp;nbsp;null)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;features.push(&#39;height=&#39;&amp;nbsp;+&amp;nbsp;targetHeight);&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;features.push(&#39;left=&#39;&amp;nbsp;+&amp;nbsp;left)&lt;br&gt;&amp;nbsp;&amp;nbsp;features.push(&#39;top=&#39;&amp;nbsp;+&amp;nbsp;right)&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;newWindow&amp;nbsp;=&amp;nbsp;window.open(&#39;&#39;,&amp;nbsp;title,&amp;nbsp;features.join(&#39;,&#39;))&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;newWindow.document.write(`&amp;lt;script&amp;gt;window.moveTo(${left},&amp;nbsp;${right});window.resizeTo(${targetWidth},&amp;nbsp;${targetHeight})&amp;lt;/script&amp;gt;`)&lt;br&gt;&amp;nbsp;&amp;nbsp;newWindow.document.write(`&amp;lt;script&amp;gt;location.href=&quot;${url}&quot;&amp;lt;/script&amp;gt;`)&lt;/span&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(window.focus)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;newWindow.focus()&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;跟&lt;a href=&quot;http://www.xtf.dk/2011/08/center-new-popup-window-even-on.html&quot; target=&quot;_blank&quot;&gt;xTF的程式碼&lt;/a&gt;相比，紅字的部分是我額外加上去的語法。這些語法的用途是：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;用window.open(&#39;&#39;)開啟一個空白的子網頁：這時候開啟它的父網頁(opener)可以控制它。如果在window.open()第一個參數指定了網址，而網址跟父網頁是不同網域的時候，我們就沒辦法用JavaScript控制它了。&lt;/li&gt;
  &lt;li&gt;調整子網頁的視窗位置和尺寸&lt;/li&gt;
  &lt;li&gt;將子網頁轉移到原本要開啟的目標網址&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這樣子就能做到調整視窗尺寸、位置之後，再來正常載入目標網址的目的了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;4. 搭配JavaScript偵測螢幕尺寸來開啟 /&amp;nbsp;Open to fill the screen by JavaScript&lt;/h2&gt;
&lt;p&gt;前面為了要讓Google Chrome以佔滿整個螢幕尺寸的視窗開啟，我們必須事先知道螢幕的尺寸，才能指定--window-size參數。但如果我們在網頁的JavaScript上加入一段程式碼，就能讓網頁載入的時候自動調整成螢幕尺寸：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;window.moveTo(0,0)&lt;br&gt;window.resizeTo(screen.availWidth,&amp;nbsp;screen.availHeight)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我將這段程式碼寫在popup-center的&lt;a href=&quot;https://github.com/pulipulichen/blog-pulipuli-info-data-2020/blob/master/04/20200428-popup-center/script.js&quot; target=&quot;_blank&quot;&gt;script.js&lt;/a&gt;中，你可以用以下指令來開啟這個測試用的網頁：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;dos&quot;&gt;&quot;C:\Program&amp;nbsp;Files&amp;nbsp;(x86)\Google\Chrome\Application\chrome.exe&quot;&amp;nbsp;--app=https://pulipulichen.github.io/blog-pulipuli-info-data-2020/04/20200428-popup-center/index.html&amp;nbsp;--user-data-dir=&quot;D:/Test/Chrome-Profiles/1&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你可以注意到，這段指令我並沒有指定--window-size和--window-position，可是網頁在開啟之後就會開始判斷螢幕尺寸，自動將視窗放大、並挪到左上角的位置。我們即使不確定目標使用者的螢幕大小，也能夠透過這種方式來讓Google Chrome以佔滿螢幕的尺寸開啟。&lt;/p&gt;
&lt;p&gt;這樣的做法也帶來另外的好處。因為開啟Google Chrome的時候並沒有指定--window-size和--window-position，所以在JavaScript使用window.open()的時候，視窗的位置跟尺寸就能直接指定，不會受到指令列參數的影響。&lt;/p&gt;
&lt;p&gt;此外，必須特別注意的是，這個做法是只有在網頁以「--app」應用程式模式開啟的時候，JavaScript才能自由調整視窗的尺寸和位置。如果是用普通的分頁開啟，上面的JavaScript程式碼就不會生效了。&lt;/p&gt;
&lt;hr&gt;

&lt;h2&gt;小結 / In closing&lt;/h2&gt;
&lt;p&gt;這篇介紹了讓Google Chrome以佔滿螢幕的形式開啟網頁的各種做法。裡面活用了指令列參數中的「--app」應用程式模式，搭配全螢幕的「--start-fullscreen」、最大化的「--start-maximized」、指定視窗尺寸與位置的「--window-size」和「--window-position」、以及讓JavaScript自行調整視窗尺寸與位置的語法「&lt;a href=&quot;https://www.w3schools.com/jsref/met_win_moveto.asp&quot; target=&quot;_blank&quot;&gt;window.moveTo()&lt;/a&gt;」與「&lt;a href=&quot;https://www.w3schools.com/jsref/met_win_resizeto.asp&quot; target=&quot;_blank&quot;&gt;window.resizeTo()&lt;/a&gt;」。每種方法都有各自的使用時機與優缺點，請依照你自己的需求使用。&lt;/p&gt;
&lt;p&gt;而這種透過指令列開啟Google Chrome的做法，不是只有這篇示範的Windows環境可以用，&lt;a href=&quot;https://www.chromium.org/developers/how-tos/run-chromium-with-flags&quot; target=&quot;_blank&quot;&gt;Linux和Mac也一樣可以用&lt;/a&gt;。這在要用自動化操作大量電腦的時候特別好用呢。&lt;/p&gt;
&lt;p&gt;以應用程式模式開啟的網頁，可以讓使用者比較容易專心在網頁的內容上，不會分心去操作其他功能。不過這種特殊模式有別於一般操作網頁的使用情境，有些教師會認為，讓學生自行開啟網頁、操作普通的Google Chrome，這也是學習的一環。&lt;/p&gt;
&lt;p&gt;這篇就先將方法記錄下來，要如何使用，就看個人囉。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;將網頁做成應用程式的其他方法 /&amp;nbsp;Make web pages into applications&lt;/h3&gt;
&lt;p&gt;除了這篇講述的方法之外，用獨立視窗開啟網頁的做法還有很多種。我以前寫過的「&lt;a href=&quot;http://blog.pulipuli.info/2018/05/html5appappapp-hybird-app-framework-for.html&quot; target=&quot;_blank&quot;&gt;用HTML5開發網頁APP、桌面APP、跟行動裝置APP：混合應用程式框架&lt;/a&gt;」這是用PhoneGap把網頁打包成應用程式的做法，比較複雜。Google Chrome也有內建&lt;a href=&quot;https://sofree.cc/chrome-shortcuts/&quot; target=&quot;_blank&quot;&gt;應用程式捷徑&lt;/a&gt;的功能，以前它不能使用擴充套件，但現在似乎就跟用--app開啟的方式差不多好用，只是仍然不能自訂圖示。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-RgLVnyaILWk/XqhWdjHUKSI/AAAAAAAEn-M/sCH1zATvkJEB-Tt4Yvj6I74-veLZvOjFQCK4BGAYYCw/s1600/2020-0428-232140-APPLICATIONIZE-Noel-SIS-seams-ms.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-RgLVnyaILWk/XqhWdjHUKSI/AAAAAAAEn-M/sCH1zATvkJEB-Tt4Yvj6I74-veLZvOjFQCK4BGAYYCw/s450/2020-0428-232140-APPLICATIONIZE-Noel-SIS-seams-ms.png&quot; title=&quot;2020-0428-232140-APPLICATIONIZE-Noel-SIS-seams-ms.png&quot; alt=&quot;2020-0428-232140-APPLICATIONIZE-Noel-SIS-seams-ms.png&quot; width=&quot;450&quot; height=&quot;195&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近我還看到一個有趣的網站：&lt;a href=&quot;https://applicationize.me/now&quot; target=&quot;_blank&quot;&gt;Applicationize&lt;/a&gt;，它能夠將網頁建立成Google Chrome應用程式。是的，就是那個即將在2022年關閉的&lt;a href=&quot;https://technews.tw/2020/01/17/google-is-finally-killing-off-chrome-apps/&quot; target=&quot;_blank&quot;&gt;Chrome APPs&lt;/a&gt;。雖然它已經是個走入末路的方式，但Applicationize建立Chrome應用程式的確是蠻簡單的，我很快地就把blog「布丁布丁吃什麼？」建立成Chrome應用程式了。大家可以按照下面步驟安裝看看：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2020/04/20200428-popup-center/blog.pulipuli.info.crx&quot; target=&quot;_blank&quot;&gt;下載「布丁布丁吃什麼？」Chrome APP安裝檔&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;打開你的Google Chrome的擴充功能頁面。網址是「&lt;a href=&quot;chrome://extensions/&quot;&gt;chrome://extensions/&lt;/a&gt;」&lt;/li&gt;
  &lt;li&gt;將安裝檔拖曳到擴充功能頁面，執行安裝&lt;/li&gt;
  &lt;li&gt;打開Chrome應用程式的頁面「&lt;a href=&quot;chrome://apps/&quot;&gt;chrome://apps/&lt;/a&gt;」，就可以看到「布丁布丁吃什麼？」應用程式安裝完成了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-rdHO6wxBIuA/XqhWdqLOX_I/AAAAAAAEn-Q/fgNayHcpgwgvHtpmMQxWuHgY9r0kpnAhQCK4BGAYYCw/s1600/2020-0428-233842-pupa-chen-HR-cw-mm-moom-gom-Ki-BE.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-rdHO6wxBIuA/XqhWdqLOX_I/AAAAAAAEn-Q/fgNayHcpgwgvHtpmMQxWuHgY9r0kpnAhQCK4BGAYYCw/s450/2020-0428-233842-pupa-chen-HR-cw-mm-moom-gom-Ki-BE.png&quot; title=&quot;2020-0428-233842-pupa-chen-HR-cw-mm-moom-gom-Ki-BE.png&quot; alt=&quot;2020-0428-233842-pupa-chen-HR-cw-mm-moom-gom-Ki-BE.png&quot; width=&quot;450&quot; height=&quot;206&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這裡的應用程式似乎會跟Chromebook同步的樣子，也算是一種特殊應用吧。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次用指令列參數以佔滿螢幕尺寸開啟Google Chrome的教學就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;你會有用到全螢幕開啟網頁的需求嗎？什麼情況下你會需要這種功能？&lt;/li&gt;
  &lt;li&gt;你會選擇使用那種模式開啟呢？全螢幕、最大化、還是佔滿螢幕尺寸的普通視窗呢？為什麼？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/5035947270094988165/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2020/04/google-chrome-how-to-make-google-chrome.html#comment-form' title='5 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/5035947270094988165'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/5035947270094988165'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2020/04/google-chrome-how-to-make-google-chrome.html' title='如何讓Google Chrome開啟時就佔滿整個螢幕並隱藏控制介面？ / How to make Google Chrome open to fill the entire screen and hide the control interface?'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//4.bp.blogspot.com/-lpXoZJCST6A/XqhWQcLo3qI/AAAAAAAEn8w/ydyojb9MXUAiTQEKopjtgReEgZTXnSwMwCK4BGAYYCw/s72-c/20-Google_Chrome_How_to_make_Google_cover.png" height="72" width="72"/><thr:total>5</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-2620239086645012498</id><published>2020-04-28T16:43:00.005+08:00</published><updated>2020-04-28T16:43:55.401+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="程式語言/JavaScript"/><title type='text'>​如何在前端瀏覽器用JavaScript處理過長的字串變數？活用虛擬DOM作為快取 / How to use JavaScript to deal with long string variables in the front-end browser? Use Virtual DOM as cache</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-aiKwfHVTM4k/XqfslUVTwwI/AAAAAAAEn4c/HyEgM-mS7OIPP2BXngWfjlveVr9iXZQvACK4BGAYYCw/s1600/18-JavaScript_DOM_How_to_use_JavaScript.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-aiKwfHVTM4k/XqfslUVTwwI/AAAAAAAEn4c/HyEgM-mS7OIPP2BXngWfjlveVr9iXZQvACK4BGAYYCw/s1600/18-JavaScript_DOM_How_to_use_JavaScript.png&quot; title=&quot;18-JavaScript_DOM_How_to_use_JavaScript.png&quot; alt=&quot;18-JavaScript_DOM_How_to_use_JavaScript.png&quot; class=&quot;original-size&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我會在網頁上使用&lt;a href=&quot;https://github.com/SheetJS/sheetjs&quot; target=&quot;_blank&quot;&gt;SheetJS js-xlsx&lt;/a&gt;讀取ODS試算表檔案的內容，&lt;wbr&gt;但最近發現檔案如果超過2.5MB，&lt;wbr&gt;在載入檔案輸入到字串的時候，就會造成瀏覽器崩潰當機。&lt;/p&gt;
&lt;p&gt;研究之後，我想到可以將字串建立成&lt;a href=&quot;https://cythilya.github.io/2017/03/31/virtual-dom/&quot; target=&quot;_blank&quot;&gt;虛擬DOM&lt;/a&gt;上的節點，&lt;wbr&gt;用來緩存過長的內容。在需要全部字串內容時，&lt;wbr&gt;再一一從節點取得緩存即可。&lt;/p&gt;
&lt;p&gt;以下我用兩個實際上的網頁作為例子，&lt;wbr&gt;一個用來說明沒有緩存的過長字串導致瀏覽器當掉的情況，&lt;wbr&gt;另一個是用虛擬DOM緩存，最後可以正常執行的情況。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;系統環境 / Environment&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-3WWSShK4_hg/XqfskpuWtiI/AAAAAAAEn38/rUBOJMJtqX010ROckup1bKRk5sEa6CuNwCK4BGAYYCw/s1600/2020-0428-140802-OZ-ou-caches-Manboard-Memory-PD.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-3WWSShK4_hg/XqfskpuWtiI/AAAAAAAEn38/rUBOJMJtqX010ROckup1bKRk5sEa6CuNwCK4BGAYYCw/s293/2020-0428-140802-OZ-ou-caches-Manboard-Memory-PD.png&quot; title=&quot;2020-0428-140802-OZ-ou-caches-Manboard-Memory-PD.png&quot; alt=&quot;2020-0428-140802-OZ-ou-caches-Manboard-Memory-PD.png&quot; width=&quot;293.031&quot; height=&quot;290.156&quot;&gt;&lt;/a&gt;&lt;a href=&quot;//2.bp.blogspot.com/-YjMRe_CxEzE/Xqfsk24R2rI/AAAAAAAEn4U/zReL_e_z3eAA4zoOn0Z01jUOQ8VYmAmOwCK4BGAYYCw/s1600/2020-0428-141024-Cou-Caches-Mainboard-Memory-Graphics.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-YjMRe_CxEzE/Xqfsk24R2rI/AAAAAAAEn4U/zReL_e_z3eAA4zoOn0Z01jUOQ8VYmAmOwCK4BGAYYCw/s291/2020-0428-141024-Cou-Caches-Mainboard-Memory-Graphics.png&quot; title=&quot;2020-0428-141024-Cou-Caches-Mainboard-Memory-Graphics.png&quot; alt=&quot;2020-0428-141024-Cou-Caches-Mainboard-Memory-Graphics.png&quot; width=&quot;291.5&quot; height=&quot;288.625&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這個實驗用的電腦環境是Windows 7的64位元版本，CPU是&lt;a href=&quot;https://ark.intel.com/content/www/tw/zh/ark/products/65719/intel-core-i7-3770-processor-8m-cache-up-to-3-90-ghz.html&quot; target=&quot;_blank&quot;&gt;Intel Core i7 3770&lt;/a&gt;，記憶體是DDR3 16GB。&lt;wbr&gt;瀏覽器是&lt;a href=&quot;https://www.google.com/intl/zh-TW/chrome/&quot; target=&quot;_blank&quot;&gt;Google Chrome&lt;/a&gt;的版本 81.0.4044.122 (正式版本) (64 位元)。&lt;/p&gt;
&lt;p&gt;如果你的硬體設備不一樣，而你瀏覽器不會當機的話，&lt;wbr&gt;請在下面留言跟我說，感謝。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;瀏覽器當掉：沒有緩存的過長字串 / Browser crashed: Long string variables with no cache&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-GJhdZrJ6CFc/XqfskiT_j2I/AAAAAAAEn4I/0gBW11PyZd0Ny6x479zBJCzcs5Zk1KPxgCK4BGAYYCw/s1600/2020-0428-142038-Save-too-long-string-to-variable.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-GJhdZrJ6CFc/XqfskiT_j2I/AAAAAAAEn4I/0gBW11PyZd0Ny6x479zBJCzcs5Zk1KPxgCK4BGAYYCw/s450/2020-0428-142038-Save-too-long-string-to-variable.png&quot; title=&quot;2020-0428-142038-Save-too-long-string-to-variable.png&quot; alt=&quot;2020-0428-142038-Save-too-long-string-to-variable.png&quot; width=&quot;450&quot; height=&quot;361&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pulipulichen.github.io/Weka-Cluster-Result-Analyzer/test/20200426-long-string/var.html&quot; target=&quot;_blank&quot;&gt;另開視窗&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pulipulichen/Weka-Cluster-Result-Analyzer/blob/master/test/20200426-long-string/var.html&quot; target=&quot;_blank&quot;&gt;原始碼&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這個網頁裡面的JavaScript會宣告一個out字串變數，然後加入347812747次「-」，那個「10%」就是現在加到幾次。為了避免整個畫面定住不能操作，我還加入了非同步的設計，但這跟這次的主題沒有直接關係。&lt;/p&gt;
&lt;p&gt;我刪掉不相關的程式碼之後，主要程式碼如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var&amp;nbsp;main&amp;nbsp;=&amp;nbsp;async&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;console.log(&#39;start&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;out&amp;nbsp;=&amp;nbsp;&#39;&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;limit&amp;nbsp;=&amp;nbsp;347812747&lt;br&gt;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(var&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;limit;&amp;nbsp;i++)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out&amp;nbsp;+=&amp;nbsp;&#39;-&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;document.write(&#39;Finish:&amp;nbsp;&#39;&amp;nbsp;+&amp;nbsp;out.length)&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按下「START」按鈕，網頁就會開始運作。當這個迴圈處理到一半左右，瀏覽器就會因為「Out of memory」(記憶體不足)而當機。整個流程動畫如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-Uh5uQcnYehc/Xqfskwmm9sI/AAAAAAAEn4Y/s-itSlEEMrAK1GY176DwkNvMX5r-zABjACK4BGAYYCw/s1600/no-cache.gif&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-Uh5uQcnYehc/Xqfskwmm9sI/AAAAAAAEn4Y/s-itSlEEMrAK1GY176DwkNvMX5r-zABjACK4BGAYYCw/s394/no-cache.gif&quot; title=&quot;no-cache.gif&quot; alt=&quot;no-cache.gif&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這可能是「out += &#39;-&#39;」導致的錯誤。我們也許不能在單一變數裡面加入太長的字串。&lt;/p&gt;
&lt;p&gt;我試過拆開成多個變數，或是把它存成陣列，一樣是不能順利跑完迴圈，跑到一半就會當掉。後來我才想到，我們還有DOM可以拿來做快取呢。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;成功處理過長字串：使用虛擬DOM緩存 / Deal with long string variables with virtual DOM cache&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-vYqiM0gUcDE/XqfskxLPU4I/AAAAAAAEn4Q/bi41Z_s8L6AQwwamdqFgCszkLgVE3EzCQCK4BGAYYCw/s1600/2020-0428-144831.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-vYqiM0gUcDE/XqfskxLPU4I/AAAAAAAEn4Q/bi41Z_s8L6AQwwamdqFgCszkLgVE3EzCQCK4BGAYYCw/s450/2020-0428-144831.png&quot; title=&quot;2020-0428-144831.png&quot; alt=&quot;2020-0428-144831.png&quot; width=&quot;450&quot; height=&quot;361&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pulipulichen.github.io/Weka-Cluster-Result-Analyzer/test/20200426-long-string/var-with-dom.html&quot; target=&quot;_blank&quot;&gt;另開視窗&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pulipulichen/Weka-Cluster-Result-Analyzer/blob/master/test/20200426-long-string/var-with-dom.html&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px;&quot;&gt;原始碼&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這個網頁的JavaScript跟前面做的事情差不多，差別在於，迴圈每10000000次的時候，就會將字串內容轉存到新的網頁節點&amp;lt;textarea&amp;gt;裡面，並擺在網頁&amp;lt;body&amp;gt;的最後面隱藏起來。主要程式碼如下，我用紅字標示跟前面程式碼主要差別的語法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var&amp;nbsp;main&amp;nbsp;=&amp;nbsp;async&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;out&amp;nbsp;=&amp;nbsp;&#39;&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;cache&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;cacheList&amp;nbsp;=&amp;nbsp;[]&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;limit&amp;nbsp;=&amp;nbsp;347812747&lt;br&gt;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(var&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;limit;&amp;nbsp;i++)&amp;nbsp;{&lt;br&gt;&lt;font color=&quot;#ff0000&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(i&amp;nbsp;%&amp;nbsp;10000000&amp;nbsp;===&amp;nbsp;0&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;out&amp;nbsp;!==&amp;nbsp;&#39;&#39;)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cache&amp;nbsp;=&amp;nbsp;document.createElement(&#39;textarea&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cache.value&amp;nbsp;=&amp;nbsp;out&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cache.style.display&amp;nbsp;=&amp;nbsp;&#39;none&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cacheList.push(cache)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out&amp;nbsp;=&amp;nbsp;&#39;&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/font&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out&amp;nbsp;+=&amp;nbsp;&#39;-&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&lt;br&gt;&lt;font color=&quot;#ff0000&quot;&gt;&amp;nbsp;&amp;nbsp;var&amp;nbsp;tempOut&amp;nbsp;=&amp;nbsp;out&lt;br&gt;&amp;nbsp;&amp;nbsp;out&amp;nbsp;=&amp;nbsp;&#39;&#39;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;cacheList.length;&amp;nbsp;i++)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out&amp;nbsp;+=&amp;nbsp;cacheList[i].value&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cacheList[i].remove()&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;out&amp;nbsp;+=&amp;nbsp;tempOut&lt;/font&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;document.write(&#39;Finish:&amp;nbsp;&#39;&amp;nbsp;+&amp;nbsp;out.length)&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;像是&amp;lt;textarea&amp;gt;這種HTML元素是網頁上的文件物件模型(Document Object Model, DOM)。對Google Chrome來說，處理DOM的記憶體和處理JavaScript的記憶體似乎是分開處理。將JavaScript中過長的字串變數改為DOM之後，就不會發生記憶體不足的情況。除了使用&amp;lt;textarea&amp;gt;之外，也可以使用&amp;lt;div&amp;gt;來保存資料，似乎是一樣的效果。&lt;/p&gt;
&lt;p&gt;值得注意的是，我雖然宣告了&amp;lt;textarea&amp;gt;元素，但並沒有把它寫入到網頁上，而是讓它保持虛擬DOM (Virtual DOM)的狀態。反之，如果把它寫入到網頁上，網頁效率會被大量拖慢，甚至會讓瀏覽器看起來像是要當機一樣。所以還是讓它維持虛擬DOM就好。&lt;/p&gt;
&lt;p&gt;接下來讓我們來看看整個操作流程。跟前面的程式碼一樣，按下「START」按鈕，網頁就會開始運作。整個操作流程如下面的錄影，最後看到「Finish:&amp;nbsp;347812747」就表示程式跑完了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-EYl5MNpMG2s/Xqfsq3xhCTI/AAAAAAAEn4k/auqtHwK-SyAurdB00S6ei_NOjSRpdOkQwCK4BGAYYCw/s1600/with-dom.gif&quot;&gt;&lt;img src=&quot;//2.bp.blogspot.com/-EYl5MNpMG2s/Xqfsq3xhCTI/AAAAAAAEn4k/auqtHwK-SyAurdB00S6ei_NOjSRpdOkQwCK4BGAYYCw/s412/with-dom.gif&quot; title=&quot;with-dom.gif&quot; alt=&quot;with-dom.gif&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;為什麼最後只顯示out的字串長度呢？我試過把out的內容用document.write(out)寫在網頁上，但這會導致網頁當機。這似乎也是表示一次處理過長的字串時會出現問題的意思。不過這個out變數在其他JavaScript程式碼中是可以正常使用，像是我可以用out.length來取得它的字串長度。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / Conclusion&lt;/h2&gt;
&lt;p&gt;這篇文章說明了在網頁使用JavaScript處理過長字串中，使用虛擬DOM來做快取來避免記憶體不足、瀏覽器當機的情況。經過這次經驗，我才真正感受到現在主流的JavaScript技術採用&lt;a href=&quot;https://cythilya.github.io/2017/03/31/virtual-dom/&quot; target=&quot;_blank&quot;&gt;虛擬DOM&amp;nbsp;&lt;/a&gt;&lt;a href=&quot;https://cythilya.github.io/2017/03/31/virtual-dom/&quot; target=&quot;_blank&quot;&gt;(Virtual DOM)&lt;/a&gt;的理由。出乎意料之外的好用。&lt;/p&gt;
&lt;h3&gt;其他技巧：非同步的睡眠 / sleep()&lt;/h3&gt;
&lt;p&gt;這篇除了用虛擬DOM來做緩存之外，我還在迴圈執行過程中加入了sleep()，使網頁不會因為迴圈執行過久導致網頁畫面結凍、被使用者誤認為當機。這個技巧在「&lt;a href=&quot;https://fred-zone.blogspot.com/2017/04/javascript-asyncawait.html&quot; target=&quot;_blank&quot;&gt;JavaScript async/await 的奇淫技巧&lt;/a&gt;」這篇裡面也有講到，該篇將它命名為「delay()」。&lt;/p&gt;
&lt;p&gt;我宣告的sleep()程式碼如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;function&amp;nbsp;sleep&amp;nbsp;()&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;Promise(function&amp;nbsp;(resolve)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setTimeout(function&amp;nbsp;()&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resolve(true)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&amp;nbsp;10)&lt;br&gt;&amp;nbsp;&amp;nbsp;})&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用的語法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;await&amp;nbsp;sleep()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因為這裡用到了async/await，你程式碼裡面的函式要記得改成非同步的async，而這個語法在Internet Explorer裡面無法運作之外，其他主流瀏覽器都能正常運作。關於瀏覽器相容性，請看&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Statements/async_function&quot; target=&quot;_blank&quot;&gt;MDN web docs&lt;/a&gt;的說明。
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次關於過長字串的處理方式就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;你有遇到過JavaScript程式碼導致瀏覽器記憶體不足的情況嗎？那是什麼情況呢？&lt;/li&gt;
  &lt;li&gt;遇到上述狀況時，你都是怎麽處理的呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/2620239086645012498/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2020/04/javascriptdom-how-to-use-javascript-to.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/2620239086645012498'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/2620239086645012498'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2020/04/javascriptdom-how-to-use-javascript-to.html' title='​如何在前端瀏覽器用JavaScript處理過長的字串變數？活用虛擬DOM作為快取 / How to use JavaScript to deal with long string variables in the front-end browser? Use Virtual DOM as cache'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//2.bp.blogspot.com/-aiKwfHVTM4k/XqfslUVTwwI/AAAAAAAEn4c/HyEgM-mS7OIPP2BXngWfjlveVr9iXZQvACK4BGAYYCw/s72-c/18-JavaScript_DOM_How_to_use_JavaScript.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-3078877076330207132</id><published>2019-10-18T23:05:00.001+08:00</published><updated>2019-10-18T23:05:56.431+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Programming/AdonisJs"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Node.js"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Vue.js"/><title type='text'>跟AdonisJs與Vue一起玩的那些事兒 / Diary about AdonisJs and Vue</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-kxsQTG-tVFw/XanUYmQpmJI/AAAAAAAEaQU/Xk1-OS1Hg9UPcYwK2zJbPnu3pKkqcZQxQCK4BGAYYCw/s1600/17-AdonisJs_Vue_Diary_about_AdonisJs.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-kxsQTG-tVFw/XanUYmQpmJI/AAAAAAAEaQU/Xk1-OS1Hg9UPcYwK2zJbPnu3pKkqcZQxQCK4BGAYYCw/s1600/17-AdonisJs_Vue_Diary_about_AdonisJs.png&quot; title=&quot;17-AdonisJs_Vue_Diary_about_AdonisJs.png&quot; alt=&quot;17-AdonisJs_Vue_Diary_about_AdonisJs.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;繼上次的「&lt;a href=&quot;http://blog.pulipuli.info/2019/10/nodejscorsadonisjs-practice-of-build.html&quot; target=&quot;_blank&quot;&gt;AdonisJs聊天室&lt;/a&gt;」之後，AdonisJs框架 + Vue.js + Webpack組合看起來雖然很好，但實際使用還是有很多細節不盡人意。這邊繼續記錄一下開發系統的一些瑣碎事情。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;關於AdonisJs /&amp;nbsp; About AdonisJs&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-OHih3sjdOpY/XanUYeMxV6I/AAAAAAAEaP8/7yJS_Q6HGiY4xaXD2zK3cxqfBRdHMF1tQCK4BGAYYCw/s1600/2019-1010-212545-JETS-Quick-Start-Guides-Recipes.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-OHih3sjdOpY/XanUYeMxV6I/AAAAAAAEaP8/7yJS_Q6HGiY4xaXD2zK3cxqfBRdHMF1tQCK4BGAYYCw/s450/2019-1010-212545-JETS-Quick-Start-Guides-Recipes.png&quot; title=&quot;2019-1010-212545-JETS-Quick-Start-Guides-Recipes.png&quot; alt=&quot;2019-1010-212545-JETS-Quick-Start-Guides-Recipes.png&quot; width=&quot;450&quot; height=&quot;241&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://adonisjs.com/&quot; target=&quot;_blank&quot;&gt;AdonisJs&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;我們先來談談AdonisJs的部分。&lt;/p&gt;
&lt;h3&gt;令人困惑的資料庫操作 / Confusing database management&lt;/h3&gt;
&lt;p&gt;我在前一篇有講到AdonisJs對於控制資料庫的ORM有不錯的包裝。但實際使用之後，才發現它有很多細節並不相同。&lt;/p&gt;
&lt;p&gt;首先，在AdonisJs裡面與資料庫相關的類別有三種：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Model模型物件是指&lt;a href=&quot;https://adonisjs.com/docs/4.0/lucid&quot; target=&quot;_blank&quot;&gt;LUCID&lt;/a&gt;，它的原始碼跟可用的方法請看&lt;a href=&quot;https://github.com/adonisjs/adonis-lucid/blob/develop/src/Lucid/Model/index.js&quot; target=&quot;_blank&quot;&gt;adonis-lucid/src/Lucid/Model/index.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Model可用的指令大部分，特別是query()，皆會回傳查詢物件&lt;a href=&quot;https://adonisjs.com/docs/4.0/query-builder&quot; target=&quot;_blank&quot;&gt;Query Builder&lt;/a&gt;，它的原始碼則是&lt;a href=&quot;https://github.com/adonisjs/adonis-lucid/blob/develop/src/Lucid/QueryBuilder/index.js&quot; target=&quot;_blank&quot;&gt;adonis-lucid/src/Lucid/QueryBuilder/index.js&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;查詢物件Query Builder，搭配await 執行fetch()查詢之後會回傳結果物件Serializer。它的原始碼是&lt;a href=&quot;https://github.com/adonisjs/adonis-lucid/blob/develop/src/Lucid/Serializers/Vanilla.js&quot; target=&quot;_blank&quot;&gt;adonis-lucid/src/Lucid/Serializers/Vanilla.js&lt;/a&gt;。而結果物件中的屬性rows陣列中，才會包含Models。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這三種不同類別可用的方法都不相同，這造成實務開發的時候時常令人混亂。我現在操作的變數到底是Model？還是QueryBuilder？還是Serializer？&lt;/p&gt;
&lt;p&gt;有時候QueryBuilder忘記加上fetch()時，AdonisJs的防呆會提示你要做這個動作。但如果fetch()忘記搭配await的時候，它回傳就是Promise物件，並不是我們預期中的Serializer查詢結果物件。這些小細節讓人在撰寫的時候時常碰壁。&lt;/p&gt;
&lt;h3&gt;要怎麼從LUCID模型結合多個資料表呢？ / How to join multiple tables from LUCID model?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-kpV-C1JzUrc/XanUYh-VVhI/AAAAAAAEaQQ/_Bwop3CdZSIepTyELUEg-82_OF8Yc5PBgCK4BGAYYCw/s1600/HasManyThrough_dcr86k.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-kpV-C1JzUrc/XanUYh-VVhI/AAAAAAAEaQQ/_Bwop3CdZSIepTyELUEg-82_OF8Yc5PBgCK4BGAYYCw/s450/HasManyThrough_dcr86k.png&quot; title=&quot;HasManyThrough_dcr86k.png&quot; alt=&quot;HasManyThrough_dcr86k.png&quot; width=&quot;450&quot; height=&quot;110&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://adonisjs.com/docs/4.1/relationships#_many_through&quot; target=&quot;_blank&quot;&gt;AdonisJs Relationships&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;不過最令我困擾的，大概就是三個以上資料表串接的情境了。&lt;/p&gt;
&lt;p&gt;LUCID模型有提供Many Through的方法。如上圖所示，我們可以從Country模型 (資料表為countries)開始，透過User模型(資料表為users)來查詢Post模型(資料表為posts)。這個方法叫做&lt;a href=&quot;https://adonisjs.com/docs/4.1/relationships#_many_through&quot; target=&quot;_blank&quot;&gt;Many Through&lt;/a&gt;，它的原始碼在&lt;a href=&quot;https://github.com/adonisjs/adonis-lucid/blob/develop/src/Lucid/Relations/HasManyThrough.js&quot; target=&quot;_blank&quot;&gt;HasManyThrough.js&lt;/a&gt;裡面。&lt;/p&gt;
&lt;p&gt;我們可以用Many Through從上層模型查到下層模型，那如果我們要從下層模型找到它的上層模型，甚至是要找到上層模型其他的下層模型時，那得怎麼做才行呢？從&lt;a href=&quot;https://github.com/adonisjs/adonis-lucid/blob/develop/src/Lucid/Model/index.js&quot; target=&quot;_blank&quot;&gt;LUCID Model的原始碼&lt;/a&gt;來看，它似乎是沒有Many Through之外的Through方法了。&lt;/p&gt;
&lt;p&gt;當然，我們可以轉而使用&lt;a href=&quot;https://adonisjs.com/docs/4.1/query-builder#_joins&quot; target=&quot;_blank&quot;&gt;QueryBuilder的Joins&lt;/a&gt;方法，但這時候回傳的就不是Model，似乎是普通的JSON物件，這就喪失了Model的眾多功能。我們也是可以用id再去用靜態方法find(id)來找到Model，但這樣會造成大量的SQL查詢，拖慢效能。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://forum.adonisjs.com/t/lucid-models-how-to-access-linked-models/453&quot; target=&quot;_blank&quot;&gt;Lucid Models: How to access linked models?&lt;/a&gt;這篇中，發問者就有提到它想用以下方法來取得Door底下的logs，但以下程式碼是不能運作的。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Route.get(&#39;test&#39;,&amp;nbsp;async&amp;nbsp;()&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt; return&amp;nbsp;await&amp;nbsp;Door.find(1).logs()&lt;br&gt;})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這是為什麼呢？因為在find(1)的時候會回傳的是查詢物件QueryBuilder。而QueryBuilder要搭配await跟fetch()方法才能回傳查詢結果Serializer。再來Serializer還要用first()或是rows[0]才能找到Door Model，然後才能用Door Model的logs()方法。&lt;/p&gt;
&lt;p&gt;該篇下面&lt;a href=&quot;https://forum.adonisjs.com/t/lucid-models-how-to-access-linked-models/453/2?u=pulipulichen&quot; target=&quot;_blank&quot;&gt;rohitdalal67&lt;/a&gt;有提出一個解決方法，就是從DoorLog Model使用QueryBuilder，用join跟where來取得的方式。這個思維可以解決多資料表之間查詢的問題，但是程式碼非常難以閱讀，讓大家見識見識：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;const&amp;nbsp;report&amp;nbsp;=&amp;nbsp;await&amp;nbsp;Report.query().select(&#39;*&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.with(&#39;report_categories&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.scope(&#39;report_categories&#39;,&amp;nbsp;(builder)&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;builder.select(&#39;report_categories.*&#39;,&#39;categories.image&amp;nbsp;as&amp;nbsp;category_image&#39;);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;builder.where(&#39;deleted&#39;,&amp;nbsp;&#39;0&#39;);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;builder.join(&#39;categories&#39;,&#39;categories.id&#39;,&#39;report_categories.category_id&#39;);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})  &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.where(&#39;id&#39;,&#39;=&#39;,data.report_id)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.first();&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;嗯，我可以寫SQL就好嗎？&lt;/p&gt;
&lt;p&gt;大家對於資料庫的需求千變萬化，AdonisJs並非一個專門處理資料庫的框架，我可以理解它的不足之處。它的LUCID Model已經能夠處理80%常見的資料庫問題，這點就讓我十分感謝了。&lt;/p&gt;
&lt;p&gt;剩下20%，需要處理多資料表的時候。我再像想辦法吧。&lt;/p&gt;
&lt;h3&gt;WebSockets可以CORS嗎？ / Could I use WebSockets between cross domains?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-XOql4KXmtzA/XanUYZbMTqI/AAAAAAAEaP0/y9nWdLPStqwr63yj_HLP9ywVNDwIrB_DACK4BGAYYCw/s1600/websockets.jpg&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-XOql4KXmtzA/XanUYZbMTqI/AAAAAAAEaP0/y9nWdLPStqwr63yj_HLP9ywVNDwIrB_DACK4BGAYYCw/s450/websockets.jpg&quot; title=&quot;websockets.jpg&quot; alt=&quot;websockets.jpg&quot; width=&quot;450&quot; height=&quot;364&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://kknews.cc/code/kvege5b.html&quot; target=&quot;_blank&quot;&gt;一文讓你搞懂WebSocket原理&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;之前使用的&lt;a href=&quot;https://feathersjs.com/&quot; target=&quot;_blank&quot;&gt;Feathers&lt;/a&gt;框架，它預設的前後端溝通方式是用WebSockets。用WebSockets建構的聊天室，運作起來非常輕快、流暢。&lt;/p&gt;
&lt;p&gt;接下來我在研究Feathers能不能支援讓客戶端從不同網站上跟伺服器交換資訊，也就是&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/HTTP/CORS&quot; target=&quot;_blank&quot;&gt;跨網域資源共用(Cross-Origin Resource Sharining, CORS)&lt;/a&gt;的時候，發現Feathers以WebSockets客戶端&lt;a href=&quot;https://docs.feathersjs.com/api/client/socketio.html&quot; target=&quot;_blank&quot;&gt;Socket.io&lt;/a&gt;並不能支援CORS，但它的&lt;a href=&quot;https://docs.feathersjs.com/api/client/rest.html&quot; target=&quot;_blank&quot;&gt;REST Client&lt;/a&gt;在調整後則是可以使用。&lt;/p&gt;
&lt;p&gt;因為這件事情，讓我以為WebSockets只能用在同網域上。後來看到一篇文章在討論WebSockets時提到安全性問題中對於跨網域的處理方式時，我才發現WebSockets似乎實際上並沒有這方面的限制。當時可能還是Feathers框架內部的設定與資安限制，才導致CORS的時候不能使用。&lt;/p&gt;
&lt;p&gt;這就讓我想要試試看AdonisJs的&lt;a href=&quot;https://adonisjs.com/docs/4.1/websocket&quot; target=&quot;_blank&quot;&gt;WebSocket&lt;/a&gt;功能。教學裡面有提到怎麽用WebSocket建立聊天室，我先試著把文件提到的檔案建立起來，不過在用指令「adonis install @adonisjs/websocket」安裝WebSocket套件時，我的其他套件就出現了各種問題。&lt;/p&gt;
&lt;h3&gt;裝套件裝到壞掉 / &quot;Module not found&quot; error&lt;/h3&gt;
&lt;p&gt;我在研究AdonisJs的File Storage跟WebSocket的時候，都需要用「adonis install」指令安裝套件。但這些套件安裝下來，不知為何都會導致我專案中其他的套件發生「Module not found」錯誤。&lt;/p&gt;
&lt;p&gt;最麻煩的是，裝到最後連「adonis」指令都不能使用，發生了以下錯誤：&lt;/p&gt;
&lt;blockquote&gt;TypeError: Class extends value undefined is not a constructor or null&lt;/blockquote&gt;
&lt;p&gt;「&lt;a href=&quot;https://github.com/adonisjs/ace/issues/109&quot; target=&quot;_blank&quot;&gt;class BaseCommand extends ace.Command&lt;/a&gt;」這串討論中，最後提出的解決方法是重新安裝@adonisjs/ace套件，但要注意的是，因為我們一開始的@adonisjs/cli是安裝在全域目錄，所以這時候也要用「npm -g i @adonisjs/ace」在全域目錄安裝才行。不過實際上我並不確定這是不是最佳的解法，我嘗試了裝在專案裡面、用npm-link連接等等各種方法，最後不知為何又能繼續運作了。&lt;/p&gt;
&lt;p&gt;對於其他套件中遇到「Module not found」錯誤的處理方式，我就整理成另一篇「&lt;a href=&quot;http://blog.pulipuli.info/2019/10/nodejsnpm-link-how-to-handle-module-not.html&quot; target=&quot;_blank&quot;&gt;Node.js找不到模組？在npm-link底下的處理方法&lt;/a&gt;」說明。&lt;/p&gt;
&lt;p&gt;Node.js仰賴大量套件，套件又分成適用於專案內部的區域套件、安裝在全域目錄的全域套件、從專案內部連接到全域目錄的套件。大部分套件可以安裝在專案內的區域目錄，不過也有很多套件必須以全域目錄安裝，這時候又會跟npm-link連結的套件相互衝突。當這些套件出現了相依問題時，往往令人覺得十分棘手啊。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;聊聊Vue.js / About Vue.js&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-p8zohiLzsjo/XanUYUe4FBI/AAAAAAAEaQM/TGFTd557AtYtDnXvCVJNq_Fa-pDDyyy0gCK4BGAYYCw/s1600/Vue.JS_Logo_transparent_PNG.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-p8zohiLzsjo/XanUYUe4FBI/AAAAAAAEaQM/TGFTd557AtYtDnXvCVJNq_Fa-pDDyyy0gCK4BGAYYCw/s450/Vue.JS_Logo_transparent_PNG.png&quot; title=&quot;Vue.JS_Logo_transparent_PNG.png&quot; alt=&quot;Vue.JS_Logo_transparent_PNG.png&quot; width=&quot;450&quot; height=&quot;389&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.stickpng.com/img/icons-logos-emojis/tech-companies/vue-js-logo&quot; target=&quot;_blank&quot;&gt;StickPNG&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;講完了後端的AdonisJs框架，再來講講前端的Vue.js。&lt;/p&gt;
&lt;h3&gt;組件的插槽 / Slot of component&lt;/h3&gt;
&lt;p&gt;Vue.js能夠用大量組件(component)所組成。而組件有許多可供客製化調整的設定，包括屬性(prop)、事件(event)、甚至是組件的內容，也就是插槽(slot)。以下我就直接用slot來講插槽這件事情。&lt;/p&gt;
&lt;p&gt;slot中最好用的是&lt;a href=&quot;https://vuejs.org/v2/guide/components-slots.html#Named-Slots&quot; target=&quot;_blank&quot;&gt;帶有名稱的slot (Named Slots)&lt;/a&gt;，可以視為組件模板中部分填空位置。在組件樣板中可以這樣寫：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div&amp;nbsp;class=&quot;container&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;header&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;slot&amp;nbsp;name=&quot;header&quot;&amp;gt;&amp;lt;/slot&amp;gt;&lt;/font&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/header&amp;gt;&lt;br&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;紅字的&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;slot name=&quot;header&quot; /&amp;gt;&lt;/font&gt;標籤，表示可以供人客製化內容的區塊。&lt;/p&gt;
&lt;p&gt;接下來，要用該組件的時候，我們可以在組件設定中指定&amp;lt;slot name=&quot;header&quot;/&amp;gt;要顯示的內容：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;base-layout&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;template&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;v-slot:header&lt;/font&gt;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;h1&amp;gt;Here&amp;nbsp;might&amp;nbsp;be&amp;nbsp;a&amp;nbsp;page&amp;nbsp;title&amp;lt;/h1&amp;gt;&lt;/font&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/template&amp;gt;&lt;br&gt;&amp;lt;/base-layout&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;lt;template&amp;gt;標籤的屬性「&lt;font color=&quot;#ff0000&quot;&gt;v-slot:header&lt;/font&gt;」的意思，就是要將&amp;lt;template&amp;gt;標籤的內容放到組件內&amp;lt;slot name=&quot;header&quot;&amp;gt;裡面。&lt;/p&gt;
&lt;h4&gt;inline-template屬性 / &amp;lt;template&amp;gt; with &quot;inline-template&quot;&lt;/h4&gt;
&lt;p&gt;原本帶有名字的slot使用起來應該很直覺，不過實際使用的時候我卻遭遇了一些問題。奇怪的是，現在這個問題又消失了。我還是在這邊記錄一下我遇到的狀況吧。&lt;/p&gt;
&lt;p&gt;如果我們要在&amp;lt;template&amp;gt;裡面做資料綁定的話，直接用需要編譯的語法，就會跳出錯誤訊息。舉例來說，我們的VM中有title資料。在原本的樣板中寫法是：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;h1&amp;gt;{{&amp;nbsp;title&amp;nbsp;}}&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但如果在組件的slot中用{{ title }}的時候，這樣寫會發生錯誤：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;base-layout&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;template&amp;nbsp;v-slot:header&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;h1&amp;gt;{{&amp;nbsp;title&amp;nbsp;}}&amp;lt;/h1&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/template&amp;gt;&lt;br&gt;&amp;lt;/base-layout&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vue.js官方的&lt;a href=&quot;https://vuejs.org/v2/guide/components-slots.html&quot; target=&quot;_blank&quot;&gt;Slots說明&lt;/a&gt;中有講到插槽作用域slot-scope等一些細節，但看起來這似乎是已經要捨棄的特色，我看不太懂怎麼用。最後我是在「&lt;a href=&quot;https://kuro.tw/posts/2017/09/21/VueJS-元件載入模板-template-的幾種方式/&quot; target=&quot;_blank&quot;&gt;VueJS 元件載入模板 (template) 的幾種方式&lt;/a&gt;」這篇中找到了&lt;a href=&quot;https://vuejs.org/v2/guide/components-edge-cases.html#Inline-Templates&quot; target=&quot;_blank&quot;&gt;inline-template&lt;/a&gt;的用法。&lt;/p&gt;
&lt;p&gt;為&amp;lt;template&amp;gt;加上inline-template之後，&amp;lt;template&amp;gt;的內容就由上層的VM來管理，因此就能夠使用{{ title }}綁定資料了。改寫後的語法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;base-layout&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;template&amp;nbsp;v-slot:header&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;inline-template&lt;/font&gt;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;h1&amp;gt;{{&amp;nbsp;title&amp;nbsp;}}&amp;lt;/h1&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/template&amp;gt;&lt;br&gt;&amp;lt;/base-layout&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;雖然是這樣說，到昨天為止，我的確需要加上inline-template屬性才能正常執行。但今天拿掉inline-template來測試看看，居然也沒發生什麼問題，執行起來很正常。難道是我更新Vue.js版本了嗎？不太確定發生了什麼事情。&lt;/p&gt;
&lt;h3&gt;錯誤處理 / Error handle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-rbd_Kg9rScw/XanUYeRJq5I/AAAAAAAEaQE/qauBKkFfBb8EE_pPDkD3huYPP6ndGHhsACK4BGAYYCw/s1600/2019-1018-222153-Domaian-Management-Database-Error.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-rbd_Kg9rScw/XanUYeRJq5I/AAAAAAAEaQE/qauBKkFfBb8EE_pPDkD3huYPP6ndGHhsACK4BGAYYCw/s450/2019-1018-222153-Domaian-Management-Database-Error.png&quot; title=&quot;2019-1018-222153-Domaian-Management-Database-Error.png&quot; alt=&quot;2019-1018-222153-Domaian-Management-Database-Error.png&quot; width=&quot;450&quot; height=&quot;226&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這段期間我做得最有成就感的功能，大概就是這個錯誤處理了。&lt;/p&gt;
&lt;p&gt;開發初期不可避免的就是發生錯誤。那發生錯誤的時候，我們需要知道錯誤內容是什麼、發生錯誤的檔案在那裡、發生錯誤時的情境為何。以往我們必須仰賴瀏覽器開發者工具的Console檢視錯誤，或是用Network檢視伺服器端的錯誤訊息。這些頻繁的操作都會讓偵錯、修正變得令人十分煩躁，所以我決定來做個比較容易觀看的錯誤處理功能。&lt;/p&gt;
&lt;p&gt;首先，在系統中的錯誤可能來自三個地方：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;客戶端Vue.js之內發生的錯誤。&lt;br&gt;&lt;/li&gt;
  &lt;li&gt;客戶端Vue.js以外發生的錯誤。&lt;/li&gt;
  &lt;li&gt;伺服器端的錯誤。這邊是指我用AdonisJs框架提供的服務。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這三者處理的方式不大相同。我的目標是取得不同地方發生的錯誤，把它儲存在error資料中，再放到專門顯示錯誤的Vue組件中顯示內容。&lt;/p&gt;
&lt;p&gt;前兩者在客戶端發生的錯誤，我參考了「&lt;a href=&quot;https://www.raymondcamden.com/2019/05/01/handling-errors-in-vuejs&quot; target=&quot;_blank&quot;&gt;Handling Errors in Vue.js&lt;/a&gt;」這篇的做法，對於第一個情況：在Vue.js之內的錯誤，可以用以下方式處理：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Vue.config.errorHandler&amp;nbsp;&amp;nbsp;=&amp;nbsp;function(err,&amp;nbsp;vm,&amp;nbsp;info)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;VueController.data.error&amp;nbsp;=&amp;nbsp;err&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第二個情況，在Vue.js以外發生的錯誤，則可以用以下方式處理：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;window.onerror&amp;nbsp;=&amp;nbsp;function(message,&amp;nbsp;source,&amp;nbsp;lineno,&amp;nbsp;colno,&amp;nbsp;error)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;VueController.data.error&amp;nbsp;=&amp;nbsp;error&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最後第三個情況，因為我們跟伺服器溝通所使用的工具是axios，所以我們要在axios之外，使用try catch來捕捉錯誤。寫法例如：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;try&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;let&amp;nbsp;result&amp;nbsp;=&amp;nbsp;await&amp;nbsp;axios.get(path,&amp;nbsp;options)&lt;br&gt;&amp;nbsp;&amp;nbsp;return&amp;nbsp;result.data&lt;br&gt;}&lt;br&gt;catch&amp;nbsp;(error)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;VueController.data.error&amp;nbsp;=&amp;nbsp;error&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-m7yIdk7khYI/XanUcAtu-UI/AAAAAAAEaQg/fVxlungiY9IRKpeoyAVGJiiGgeDweXDcQCK4BGAYYCw/s1600/2019-1018-223345-Database-Error-atDomain-ist-app.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-m7yIdk7khYI/XanUcAtu-UI/AAAAAAAEaQg/fVxlungiY9IRKpeoyAVGJiiGgeDweXDcQCK4BGAYYCw/s450/2019-1018-223345-Database-Error-atDomain-ist-app.png&quot; title=&quot;2019-1018-223345-Database-Error-atDomain-ist-app.png&quot; alt=&quot;2019-1018-223345-Database-Error-atDomain-ist-app.png&quot; width=&quot;450&quot; height=&quot;216&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最後就是在顯示錯誤的組件中剖析錯誤訊息error物件，一一將訊息顯示在畫面上。對於遠端伺服器的錯誤訊息方面，使用AdonisJs的HttpException類別可以將錯誤訊息以JSON的方式回傳，這時候error.response.data.error中就可以找到它回傳的訊息以及發生錯誤的檔案。再來客戶端的錯誤則可以從error.message和error.stack當中取得。如果是伺服器端的錯誤，我還做了個重複發送http請求的功能，當伺服器端修正之後就可以再次發送相同的資訊，看看能不能順利執行。&lt;/p&gt;
&lt;p&gt;不過錯誤處理的功能還不算完成。目前還有兩個問題有待解決。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-zucD2B28fU4/XanUcLzBG4I/AAAAAAAEaQs/9r_TCy5oqSQih8h0xXYoAl478xg3wWDAACK4BGAYYCw/s1600/2019-1018-224224-DR-emmg-Cons-Network-Sources-el.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-zucD2B28fU4/XanUcLzBG4I/AAAAAAAEaQs/9r_TCy5oqSQih8h0xXYoAl478xg3wWDAACK4BGAYYCw/s450/2019-1018-224224-DR-emmg-Cons-Network-Sources-el.png&quot; title=&quot;2019-1018-224224-DR-emmg-Cons-Network-Sources-el.png&quot; alt=&quot;2019-1018-224224-DR-emmg-Cons-Network-Sources-el.png&quot; width=&quot;450&quot; height=&quot;201&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第一個問題是我用前述三種方法捕捉到的錯誤，裡面的資訊顯然還是沒有開發者工具的console豐富。我用來顯示錯誤的組件雖然有列出錯誤發生在那個檔案，但也只有三行，而且缺乏source map的支援，沒辦法分辨這個錯誤到底是發生在編譯前的那個檔案裡面。右邊console的資訊顯然就準確許多。&lt;/p&gt;
&lt;p&gt;如果要準確偵錯的話，開發者工具還是不可或缺的吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-qDsfAzwDwfk/XanUcD2BomI/AAAAAAAEaQk/IKulXqrza_gqecg2WEVJOr8E2V3zTPEdwCK4BGAYYCw/s1600/2019-1018-224641-ton-WebpageListhtml-Webpagejs-WebpageListjs.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-qDsfAzwDwfk/XanUcD2BomI/AAAAAAAEaQk/IKulXqrza_gqecg2WEVJOr8E2V3zTPEdwCK4BGAYYCw/s450/2019-1018-224641-ton-WebpageListhtml-Webpagejs-WebpageListjs.png&quot; title=&quot;2019-1018-224641-ton-WebpageListhtml-Webpagejs-WebpageListjs.png&quot; alt=&quot;2019-1018-224641-ton-WebpageListhtml-Webpagejs-WebpageListjs.png&quot; width=&quot;450&quot; height=&quot;283&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另一個問題是，目前我在AdonisJs框架裡面得用HttpException建立錯誤，不能直接用throw把錯誤丟出去。還要多引用一個HttpException有點麻煩。我有注意到AdonisJs框架裡面可以自訂&lt;a href=&quot;https://adonisjs.com/docs/4.1/exceptions&quot; target=&quot;_blank&quot;&gt;錯誤處理Error Handling&lt;/a&gt;的方法，昨天試了一下，可惜並沒有成功。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;總之，目前還有很多問題有待克服。不過程式寫到一定進度，我就會覺得有必要先做個記錄，這樣我才能安心繼續處理其它有待克服的問題。&lt;/p&gt;
&lt;p&gt;這篇就這樣記錄一下遭遇的問題以及處理方法，我就繼續跟AdonisJs與Vue.js一起奮鬥吧。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/3078877076330207132/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/10/adonisjsvue-diary-about-adonisjs-and-vue.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3078877076330207132'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3078877076330207132'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/10/adonisjsvue-diary-about-adonisjs-and-vue.html' title='跟AdonisJs與Vue一起玩的那些事兒 / Diary about AdonisJs and Vue'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//3.bp.blogspot.com/-kxsQTG-tVFw/XanUYmQpmJI/AAAAAAAEaQU/Xk1-OS1Hg9UPcYwK2zJbPnu3pKkqcZQxQCK4BGAYYCw/s72-c/17-AdonisJs_Vue_Diary_about_AdonisJs.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-4867398638808599309</id><published>2019-10-18T19:40:00.004+08:00</published><updated>2019-10-18T19:40:35.724+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Node.js"/><title type='text'>Node.js找不到模組？在npm-link底下的處理方法 / How to Handle &quot;Module not found&quot; Error from Modules installed from npm-link?</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-29dzuEBUeGE/Xamkpi3ykBI/AAAAAAAEaOU/c-bULjD98Ms0IKKaYUFV5iuxfDOBnp4WACK4BGAYYCw/s1600/16-Node_js_npm_link_How_to_Handle_Module.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-29dzuEBUeGE/Xamkpi3ykBI/AAAAAAAEaOU/c-bULjD98Ms0IKKaYUFV5iuxfDOBnp4WACK4BGAYYCw/s1600/16-Node_js_npm_link_How_to_Handle_Module.png&quot; title=&quot;16-Node_js_npm_link_How_to_Handle_Module.png&quot; alt=&quot;16-Node_js_npm_link_How_to_Handle_Module.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Node.js的專案不可或缺的就是豐富的套件。為了避免各個專案重複安裝套件而佔用硬碟大量的空間，我會選擇將套件安裝在全域目錄(global)，然後用連結(symlink)的方式放到各自專案底下。這種安裝方式可以透過&lt;a href=&quot;https://docs.npmjs.com/cli/link.html&quot; target=&quot;_blank&quot;&gt;npm-link&lt;/a&gt;的「npm link &amp;lt;package-name&amp;gt;」或是&lt;a href=&quot;https://www.npmjs.com/package/@pulipuli.chen/npm-link-better&quot; target=&quot;_blank&quot;&gt;@pulipuli.chen/npm-link-better&lt;/a&gt;套件的「nls &amp;lt;package-name&amp;gt;」來安裝。&lt;/p&gt;
&lt;p&gt;然而，如果全域目錄的套件經過更新、移除、漏洞修復的話，很可能導致專案底下用npm-link連結的套件會發生「Module not found」錯誤。這時候要先用「npm -g i &amp;lt;package-name&amp;gt;」更新全域目錄的套件、移除專案內的套件連結、最後再重新連結套件。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;「找不到模組」的問題 / Error &quot;Module not found&quot;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-0TZk3zmz3So/XamkozOTtXI/AAAAAAAEaNw/eTKlz41DWOULJaFf7gS3Q2udmG__R3v5QCK4BGAYYCw/s1600/2019-10-18_154701_-_Copy.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-0TZk3zmz3So/XamkozOTtXI/AAAAAAAEaNw/eTKlz41DWOULJaFf7gS3Q2udmG__R3v5QCK4BGAYYCw/s450/2019-10-18_154701_-_Copy.png&quot; title=&quot;2019-10-18_154701_-_Copy.png&quot; alt=&quot;2019-10-18_154701_-_Copy.png&quot; width=&quot;450&quot; height=&quot;219&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;正要打開專案、啟動伺服器與Webpack、開始工作時，結果console居然跑出了錯誤訊息：&lt;/p&gt;
&lt;blockquote&gt;ERROR in C:/Users/.../AppData/Roaming/npm/node_modules/...&lt;br&gt;Module not found: Error: Can&#39;t resolve &#39;&lt;font color=&quot;#ff0000&quot;&gt;sortablejs&lt;/font&gt;&#39; in &#39;C:\Users\...\AppData\Roaming\npm\node_modules\...&#39;&lt;/blockquote&gt;
&lt;p&gt;當時我第一個反應是：我有用到sortablejs這個套件嗎？我記得並沒有這回事。讓我更仔細的看看這個錯誤訊息：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-EpO-yewK3IA/Xamko_-Q_QI/AAAAAAAEaOE/0V5OjsAldrUArHK4LU0hPRK2Yw4y1AakQCK4BGAYYCw/s1600/2019-1018-161104.png&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-EpO-yewK3IA/Xamko_-Q_QI/AAAAAAAEaOE/0V5OjsAldrUArHK4LU0hPRK2Yw4y1AakQCK4BGAYYCw/s450/2019-1018-161104.png&quot; title=&quot;2019-1018-161104.png&quot; alt=&quot;2019-1018-161104.png&quot; width=&quot;450&quot; height=&quot;219&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;ERROR in C:/Users/.../AppData/Roaming/npm/node_modules/&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;vuedraggable&lt;/b&gt;&lt;/font&gt;/dist/vuedraggable.common.js&lt;/blockquote&gt;
&lt;p&gt;這邊可以注意到兩件事請：發生錯誤的檔案是位於npm的全域目錄底下。在Windows 7中，npm的全域套件會安裝在「%USERPROFILE%\AppData\Roaming\npm\node_modules」底下，其他作業系統的目錄位置請參考「&lt;a href=&quot;https://stackoverflow.com/a/5926706/6645399&quot; target=&quot;_blank&quot;&gt;Where does npm install packages?&lt;/a&gt;」這篇的說明。&lt;/p&gt;
&lt;p&gt;另一件事情是發生錯誤的套件名稱為「&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/&quot; target=&quot;_blank&quot;&gt;vuedraggable&lt;/a&gt;」。我的確有用到這個套件，而且我還是用&lt;a href=&quot;https://www.npmjs.com/package/@pulipuli.chen/npm-link-better&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;@pulipuli.chen/npm-link-better&lt;/a&gt;套件，以npm-link連結的方式安裝。&lt;/p&gt;
&lt;p&gt;好，現在我們知道是「vuedraggable」出問題了，我們要怎麼處理呢？&lt;/p&gt;
&lt;h2&gt;修復問題 / Fix error&lt;/h2&gt;
&lt;p&gt;要修復以npm-link安裝在專案底下的「vuedraggable」出現的「Module not found」問題，我們有三個步驟要進行：&lt;/p&gt;
&lt;h3&gt;1. 重新安裝全域套件 / Reinstall global package&lt;/h3&gt;
&lt;p&gt;首先我們先執行重新安裝套件的指令。npm套件的安裝「npm i &amp;lt;package-name&amp;gt;」。因為vuedraggable套件是安裝在全域目錄，所以指令還要加上「-g」。完整指令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;dos&quot;&gt;npm&amp;nbsp;-g&amp;nbsp;i&amp;nbsp;&amp;lt;package-name&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我們要把&amp;lt;package-name&amp;gt;替換成我們要安裝的套件vuedraggable。&lt;/p&gt;
&lt;h3&gt;2. 移除專案內的套件連結 / Remove package symlink in project&#39;s node_modules folder&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-d7S6JV2rhKM/Xamko0s52GI/AAAAAAAEaOQ/3YuFOMCxXU09OEaALw28utd26RqWwbA6wCK4BGAYYCw/s1600/2019-1018-162635-OO-VB-repute-Sart-ct-eve-Jmg-om.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-d7S6JV2rhKM/Xamko0s52GI/AAAAAAAEaOQ/3YuFOMCxXU09OEaALw28utd26RqWwbA6wCK4BGAYYCw/s450/2019-1018-162635-OO-VB-repute-Sart-ct-eve-Jmg-om.png&quot; title=&quot;2019-1018-162635-OO-VB-repute-Sart-ct-eve-Jmg-om.png&quot; alt=&quot;2019-1018-162635-OO-VB-repute-Sart-ct-eve-Jmg-om.png&quot; width=&quot;450&quot; height=&quot;351&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有時候前述的重新安裝會造成專案內的套件連結失效。我們需要再重新建立專案中的套件連結。&lt;/p&gt;
&lt;p&gt;接下來我們到專案內安裝套件的目錄「node-modules」中，找到欲修復套件的目錄，例如這次要修復的「vuedraggable」。如果你從這裡要進入該目錄的時候發生了錯誤，那就表示這個連結失效了。&lt;/p&gt;
&lt;p&gt;請刪除這個目錄，然後繼續下一步吧。&lt;/p&gt;
&lt;h3&gt;3. 重新連結套件 / Create symlink to package&lt;/h3&gt;
&lt;p&gt;再來就是重新用套件連結的指令來建立連結，指令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;dos&quot;&gt;npm&amp;nbsp;link&amp;nbsp;&amp;lt;package-name&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這時候回到專案，重新執行會用到該套件的指令時，應該就不會再出現找不到模組「Module not found」的錯誤了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-Q8OI4njpiD0/Xamko9-vzBI/AAAAAAAEaN0/shNoBq7SsZUcuP2Y1xmbxTdtQLE18hR4QCK4BGAYYCw/s1600/2019-1018-170018-pulipuli-chen-npm-link-better-Public.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-Q8OI4njpiD0/Xamko9-vzBI/AAAAAAAEaN0/shNoBq7SsZUcuP2Y1xmbxTdtQLE18hR4QCK4BGAYYCw/s450/2019-1018-170018-pulipuli-chen-npm-link-better-Public.png&quot; title=&quot;2019-1018-170018-pulipuli-chen-npm-link-better-Public.png&quot; alt=&quot;2019-1018-170018-pulipuli-chen-npm-link-better-Public.png&quot; width=&quot;450&quot; height=&quot;259&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我把這篇的做法整理到&lt;a href=&quot;https://www.npmjs.com/package/@pulipuli.chen/npm-link-better&quot; target=&quot;_blank&quot;&gt;@pulipuli.chen/npm-link-better&lt;/a&gt;套件裡面。未來也可以用以下指令來重新連結：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;dos&quot;&gt;nls&amp;nbsp;-U&amp;nbsp;&amp;lt;package-name&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不過老實說，我不確定這是不是最佳的做法。對於Node.js這塊領域，我還有很多需要學習的地方。最後來講講一些其他的事情：&lt;/p&gt;
&lt;h3&gt;為什麼會發生錯誤？ / Why &quot;Module not found&quot; occured?&lt;/h3&gt;
&lt;p&gt;我並不是完全瞭解這背後的原因，但我推測有兩個可能性。一個是發生在安裝&lt;a href=&quot;http://blog.pulipuli.info/2019/10/nodejscorsadonisjs-practice-of-build.html&quot; target=&quot;_blank&quot;&gt;AdonisJs套件&lt;/a&gt;的時候，另一個是執行「&lt;a href=&quot;https://dev.to/bbenefield89/fixing-npm-dependencies-vulnerabilities-6p8#targetText=Run%20the%20npm%20audit%20command,before%20upgrading%20the%20next%20package&quot; target=&quot;_blank&quot;&gt;npm audit fix&lt;/a&gt;」的時候。&lt;/p&gt;
&lt;p&gt;我在「&lt;a href=&quot;http://blog.pulipuli.info/2019/10/nodejscorsadonisjs-practice-of-build.html&quot; target=&quot;_blank&quot;&gt;Node.js前後端CORS網頁應用試作：AdonisJs聊天室&lt;/a&gt;」這篇有提到我開始使用了&lt;a href=&quot;https://adonisjs.com/&quot; target=&quot;_blank&quot;&gt;AdonisJs框架&lt;/a&gt;。雖然AdonisJs預設安裝只需要執行「npm i -g @adonisjs/cli」，但這只是基本功能而已。如果要用到其他功能，例如&lt;a href=&quot;https://adonisjs.com/docs/4.1/file-system&quot; target=&quot;_blank&quot;&gt;File Storage的@adonisjs/drive&lt;/a&gt;、&lt;a href=&quot;https://adonisjs.com/docs/4.1/websocket&quot; target=&quot;_blank&quot;&gt;WebSocket的@adonisjs/websocket&lt;/a&gt;，那就需要再執行安裝套件的指令。&lt;/p&gt;
&lt;p&gt;然而，執行這個指令之後，「Module not found」的錯誤就層出不窮。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-WNyJusMRFJ8/Xamko_RQaVI/AAAAAAAEaOI/leJzOl8qRoEXLW4vVPYRI-MwV82qCiziACK4BGAYYCw/s1600/npm-audit-fix.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-WNyJusMRFJ8/Xamko_RQaVI/AAAAAAAEaOI/leJzOl8qRoEXLW4vVPYRI-MwV82qCiziACK4BGAYYCw/s450/npm-audit-fix.png&quot; title=&quot;npm-audit-fix.png&quot; alt=&quot;npm-audit-fix.png&quot; width=&quot;450&quot; height=&quot;136&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://github.com/htmlhint/HTMLHint/issues/249&quot; target=&quot;_blank&quot;&gt;HTMLHint&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;另一個可能性是在執行「npm audit fix」之後。npm會自動檢查套件的版本，挑出有安全性漏洞的危險版本，告訴開發者記得要用「npm&amp;nbsp; audit fix」來修正它。根據&lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot; target=&quot;_blank&quot;&gt;npm-audit&lt;/a&gt;的說明，這個指令將有安全性漏洞的套件更新到穩定的版本。有時候單純執行「npm audit fix」並無法成功，需要改成「npm audit fix --force」才行。&lt;/p&gt;
&lt;p&gt;不過，在執行這個指令之後，好像就很容易遇到「Module not found」錯誤。&lt;/p&gt;
&lt;p&gt;我不太確定背後運作的詳細細節，這兩個只是我觀察推測的原因。希望大家可以幫我解釋一下。&lt;/p&gt;
&lt;p&gt;
  &lt;h3&gt;為什麼是npm-link？ / Why install package with npm-link&lt;/h3&gt;
&lt;/p&gt;
&lt;p&gt;對於大部分開發者來說，大家好像比較少人在用npm-link安裝套件。對我來說，比較常用npm-link的原因在於我會使用&lt;a href=&quot;http://blog.pulipuli.info/2019/04/chromebook-coding-with-chromebook.html&quot; target=&quot;_blank&quot;&gt;Chromebook&lt;/a&gt;開發，而Chromebook的儲存空間相當的少，就連重複套件所佔用的空間都不夠用，所以我才會使用npm-link、讓各個專案都用全域目錄中的套件。&lt;/p&gt;
&lt;p&gt;然而用到現在，我的Chromebook連開發用的套件都裝不下了，Electron實在是太佔空間。儘管如此，我那臺只有32GB的Chromebook已經使用了一年了，市面上擁有64GB儲存空間的Chromebook仍然未成主流，只有在中、高階機型才有出現，例如&lt;a href=&quot;https://www.cool3c.com/article/148902&quot; target=&quot;_blank&quot;&gt;Pixelbook Go&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼，這次關於「Module not found」問題的處理方法就講到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;你有遇過Node.js模組安裝的問題嗎？&lt;/li&gt;
  &lt;li&gt;你遇到的是什麼問題呢？&lt;/li&gt;
  &lt;li&gt;你是怎麽處理它呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/4867398638808599309/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/10/nodejsnpm-link-how-to-handle-module-not.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/4867398638808599309'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/4867398638808599309'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/10/nodejsnpm-link-how-to-handle-module-not.html' title='Node.js找不到模組？在npm-link底下的處理方法 / How to Handle &quot;Module not found&quot; Error from Modules installed from npm-link?'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//4.bp.blogspot.com/-29dzuEBUeGE/Xamkpi3ykBI/AAAAAAAEaOU/c-bULjD98Ms0IKKaYUFV5iuxfDOBnp4WACK4BGAYYCw/s72-c/16-Node_js_npm_link_How_to_Handle_Module.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-4156085852792436122</id><published>2019-10-13T23:16:00.002+08:00</published><updated>2019-10-13T23:16:19.272+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Vue.js"/><title type='text'>如何不編譯直接在前端瀏覽器使用Vue.js插件？以vue-slim-tabs為例 / How to use Vue.js Plugins in Browser Without Module Bundler?</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-hvTs7YCi3mE/XaM_pfXTeFI/AAAAAAAEZmc/i3xmXjMWTfcxegWNgiDziTgfDS5HTdrGQCK4BGAYYCw/s1600/15-Vue_js_vue_slim_tabs_How_to_use.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-hvTs7YCi3mE/XaM_pfXTeFI/AAAAAAAEZmc/i3xmXjMWTfcxegWNgiDziTgfDS5HTdrGQCK4BGAYYCw/s1600/15-Vue_js_vue_slim_tabs_How_to_use.png&quot; title=&quot;15-Vue_js_vue_slim_tabs_How_to_use.png&quot; alt=&quot;15-Vue_js_vue_slim_tabs_How_to_use.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;嗨~呦~~ 這裡是煩惱要不要用Vue.js插件的布丁。&lt;/p&gt;
&lt;p&gt;說到網頁前端MVVM框架&lt;a href=&quot;https://vuejs.org&quot; target=&quot;_blank&quot;&gt;Vue.js&lt;/a&gt;，大部分時候都是以搭配後端編譯工具 (像是&lt;a href=&quot;https://webpack.js.org&quot; target=&quot;_blank&quot;&gt;Webpack&lt;/a&gt;之類) 為前提來安裝、配置。不過實際上，很多時候Vue.js、&lt;a href=&quot;https://vuejs.org/v2/guide/single-file-components.html&quot; target=&quot;_blank&quot;&gt;單檔案組件(single file component)&lt;/a&gt;、以及它們的插件可以不需透過編譯，直接在網頁瀏覽器上執行。&lt;/p&gt;
&lt;p&gt;這邊我以「&lt;a href=&quot;https://vuejsexamples.com/a-slim-tab-component-for-vue-js/&quot; target=&quot;_blank&quot;&gt;vue-slim-tabs&lt;/a&gt;」為例子，它文件中的說明必須要靠編譯器才能運作。我分析&lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs@0.4.0/dist/vue-slim-tabs.js&quot; target=&quot;_blank&quot;&gt;vue-slim-tabs&lt;/a&gt;插件的原始碼，重新撰寫了使用該插件的&lt;a href=&quot;https://github.com/pulipulichen/blog-pulipuli-info-data-2019/blob/master/10/13-vue/index.html&quot; target=&quot;_blank&quot;&gt;index.html&lt;/a&gt;跟引用的單檔案組件&lt;a href=&quot;https://github.com/pulipulichen/blog-pulipuli-info-data-2019/blob/master/10/13-vue/vue-slim-tabs.vue&quot; target=&quot;_blank&quot;&gt;vue-slim-tabs.vue&lt;/a&gt;。你可以&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2019/10/13-vue/index.html&quot; target=&quot;_blank&quot;&gt;點此看到實際運作的網頁&lt;/a&gt;。以下我來說明改寫的過程，希望對Vue.js的使用者有所幫助。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;結果展示 / Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-vvHsMTw-wD8/XaM_oqCAS-I/AAAAAAAEZmQ/NYHfVELzL5oB-bSk7YkcWHvpuxh2Rw3HQCK4BGAYYCw/s1600/anime.gif&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//4.bp.blogspot.com/-vvHsMTw-wD8/XaM_oqCAS-I/AAAAAAAEZmQ/NYHfVELzL5oB-bSk7YkcWHvpuxh2Rw3HQCK4BGAYYCw/s251/anime.gif&quot; title=&quot;anime.gif&quot; alt=&quot;anime.gif&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;做完之後會產生以下三個檔案：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pulipulichen/blog-pulipuli-info-data-2019/blob/master/10/13-vue/index.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;index.html&lt;/a&gt;&amp;nbsp;主要網頁&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pulipulichen/blog-pulipuli-info-data-2019/blob/master/10/13-vue/vue-slim-tabs.vue&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;vue-slim-tabs.vue&lt;/a&gt;&amp;nbsp;使用&lt;a href=&quot;https://vuejsexamples.com/a-slim-tab-component-for-vue-js/&quot; target=&quot;_blank&quot;&gt;vue-slim-tabs插件&lt;/a&gt;的單檔案組件&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pulipulichen/blog-pulipuli-info-data-2019/blob/master/10/13-vue/default.css&quot; target=&quot;_blank&quot;&gt;default.css&lt;/a&gt; 單檔案組件引用的樣式檔&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2019/10/13-vue/index.html&quot; target=&quot;_blank&quot;&gt;你可以點這裡看看可以實際運作的網頁&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;流程 / Process&lt;/h2&gt;
&lt;p&gt;我這篇是準備寫給完全不懂Vue.js的入門者閱讀的。操作這篇只需要有HTML跟JavaScript的基本知識，不會用到Node.js或編譯器Webpack之類的工具。整個編寫過程也只用純文字編輯器(例如&lt;a href=&quot;http://blog.pulipuli.info/2016/12/utf-8notepad-how-to-convert-plain-text.html&quot; target=&quot;_blank&quot;&gt;Notepad++&lt;/a&gt;)、Google Chrome瀏覽器，以及架設一個簡單的http伺服器來展示網頁而已。&lt;/p&gt;
&lt;p&gt;必須注意的是，在瀏覽器直接開啟網頁檔案是不能運作的。請準備一個http伺服器，例如&lt;a href=&quot;https://www.apachefriends.org/zh_tw/index.html&quot; target=&quot;_blank&quot;&gt;XAMPP&lt;/a&gt;或其他可以呈現靜態網頁的伺服器都可以。&lt;/p&gt;
&lt;p&gt;要在瀏覽器裡面使用Vue.js、它的插件、以及Vue.js的單檔案組件的話，從無到有會有以下幾個步驟：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;建立網頁&lt;/li&gt;
  &lt;li&gt;引用Vue.js&lt;/li&gt;
  &lt;li&gt;安裝Vue.js的插件&lt;/li&gt;
  &lt;li&gt;建立單檔案組件&lt;/li&gt;
  &lt;li&gt;引用單檔案組件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;讓我們一步一步慢慢來看吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;STEP 1. 建立網頁 / Make a empty webpage&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;先讓我們建立一個簡單的網頁，命名為「index.html」：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&lt;br&gt;&amp;lt;html&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;Vue&amp;nbsp;vue-slim-tabs&amp;nbsp;DEMO&amp;lt;/title&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&quot;UTF-8&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;name=&quot;viewport&quot;&amp;nbsp;content=&quot;width=device-width,&amp;nbsp;initial-scale=1.0&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;body&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/body&amp;gt;&lt;br&gt;&amp;lt;/html&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這個網頁內容什麼都沒有，就是一個起點。我們從這個起點開始一一加入Vue.js跟它的擴充套件。&lt;/p&gt;
&lt;h2&gt;STEP 2. 引用Vue.js / Include Vue.js&lt;/h2&gt;
&lt;p&gt;接著我們先決定要在網頁何處擺放Vue.js，以下紅字的程式碼是額外加入的部分：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&lt;br&gt;&amp;lt;html&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;Vue&amp;nbsp;vue-slim-tabs&amp;nbsp;DEMO&amp;lt;/title&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&quot;UTF-8&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;name=&quot;viewport&quot;&amp;nbsp;content=&quot;width=device-width,&amp;nbsp;initial-scale=1.0&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;body&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;div&amp;nbsp;id=&quot;app&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/div&amp;gt;&lt;/font&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/body&amp;gt;&lt;br&gt;&amp;lt;/html&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意&lt;font color=&quot;#ff0000&quot;&gt;id=&quot;app&quot;&lt;/font&gt;，待會我們會用CSS選取器「#app」來設定Vue.js，請它把要顯示的元素擺在這裡。&lt;/p&gt;
&lt;p&gt;再來我們引用Vue.js的程式碼。簡單練習的話，直接使用&lt;a href=&quot;https://vuejs.org/v2/guide/installation.html#CDN&quot; target=&quot;_blank&quot;&gt;Vue.js提供直連的CDN&lt;/a&gt;就好了：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&lt;br&gt;&amp;lt;html&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;Vue&amp;nbsp;vue-slim-tabs&amp;nbsp;DEMO&amp;lt;/title&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&quot;UTF-8&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;name=&quot;viewport&quot;&amp;nbsp;content=&quot;width=device-width,&amp;nbsp;initial-scale=1.0&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;body&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;div&amp;nbsp;id=&quot;app&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/div&amp;gt;&lt;br&gt; &lt;br&gt;    &lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/font&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/body&amp;gt;&lt;br&gt;&amp;lt;/html&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然後我們加入建立Vue的設定：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&lt;br&gt;&amp;lt;html&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;Vue&amp;nbsp;vue-slim-tabs&amp;nbsp;DEMO&amp;lt;/title&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&quot;UTF-8&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;name=&quot;viewport&quot;&amp;nbsp;content=&quot;width=device-width,&amp;nbsp;initial-scale=1.0&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;body&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;div&amp;nbsp;id=&quot;app&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/div&amp;gt;&lt;br&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;app&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Vue({&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;el:&amp;nbsp;&#39;#app&#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/script&amp;gt;&lt;/font&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/body&amp;gt;&lt;br&gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中「&lt;font color=&quot;#ff0000&quot;&gt;el: &quot;#app&quot;&lt;/font&gt;」這個設定就是請Vue.js把顯示元素擺在&amp;lt;div id=&quot;app&quot;&amp;gt;&amp;lt;/div&amp;gt;裡面的意思。這時候這個&amp;lt;div&amp;gt;就會成為Vue的模板(template)，可以使用&lt;a href=&quot;https://vuejs.org/v2/guide/syntax.html&quot; target=&quot;_blank&quot;&gt;Vue.js的語法&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;到這邊為止，因為我們實際上並沒有在模板裡面寫上任何東西，所以網頁看起來還是空空如也。對Vue.js稍微有點認識的人來說，做到這一步應該不會有任何問題。讓我們繼續做下去吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;STEP 3. 安裝Vue.js的插件 / Install Vue.js plugin&lt;/h2&gt;
&lt;p&gt;接下來我們要引用Vue.js的擴充套件，這邊以「&lt;a href=&quot;https://vuejsexamples.com/a-slim-tab-component-for-vue-js/&quot; target=&quot;_blank&quot;&gt;vue-slim-tabs&lt;/a&gt;」為例子來做示範。&lt;/p&gt;
&lt;p&gt;vue-slim-tabs的說明主要是寫給搭配編譯器的情境，對很多只做前端、不碰後端編譯器的人來說，做到這裡就會卡關。&lt;/p&gt;
&lt;h3&gt;分析插件的文件 / Explain plugin&#39;s document&lt;/h3&gt;
&lt;p&gt;我們先來看看vue-slim-tabs的文件中的使用方法吧。它在Usage裡面寫了兩段程式碼，第一段的架構是：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;template&amp;gt;&lt;br&gt;...&lt;br&gt;&amp;lt;/template&amp;gt;&lt;br&gt;&lt;br&gt;&amp;lt;script&amp;gt;&lt;br&gt;...&lt;br&gt;&amp;lt;/script&amp;gt;&lt;br&gt;&lt;br&gt;&amp;lt;style&amp;nbsp;src=&quot;vue-slim-tabs/themes/default.css&quot;&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這種包含&amp;lt;template&amp;gt;、&amp;lt;script&amp;gt;、以及&amp;lt;style&amp;gt;的寫法，表示它是Vue.js的&lt;a href=&quot;https://vuejs.org/v2/guide/single-file-components.html&quot; target=&quot;_blank&quot;&gt;單檔案組件(single file component)&lt;/a&gt;。它的寫法是給後端編譯器用的，我們不能在前端瀏覽器直接使用它。&lt;/p&gt;
&lt;p&gt;後面講到單檔案組件的改寫時，我們會再回來看這段程式碼。現在我們先跳過這邊，看下一段。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;import&amp;nbsp;*&amp;nbsp;as&amp;nbsp;Tabs&amp;nbsp;from&amp;nbsp;&#39;vue-slim-tabs&#39;&lt;br&gt;&lt;br&gt;Vue.use(Tabs)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這邊用到的import是後端Node.js的語法，意思是引用「vue-slim-tabs」插件的程式碼，然後把它重新命名為「Tabs」，最後在「Vue.use(Tabs)」中把插件加入到Vue裡面。&lt;/p&gt;
&lt;p&gt;Vue.use(Tabs)是前端瀏覽器也可以執行的語法，但前面的「import * as Tabs form &#39;vue-slim-tabs&#39;」可就不是了。&lt;/p&gt;
&lt;p&gt;前端瀏覽器基本上只接受「&amp;lt;script src=&quot;...&quot;&amp;gt;&amp;lt;/script&amp;gt;」的語法，那我們可以這樣引用套件嗎？答案是可以的。&lt;/p&gt;
&lt;h3&gt;分析插件的原始碼 / Analyze source code of plugin&lt;/h3&gt;
&lt;p&gt;首先，我們要先找到插件未壓縮的原始碼。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-mEJNBOMWkWU/XaM_oa7fngI/AAAAAAAEZmE/0t365j3JqyI1YogxBg20Yd_LMDjj-1SBQCK4BGAYYCw/s1600/2019-1013-201658-Install-yarn-add-vue-slim-tabs-CDN.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-mEJNBOMWkWU/XaM_oa7fngI/AAAAAAAEZmE/0t365j3JqyI1YogxBg20Yd_LMDjj-1SBQCK4BGAYYCw/s264/2019-1013-201658-Install-yarn-add-vue-slim-tabs-CDN.png&quot; title=&quot;2019-1013-201658-Install-yarn-add-vue-slim-tabs-CDN.png&quot; alt=&quot;2019-1013-201658-Install-yarn-add-vue-slim-tabs-CDN.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在「&lt;a href=&quot;https://vuejsexamples.com/a-slim-tab-component-for-vue-js/&quot; target=&quot;_blank&quot;&gt;vue-slim-tabs&lt;/a&gt;」套件文件中雖然提到了yarn的安裝法，但那是給後端Node.js用的，我們前端要用的是CDN。我試了一下，能夠提供直接連線的CDN是&lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs/dist/&quot; target=&quot;_blank&quot;&gt;jsDelivr&lt;/a&gt;。我們要用裡面的&lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs@0.4.0/dist/vue-slim-tabs.js&quot; target=&quot;_blank&quot;&gt;vue-slim-tabs.js&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;先讓我們來看看&lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs@0.4.0/dist/vue-slim-tabs.js&quot; target=&quot;_blank&quot;&gt;vue-slim-tabs.js原始碼&lt;/a&gt;的開頭，裡面有段語法是在處理插件對外呈現的方式，也就是要如何讓其他程式碼找到它的方法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;(function&amp;nbsp;(global,&amp;nbsp;factory)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;typeof&amp;nbsp;exports&amp;nbsp;===&amp;nbsp;&#39;object&#39;&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;typeof&amp;nbsp;module&amp;nbsp;!==&amp;nbsp;&#39;undefined&#39;&amp;nbsp;?&amp;nbsp;factory(exports)&amp;nbsp;:&lt;br&gt;&amp;nbsp;&amp;nbsp;typeof&amp;nbsp;define&amp;nbsp;===&amp;nbsp;&#39;function&#39;&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;define.amd&amp;nbsp;?&amp;nbsp;define([&#39;exports&#39;],&amp;nbsp;factory)&amp;nbsp;:&lt;br&gt;&amp;nbsp;&amp;nbsp;(global&amp;nbsp;=&amp;nbsp;global&amp;nbsp;||&amp;nbsp;self,&amp;nbsp;factory(&lt;font color=&quot;#ff0000&quot;&gt;global.VueSlimTabs&lt;/font&gt;&amp;nbsp;=&amp;nbsp;{}));&lt;br&gt;}(this,&amp;nbsp;function&amp;nbsp;(exports)&amp;nbsp;{&amp;nbsp;&#39;use&amp;nbsp;strict&#39;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意到「global」屬性，在前端前端裡面，global通常就是指「window」。而這邊有提到「global.VueSlimTabs」，那通常就等於是「window.VueSlimTabs」，在前端網頁裡面可以省略window、更簡化為「&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;VueSlimTabs&lt;/b&gt;&lt;/font&gt;」。&lt;/p&gt;
&lt;p&gt;再來我們看到&lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs@0.4.0/dist/vue-slim-tabs.js&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;vue-slim-tabs.js&lt;/a&gt;最下面有提到install方法的地方：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&amp;nbsp;&amp;nbsp;exports.Tab&amp;nbsp;=&amp;nbsp;Tab;&lt;br&gt;&amp;nbsp;&amp;nbsp;exports.Tabs&amp;nbsp;=&amp;nbsp;Tabs;&lt;br&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&amp;nbsp;exports.install&amp;nbsp;=&amp;nbsp;install;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這表示該插件可以用「Vue.use(VueSlimTabs)」的語法安裝。&lt;/p&gt;
&lt;p&gt;其中Install的方法又會註冊兩個元件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&amp;nbsp;&amp;nbsp;function&amp;nbsp;install(Vue)&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Vue.component(Tabs.name,&amp;nbsp;Tabs);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Vue.component(Tab.name,&amp;nbsp;Tab);&lt;/span&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這就表示我們安裝vue-slim-tabs之後，就能直接使用「tab」跟「tabs」元件。&lt;/p&gt;
&lt;p&gt;真的是如此嗎？讓我們實際引用看看就知道了。&lt;/p&gt;
&lt;h3&gt;用&amp;lt;script&amp;gt;標籤引用插件 / Include plugin with script tag&lt;/h3&gt;
&lt;p&gt;讓我們回到剛剛編輯到一半的網頁，加入以下紅字的程式碼：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&lt;br&gt;&amp;lt;html&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;Vue&amp;nbsp;vue-slim-tabs&amp;nbsp;DEMO&amp;lt;/title&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&quot;UTF-8&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;name=&quot;viewport&quot;&amp;nbsp;content=&quot;width=device-width,&amp;nbsp;initial-scale=1.0&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;body&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;div&amp;nbsp;id=&quot;app&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/div&amp;gt;&lt;br&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs@0.4.0/dist/vue-slim-tabs.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/font&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;app&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Vue({&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;el:&amp;nbsp;&#39;#app&#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/body&amp;gt;&lt;br&gt;&amp;lt;/html&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這段&amp;lt;script&amp;gt;就是引用前面找到的vue-slim-tabs插件CDN的網址。&lt;/p&gt;
&lt;p&gt;接著我們要來確認插件是否有正確引用，到底是不是如上面所分析的，可以直接使用「VueSlimTabs」變數即可呢。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-UmXVJ4lY_h0/XaM_oi1in-I/AAAAAAAEZmI/PpPHd0yfi7g58YMduAR0jCcdvawxOp-ogCK4BGAYYCw/s1600/2019-1013-202635-Semmg-Cons-Network-Sources-Perfo.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-UmXVJ4lY_h0/XaM_oi1in-I/AAAAAAAEZmI/PpPHd0yfi7g58YMduAR0jCcdvawxOp-ogCK4BGAYYCw/s382/2019-1013-202635-Semmg-Cons-Network-Sources-Perfo.png&quot; title=&quot;2019-1013-202635-Semmg-Cons-Network-Sources-Perfo.png&quot; alt=&quot;2019-1013-202635-Semmg-Cons-Network-Sources-Perfo.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我們可以在開發人員工具的Console控制檯裡面，試著輸入「VueSlimTabs」看看。結果的確有回傳資料，沒有顯示錯誤訊息「VueSlimTabs is not defined」，就表示VueSlimTabs的確是我們要找的對象。&lt;/p&gt;
&lt;h3&gt;將插件安裝到Vue / Install plugin to Vue&lt;/h3&gt;
&lt;p&gt;確定vue-slim-tabs插件在用&amp;lt;script&amp;gt;加入網頁、並能夠成功用「VueSlimTabs」取得變數後，我們就可以來讓Vue.js使用該插件。請為原本的網頁加上以下紅字的語法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&lt;br&gt;&amp;lt;html&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;Vue&amp;nbsp;vue-slim-tabs&amp;nbsp;DEMO&amp;lt;/title&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&quot;UTF-8&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;name=&quot;viewport&quot;&amp;nbsp;content=&quot;width=device-width,&amp;nbsp;initial-scale=1.0&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;body&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;div&amp;nbsp;id=&quot;app&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/div&amp;gt;&lt;br&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs@0.4.0/dist/vue-slim-tabs.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;Vue.use(VueSlimTabs)&lt;/font&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;app&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Vue({&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;el:&amp;nbsp;&#39;#app&#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/body&amp;gt;&lt;br&gt;&amp;lt;/html&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;值得注意的是，根據黑暗執行緒「&lt;a href=&quot;https://blog.darkthread.net/blog/html-inc-vuejs-lib/&quot; target=&quot;_blank&quot;&gt;輕前端札記 - HTML + JS 引用 CDN Vue.js 套件&lt;/a&gt;」這篇的說明，不是所有插件都可以用這種方式安裝。有些插件需要自行手動註冊為組件，例如&lt;a href=&quot;https://www.npmjs.com/package/vuejs-datepicker#install&quot; target=&quot;_blank&quot;&gt;vuejs-datepicker&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;到這邊為止，我們雖然初步引用插件的程式碼，不過我們的網頁依然一片空白。這是因為Vue只有做到準備使用插件的環境，但我們還沒告訴Vue要怎麼使用這個插件。&lt;/p&gt;
&lt;p&gt;我們其實已經能夠在模板&amp;lt;div id=&quot;app&quot;&amp;gt;&amp;lt;/div&amp;gt;直接使用&amp;lt;tabs&amp;gt;跟&amp;lt;tab&amp;gt;元件。不過大部分插件都會寫成單檔案組件的形式供人使用，那我們也來以元件(component)的形式來使用插件吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;STEP 4. 建立單檔案組件 / Make a single file component (*.vue)&lt;/h2&gt;
&lt;p&gt;接下來我們要建立一個Vue.js的單檔案組件，裡面會定義模板&amp;lt;template&amp;gt;、邏輯&amp;lt;script&amp;gt;跟樣式&amp;lt;style&amp;gt;。我們先來看看vue-slim-tabs的文件裡面是怎麼寫得，挑出裡面是寫給後端的程式碼，把它改寫為給前端網頁瀏覽器使用的單檔案組件。&lt;/p&gt;
&lt;h3&gt;後端用的單檔案組件&amp;nbsp;/ Single file component for Node.js&lt;/h3&gt;
&lt;p&gt;在vue-slim-tabs的文件中有提到單檔案組件的寫法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;template&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;tabs&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;Vue&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;Vue&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;React&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;React&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;Svelte&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;Svelte&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/tabs&amp;gt;&lt;br&gt;&amp;lt;/template&amp;gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;script&amp;gt;&lt;br&gt;import&amp;nbsp;{&amp;nbsp;Tabs,&amp;nbsp;Tab&amp;nbsp;}&amp;nbsp;from&amp;nbsp;&#39;vue-slim-tabs&#39;&lt;br&gt;&lt;br&gt;export&amp;nbsp;default&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;components:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Tabs,&amp;nbsp;Tab&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;}&lt;br&gt;&amp;lt;/script&amp;gt;&lt;/font&gt;&lt;br&gt;&lt;br&gt;&amp;lt;!--&amp;nbsp;optionally&amp;nbsp;use&amp;nbsp;our&amp;nbsp;default&amp;nbsp;style&amp;nbsp;--&amp;gt;&lt;br&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;style&amp;nbsp;src=&quot;vue-slim-tabs/themes/default.css&quot;&amp;gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在這個單檔案組件中，&amp;lt;template&amp;gt;並沒有前後端之分，這邊我們可以直接使用。但&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;紅字的&amp;lt;script&amp;gt;&lt;/span&gt;跟&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;藍字的&amp;lt;style&amp;gt;&lt;/span&gt;都是配合編譯器才能運作的寫法，我們不能直接使用。讓我們一步一步來改寫看看吧。&lt;/p&gt;
&lt;h3&gt;建立空白的單檔案組件&amp;nbsp;/ Make a empty single file component&lt;/h3&gt;
&lt;p&gt;先讓我們建立一個空白的單檔案組件，檔案名稱叫做「vue-slim-tabs.vue」，檔案內容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;template&amp;gt;&lt;br&gt;&amp;lt;/template&amp;gt;&lt;br&gt;&lt;br&gt;&amp;lt;script&amp;gt;
module.exports = {
}&lt;br&gt;&amp;lt;/script&amp;gt;&lt;br&gt;&lt;br&gt;&amp;lt;style&amp;gt;&lt;br&gt;&amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;請注意到&amp;lt;script&amp;gt;裡面我用的是「module.exports = {}」，這是給前端的寫法。&lt;/p&gt;
&lt;p&gt;再來我們一步一步把vue-slim-tabs文件中的單檔案組件搬過來。&lt;/p&gt;
&lt;h3&gt;設定模板 / Setup &amp;lt;template&amp;gt;&lt;/h3&gt;
&lt;p&gt;前面有提到，vue-slim-tabs文件中單檔案組件的範本&amp;lt;template&amp;gt;是可以直接使用的，所以我們直接把它的&amp;lt;template&amp;gt;內容移到我們的檔案裡。請加入以下紅字的語法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;template&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;lt;tabs&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;Vue&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;Vue&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;React&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;React&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;Svelte&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;Svelte&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/tabs&amp;gt;&lt;/span&gt;&lt;br&gt;&amp;lt;/template&amp;gt;&lt;br&gt;&lt;br&gt;&amp;lt;script&amp;gt;
module.exports = {
}&lt;br&gt;&amp;lt;/script&amp;gt;&lt;br&gt;&lt;br&gt;&amp;lt;style&amp;gt;&lt;br&gt;&amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;設定邏輯 / Setup &amp;lt;script&amp;gt;&lt;/h3&gt;
&lt;p&gt;在要處理&amp;lt;script&amp;gt;這一塊之前，我們先來看看原本單檔案組件裡面的&amp;lt;script&amp;gt;寫了什麼：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;import&amp;nbsp;{&amp;nbsp;Tabs,&amp;nbsp;Tab&amp;nbsp;}&amp;nbsp;from&amp;nbsp;&#39;vue-slim-tabs&#39;&lt;br&gt;&lt;br&gt;export&amp;nbsp;default&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;components:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Tabs,&amp;nbsp;Tab&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;「import { Tabs, Tab } from &#39;vue-slim-tabs&#39;」這行是為了從插件取得Tabs跟Tab兩個元件，以提供給下面components裡面的Tabs跟Tab使用。&lt;/p&gt;
&lt;p&gt;不過我們在前面引用插件時已經取得VueSlimTabs，所以不需要在這裡使用「import」。而該插件在「Vue.use(VueSlimTabs)」的時候，已經就把「Tabs」跟「Tab」這兩個組件註冊成全域組件 (關於套件註冊請看Vue.js的&lt;a href=&quot;https://vuejs.org/v2/guide/components-registration.html&quot; target=&quot;_blank&quot;&gt;Component Registration&lt;/a&gt;)。我們也不用在單檔案組件裡面設定components。如果加入components的話，反而會讓組件無法正常運作。因此，這整段程式碼其實可以完全省略。&lt;/p&gt;
&lt;p&gt;在這一步中，我們的單檔案組件並沒有修改，&lt;span style=&quot;color: rgb(57, 123, 33);&quot;&gt;綠字的&amp;lt;script&amp;gt;&lt;/span&gt;依然維持預設寫法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;template&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;tabs&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;Vue&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;Vue&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;React&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;React&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;Svelte&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;Svelte&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/tabs&amp;gt;&lt;br&gt;&amp;lt;/template&amp;gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color: rgb(57, 123, 33);&quot;&gt;&amp;lt;script&amp;gt;&lt;br&gt;module.exports&amp;nbsp;=&amp;nbsp;{&lt;br&gt;}&lt;br&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&amp;lt;style&amp;gt;&lt;br&gt;&amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;設定樣式 / Setup &amp;lt;script&amp;gt;&lt;/h3&gt;
&lt;p&gt;最後我們要來處理&amp;lt;style&amp;gt;。原本單檔案組裡面的&amp;lt;style&amp;gt;是這樣寫的：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;style&amp;nbsp;src=&quot;vue-slim-tabs/themes/default.css&quot;&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;看來，它是引用自己組件裡面的「vue-slim-tabs/themes/default.css」這個檔案。&lt;/p&gt;
&lt;p&gt;在vue-slim-tabs的&lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs/dist/&quot; target=&quot;_blank&quot;&gt;CDN&lt;/a&gt;裡面並沒有看到該檔案，不過從組件文件中我們可以找到它的在GitHub原始碼儲存庫&lt;a href=&quot;https://github.com/egoist/vue-slim-tabs&quot; target=&quot;_blank&quot;&gt;egoist/vue-slim-tabs&lt;/a&gt;，從裡面就可以找到「&lt;a href=&quot;https://github.com/egoist/vue-slim-tabs/blob/master/themes/default.css&quot; target=&quot;_blank&quot;&gt;vue-slim-tabs/themes/default.css&lt;/a&gt;」。&lt;/p&gt;
&lt;p&gt;讓我們直接儲存這個檔案為「&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2019/10/13-vue/default.css&quot; target=&quot;_blank&quot;&gt;default.css&lt;/a&gt;」，然後在我們的單檔案組件中引用它。請把&amp;lt;style&amp;gt;改成以下紅字的語法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;template&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;tabs&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;Vue&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;Vue&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;React&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;React&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;tab&amp;nbsp;title=&quot;Svelte&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This&amp;nbsp;is&amp;nbsp;Svelte&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/tab&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/tabs&amp;gt;&lt;br&gt;&amp;lt;/template&amp;gt;&lt;br&gt;&lt;br&gt;&amp;lt;script&amp;gt;&lt;br&gt;module.exports&amp;nbsp;=&amp;nbsp;{&lt;br&gt;}&lt;br&gt;&amp;lt;/script&amp;gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;lt;style src=&quot;default.css&quot;&amp;gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;到這邊為止，我們的單檔案組件「&lt;a href=&quot;https://github.com/pulipulichen/blog-pulipuli-info-data-2019/blob/master/10/13-vue/vue-slim-tabs.vue&quot; target=&quot;_blank&quot;&gt;vue-slim-tabs.vue&lt;/a&gt;」就準備好了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;STEP 5. 使用單檔案組件 / Use single file component&lt;/h2&gt;
&lt;p&gt;讓我們回到index.html網頁上。我們雖然建立了單檔案組件&lt;a href=&quot;https://github.com/pulipulichen/blog-pulipuli-info-data-2019/blob/master/10/13-vue/vue-slim-tabs.vue&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;vue-slim-tabs.vue&lt;/a&gt;，但要如何使用它呢？&lt;/p&gt;
&lt;h3&gt;引用http-vue-loader套件 / Include http-vue-loader&lt;/h3&gt;
&lt;p&gt;如果要在網頁引用單檔案組件，則是要透過&lt;a href=&quot;https://github.com/FranckFreiburger/http-vue-loader&quot; target=&quot;_blank&quot;&gt;http-vue-loader套件&lt;/a&gt;，我們很容易就可以找到http-vue-loader提供直接連線使用的&lt;a href=&quot;https://unpkg.com/http-vue-loader&quot; target=&quot;_blank&quot;&gt;CDN&lt;/a&gt;。關於http-vue-loader套件的介紹可以看「&lt;a href=&quot;https://kuro.tw/posts/2017/07/11/不需編譯也能載入-vue-元件檔-使用-http-vue-loader/&quot; target=&quot;_blank&quot;&gt;不需編譯也能載入 .vue 元件檔: 使用 http-vue-loader&lt;/a&gt;」這篇。&lt;/p&gt;
&lt;p&gt;讓我們先讓網頁加入http-vue-loader套件，請加入以下紅字的語法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&lt;br&gt;&amp;lt;html&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;Vue&amp;nbsp;vue-slim-tabs&amp;nbsp;DEMO&amp;lt;/title&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&quot;UTF-8&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;name=&quot;viewport&quot;&amp;nbsp;content=&quot;width=device-width,&amp;nbsp;initial-scale=1.0&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;body&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;div&amp;nbsp;id=&quot;app&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/div&amp;gt;&lt;br&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs@0.4.0/dist/vue-slim-tabs.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;lt;script&amp;nbsp;src=&quot;https://unpkg.com/http-vue-loader&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Vue.use(VueSlimTabs)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;app&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Vue({&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;el:&amp;nbsp;&#39;#app&#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/body&amp;gt;&lt;br&gt;&amp;lt;/html&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;註冊單檔案組件 / Register single file component&lt;/h3&gt;
&lt;p&gt;有了http-vue-loader之後，我們就能在Vue裡面設定components組件時，直接引用單檔案組件vue-slim-tabs.vue。請加入以下紅字的語法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&lt;br&gt;&amp;lt;html&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;Vue&amp;nbsp;vue-slim-tabs&amp;nbsp;DEMO&amp;lt;/title&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&quot;UTF-8&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;name=&quot;viewport&quot;&amp;nbsp;content=&quot;width=device-width,&amp;nbsp;initial-scale=1.0&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;body&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;div&amp;nbsp;id=&quot;app&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/div&amp;gt;&lt;br&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs@0.4.0/dist/vue-slim-tabs.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://unpkg.com/http-vue-loader&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Vue.use(VueSlimTabs)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;app&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Vue({&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;el:&amp;nbsp;&#39;#app&#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;components:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#39;vue-slim-tabs&#39;:&amp;nbsp;httpVueLoader(&#39;./vue-slim-tabs.vue&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/body&amp;gt;&lt;br&gt;&amp;lt;/html&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我們用httpVueLoader讀取單檔案組件vue-slim-tabls.vue，並且把它註冊成名為「vue-slim-tabs」的元件。&lt;/p&gt;
&lt;p&gt;再來就是要在模板裡面插入「&amp;lt;vue-slim-tabs&amp;gt;&amp;lt;/vue-slim-tabs&amp;gt;」元件，請加入以下紅字的語法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;!DOCTYPE&amp;nbsp;html&amp;gt;&lt;br&gt;&amp;lt;html&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;Vue&amp;nbsp;vue-slim-tabs&amp;nbsp;DEMO&amp;lt;/title&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;charset=&quot;UTF-8&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;meta&amp;nbsp;name=&quot;viewport&quot;&amp;nbsp;content=&quot;width=device-width,&amp;nbsp;initial-scale=1.0&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/head&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;body&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;div&amp;nbsp;id=&quot;app&quot;&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;lt;vue-slim-tabs&amp;gt;&amp;lt;/vue-slim-tabs&amp;gt;&lt;/span&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/div&amp;gt;&lt;br&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://cdn.jsdelivr.net/npm/vue-slim-tabs@0.4.0/dist/vue-slim-tabs.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;nbsp;src=&quot;https://unpkg.com/http-vue-loader&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Vue.use(VueSlimTabs)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;app&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Vue({&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;el:&amp;nbsp;&#39;#app&#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;components:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#39;vue-slim-tabs&#39;:&amp;nbsp;httpVueLoader(&#39;./vue-slim-tabs.vue&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/script&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/body&amp;gt;&lt;br&gt;&amp;lt;/html&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這樣子就能在模板裡面，顯示單檔案組件vue-slim-tabs.vue的內容了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-vvHsMTw-wD8/XaM_oqCAS-I/AAAAAAAEZmQ/NYHfVELzL5oB-bSk7YkcWHvpuxh2Rw3HQCK4BGAYYCw/s1600/anime.gif&quot;&gt;&lt;img src=&quot;//4.bp.blogspot.com/-vvHsMTw-wD8/XaM_oqCAS-I/AAAAAAAEZmQ/NYHfVELzL5oB-bSk7YkcWHvpuxh2Rw3HQCK4BGAYYCw/s251/anime.gif&quot; title=&quot;anime.gif&quot; alt=&quot;anime.gif&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在瀏覽器裡面重新讀取index.html網頁，你會發現vue-slim-tabs.vue的內容已經顯示在網頁上，而且可以正常運作。&lt;/p&gt;
&lt;p&gt;接下來就可以修改vue-slim-tabs.vue的內容，讓它符合你的需求吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / Wrap up&lt;/h2&gt;
&lt;p&gt;為什麼會寫這篇呢？這是因為早上看到黑暗執行緒寫了一篇「&lt;a href=&quot;https://blog.darkthread.net/blog/html-inc-vuejs-lib/&quot; target=&quot;_blank&quot;&gt;輕前端札記 - HTML + JS 引用 CDN Vue.js 套件&lt;/a&gt;」，裡面提到使用vue-slim-tab插件的時候卡關的問題。我就試著只用前端來使用Vue.js插件看看，一併把做法記錄一下。&lt;/p&gt;
&lt;p&gt;這邊一併說明其他可能的問題：&lt;/p&gt;
&lt;h3&gt;我能直接使用Wepback編譯好的JavaScript嗎？ / Could I use bundle JavaScript?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-1dLZ2kPVD4s/XaM_ogqZDBI/AAAAAAAEZmY/DhHqJt0Z-0Ey0zPaUpCfUYiM0peuBiThwCK4BGAYYCw/s1600/2019-1013-213845.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-1dLZ2kPVD4s/XaM_ogqZDBI/AAAAAAAEZmY/DhHqJt0Z-0Ey0zPaUpCfUYiM0peuBiThwCK4BGAYYCw/s450/2019-1013-213845.png&quot; title=&quot;2019-1013-213845.png&quot; alt=&quot;2019-1013-213845.png&quot; width=&quot;450&quot; height=&quot;280&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;vue-slim-tabs有提供&lt;a href=&quot;https://vue-slim-tabs.egoist.sh/&quot; target=&quot;_blank&quot;&gt;Demo網頁&lt;/a&gt;，做前端的人通常會覺得前端是沒有祕密的，我們可以分析網頁的內容，從中取得自己要的資訊。可惜的是，vue-slim-tabs的Demo網頁在編譯之後，似乎是無法直接使用的。&lt;/p&gt;
&lt;p&gt;首先是這個網頁是用&lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot; target=&quot;_blank&quot;&gt;html-webpack-plugin套件&lt;/a&gt;產生，裡面可以看到它用了Webpack程式切割功能，把檔案分割成多個chunk。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-EEuKbZtpXEw/XaM_rD6lbfI/AAAAAAAEZmk/lGqZAFLy3iQopw4gVw7_p9XJDjOZflDOACK4BGAYYCw/s1600/2019-1013-213813-TET-blank-style-position-To-Fixes.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-EEuKbZtpXEw/XaM_rD6lbfI/AAAAAAAEZmk/lGqZAFLy3iQopw4gVw7_p9XJDjOZflDOACK4BGAYYCw/s450/2019-1013-213813-TET-blank-style-position-To-Fixes.png&quot; title=&quot;2019-1013-213813-TET-blank-style-position-To-Fixes.png&quot; alt=&quot;2019-1013-213813-TET-blank-style-position-To-Fixes.png&quot; width=&quot;450&quot; height=&quot;228&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;它的JavaScript跟CSS都沒有提供Source Map，我們看到的都是編譯後的程式碼，完全無法瞭解它編譯前是什麼樣子。關於 Source Map，請看「&lt;a href=&quot;http://www.ruanyifeng.com/blog/2013/01/javascript_source_map.html&quot; target=&quot;_blank&quot;&gt;JavaScript Source Map 详解&lt;/a&gt;」這篇。&lt;/p&gt;
&lt;p&gt;雖然這種別人無法使用編譯結果的做法算是一種保護，不過對於要學習的人來說，確實是不太友善。&lt;/p&gt;
&lt;h3&gt;既然前端可以用了，那還需要後端編譯嗎？ / Do we still need module bundle?&lt;/h3&gt;
&lt;p&gt;透過本篇的做法，我們可以將原本用於後端搭配編譯器的Vue.js插件直接搬到前端使用。那既然都可以直接在前端用了，我們還需要後端編譯嗎？&lt;/p&gt;
&lt;p&gt;以最近我的使用感想來看，後端編譯還是能夠帶來許多好處：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;能用較多語法：比起純CSS，我現在比較喜歡寫LESS。可是這好像不能配合http-vue-loader在瀏覽器直接編譯。&lt;/li&gt;
  &lt;li&gt;編譯後檔案數量較少：Webpack之類的編譯器主要的工作是把眾多檔案打包成單一檔案，此外還能做到壓縮、混淆、分割等功能。從前端處理檔案雖然比較簡單，但是卻不適合生產環境。&lt;/li&gt;
  &lt;li&gt;模組化開發：在前端最麻煩的問題是很容易受到其他引用檔案的汙染。這可能是重複宣告了相同名稱的函式，或是jQuery引用擴充功能後卻被其他的jQuery覆蓋。在後端編譯的時候，通常我們比較不用擔心這種問題。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;後端編譯和前端直接使用兩者有不小的差別。透過這篇的改寫，你也會發現這兩者的寫法有不少的出入。因此，從一開始就得要決定你的專案是要用後端編譯，還是直接放在前端使用。不太能夠前期開發先用前端先寫來測試，後期部署生產環境時就直接拿到後端用。&lt;/p&gt;
&lt;p&gt;考量到效率問題，最後大家還是會選擇用後端編譯。這可能是因為如此，這就造成了儘管Vue.js可以直接在前端執行，但大家仍然是配合Webpack之類的編譯器為主。&lt;/p&gt;
&lt;h3&gt;要用Vue.js的插件嗎？ / Should I use Vue.js plugin?&lt;/h3&gt;
&lt;p&gt;老實說，我對Vue.js的插件其實瞭解的很少，也很少使用。這篇講Vue插件，我把它當作是一種學習。&lt;/p&gt;
&lt;p&gt;我之前大多是直接使用&lt;a href=&quot;https://semantic-ui.com/&quot; target=&quot;_blank&quot;&gt;Semantic UI&lt;/a&gt;，因為我覺得找一個統一的解決方案，比起個別找不同插件兜起來，好像看起來比較一致。不過Semantic UI有許多功能都會在元素上綁定事件，例如它的&lt;a href=&quot;https://semantic-ui.com/modules/tab.html#/usage&quot; target=&quot;_blank&quot;&gt;Tab&lt;/a&gt;若要順利運作，必須要先執行「$(&#39;.tabular.menu .item&#39;).tab();」這段程式碼。但Vue.js的模板會一直複寫，複寫後原本Semantic UI綁定的事件就會消失。&lt;/p&gt;
&lt;p&gt;Semantic UI也有推出Vue插件版本&lt;a href=&quot;https://semantic-ui-vue.github.io/#/&quot; target=&quot;_blank&quot;&gt;Semantic UI Vue&lt;/a&gt;，原本用class來指定的樣式，在插件版本中則是改用組件替代，例如插件版本的&lt;a href=&quot;https://semantic-ui-vue.github.io/#/modules/tab&quot; target=&quot;_blank&quot;&gt;Tab&lt;/a&gt;。我看了看覺得好像要重學很多東西，而且我也對原本的Semantic UI有些改寫，不太想要重新來過。所以目前還沒有深入瞭解Vue插件的用法。&lt;/p&gt;
&lt;p&gt;也許繼續用Vue.js開發之後會有不同的想法吧？讓我們一步一步慢慢看下去。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次使用在前端使用Vue.js插件的教學就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;你最常用Vue.js的什麼插件呢？&lt;/li&gt;
  &lt;li&gt;什麼情況下你會使用插件？什麼情況下你會自己直接寫呢？&lt;/li&gt;
  &lt;li&gt;要把component翻譯做「組件」好呢？還是「元件」好呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/4156085852792436122/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/10/vuejsvue-slim-tabs-how-to-use-vuejs.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/4156085852792436122'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/4156085852792436122'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/10/vuejsvue-slim-tabs-how-to-use-vuejs.html' title='如何不編譯直接在前端瀏覽器使用Vue.js插件？以vue-slim-tabs為例 / How to use Vue.js Plugins in Browser Without Module Bundler?'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//2.bp.blogspot.com/-hvTs7YCi3mE/XaM_pfXTeFI/AAAAAAAEZmc/i3xmXjMWTfcxegWNgiDziTgfDS5HTdrGQCK4BGAYYCw/s72-c/15-Vue_js_vue_slim_tabs_How_to_use.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-4949148758956723163</id><published>2019-10-12T00:16:00.003+08:00</published><updated>2019-10-12T00:16:58.211+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/AdonisJs"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Node.js"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Vue.js"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Webpack"/><category scheme="http://www.blogger.com/atom/ns#" term="程式語言/JavaScript"/><title type='text'>Node.js前後端CORS網頁應用試作：AdonisJs聊天室 / Practice of Build a CORS Full Stack Web Application in Node.js: AdonisJs Chat</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-SwX1R0zBhJA/XaCo-8wTSfI/AAAAAAAEZYo/9U3jg1_BLsoSNEzUcd0vVcf1P5fWCizuACK4BGAYYCw/s1600/14-Node_js_CORS_AdonisJs_Practice_of.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-SwX1R0zBhJA/XaCo-8wTSfI/AAAAAAAEZYo/9U3jg1_BLsoSNEzUcd0vVcf1P5fWCizuACK4BGAYYCw/s1600/14-Node_js_CORS_AdonisJs_Practice_of.png&quot; title=&quot;14-Node_js_CORS_AdonisJs_Practice_of.png&quot; alt=&quot;14-Node_js_CORS_AdonisJs_Practice_of.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;啊囉哈~~這裡是寫程式寫到整個人都變得優雅起來的布丁。&lt;/p&gt;
&lt;p&gt;作為網站工程師，用JavaScript開發前端就像是日常便飯一樣。但前端都用JavaScript開發了，那後端為何不用Node.js一起開發呢？這個想法是從兩年前開始，這期間跌跌撞撞不斷摸索，直到最近才找到比較理想的方案，那就是後端使用&lt;a href=&quot;https://adonisjs.com&quot; target=&quot;_blank&quot;&gt;AdonisJS&lt;/a&gt;作為伺服器與保存資料、前端使用&lt;a href=&quot;https://vuejs.org&quot; target=&quot;_blank&quot;&gt;Vue.js&lt;/a&gt;控制介面與邏輯，最後搭配&lt;a href=&quot;https://webpack.js.org&quot; target=&quot;_blank&quot;&gt;Webpack&lt;/a&gt;編譯。&lt;/p&gt;
&lt;p&gt;為了測試我需要的功能都能正常運作，我試作了一個&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/HTTP/CORS&quot; target=&quot;_blank&quot;&gt;跨網域資源共用(Cross-Origin Resource Sharining, CORS)&lt;/a&gt;情境下使用的網站外掛：&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat&quot; target=&quot;_blank&quot;&gt;AdonisJS聊天室&lt;/a&gt;。我寫這篇，是為了將到目前為止開發的心得告一個段落。以下將說明AdonisJS聊天室的功能、系統架構與技術，最後講講開發時遭遇的問題與想法。希望能夠為其他開發者提供一些解決問題的線索。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;AdonisJS聊天室 / AdonisJS Chat&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-oaw4Q9dJGjQ/XaCo-ZUwOoI/AAAAAAAEZYg/5-PzjydxQ0ABPFFoIyGrnOC5y-8UJl9vACK4BGAYYCw/s1600/2019-1010-193317-SKHub-mn-RE-CRT.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-oaw4Q9dJGjQ/XaCo-ZUwOoI/AAAAAAAEZYg/5-PzjydxQ0ABPFFoIyGrnOC5y-8UJl9vACK4BGAYYCw/s450/2019-1010-193317-SKHub-mn-RE-CRT.png&quot; title=&quot;2019-1010-193317-SKHub-mn-RE-CRT.png&quot; alt=&quot;2019-1010-193317-SKHub-mn-RE-CRT.png&quot; width=&quot;450&quot; height=&quot;149&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-YEwgA-FKNcY/XaCo-FcErEI/AAAAAAAEZYE/n-cMeOdeA_E5OB_Qs-5nn7omGjO7XKHNQCK4BGAYYCw/s1600/2019-1010-193409-OOO-pulipulichenggthub-pudding.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-YEwgA-FKNcY/XaCo-FcErEI/AAAAAAAEZYE/n-cMeOdeA_E5OB_Qs-5nn7omGjO7XKHNQCK4BGAYYCw/s450/2019-1010-193409-OOO-pulipulichenggthub-pudding.png&quot; title=&quot;2019-1010-193409-OOO-pulipulichenggthub-pudding.png&quot; alt=&quot;2019-1010-193409-OOO-pulipulichenggthub-pudding.png&quot; width=&quot;450&quot; height=&quot;192&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AdonisJs聊天室是一個以JavaScript程式語言為主所開發的網頁應用。它的主要功能是用於外掛到任何網站上，在網站的指定區塊內呈現完整的聊天室功能。這種提供給網站添增上去的外掛功能，就是一種&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/HTTP/CORS&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;跨網域資源共用(Cross-Origin Resource Sharining, CORS)&lt;/a&gt;情境下的應用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-GvG7rQlAIHQ/XaCo-UXZOxI/AAAAAAAEZYY/fGqNzb6RdIkWoSsVF2F25LOJX-0wTU5ZgCK4BGAYYCw/s1600/2019-1010-193443-Lorem-ipsum-or-sit-amet-consectetur.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-GvG7rQlAIHQ/XaCo-UXZOxI/AAAAAAAEZYY/fGqNzb6RdIkWoSsVF2F25LOJX-0wTU5ZgCK4BGAYYCw/s450/2019-1010-193443-Lorem-ipsum-or-sit-amet-consectetur.png&quot; title=&quot;2019-1010-193443-Lorem-ipsum-or-sit-amet-consectetur.png&quot; alt=&quot;2019-1010-193443-Lorem-ipsum-or-sit-amet-consectetur.png&quot; width=&quot;450&quot; height=&quot;337&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;讓我們用這個網站來說明網站外掛的安裝。這是架設在 http://127.0.0.1:3000/ 的純HTML網頁。這個網頁只有兩段文字，文字本身是用&lt;a href=&quot;https://www.lipsum.com&quot; target=&quot;_blank&quot;&gt;假文章產生器&lt;/a&gt;製作，本身並沒有後端伺服器的功能。&lt;/p&gt;
&lt;p&gt;為了讓這樣單純的HTML網頁添增聊天室的功能，我們先啟用AdonisJs聊天室的伺服器，然後在兩段文字中間插入來自 http://127.0.0.1:3333/ 伺服器的AdonisJS聊天室引用程式碼：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;script&amp;nbsp;src=&quot;http://127.0.0.1:3333/spa/client-loader.js&quot;&amp;nbsp;async&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-FdF0ZuffnzI/XaCo-XMNkiI/AAAAAAAEZYQ/9QqaTqLcqkwogSw76HHqTdWgkfmCTSA1gCK4BGAYYCw/s1600/2019-1010-193542-Lorem-ipsum-or-sit-amet-consectetur.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-FdF0ZuffnzI/XaCo-XMNkiI/AAAAAAAEZYQ/9QqaTqLcqkwogSw76HHqTdWgkfmCTSA1gCK4BGAYYCw/s450/2019-1010-193542-Lorem-ipsum-or-sit-amet-consectetur.png&quot; title=&quot;2019-1010-193542-Lorem-ipsum-or-sit-amet-consectetur.png&quot; alt=&quot;2019-1010-193542-Lorem-ipsum-or-sit-amet-consectetur.png&quot; width=&quot;450&quot; height=&quot;337&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;插入程式碼後，再重新讀取&amp;nbsp;http://127.0.0.1:3000/ 的純HTML網頁，這時候你就會像上圖一樣，兩段文字中間出現了聊天室的功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-_tv_Y1maxaI/XaCo-hV_EmI/AAAAAAAEZYk/b1uTdgrSeI4VERa07AJmnNi10jtmuxv2QCK4BGAYYCw/s1600/anime.gif&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-_tv_Y1maxaI/XaCo-hV_EmI/AAAAAAAEZYk/b1uTdgrSeI4VERa07AJmnNi10jtmuxv2QCK4BGAYYCw/s450/anime.gif&quot; title=&quot;anime.gif&quot; alt=&quot;anime.gif&quot; width=&quot;450&quot; height=&quot;229&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;聊天室支援的功能包括了：登入、註冊、OAuth網站登入(&lt;a href=&quot;https://developers.google.com/identity/protocols/OAuth2&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;、&lt;a href=&quot;https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;、&lt;a href=&quot;https://www.instagram.com/developer/authentication/&quot; target=&quot;_blank&quot;&gt;Instagram&lt;/a&gt;、&lt;a href=&quot;https://developer.foursquare.com/&quot; target=&quot;_blank&quot;&gt;Foursquare&lt;/a&gt;)、傳送訊息、傳送圖片、登出。此外，也可以連接到AdoniJs聊天室的管理功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-SPj11CCTyvE/XaCpUkHlS2I/AAAAAAAEZZo/CHBLC-8GtZEd3Q1LX2hKe4pFH4h6FyYEACK4BGAYYCw/s1600/2019-1010-201558-xz-HOME-SITEMAP-ABOUT-MENU-so-ii.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-SPj11CCTyvE/XaCpUkHlS2I/AAAAAAAEZZo/CHBLC-8GtZEd3Q1LX2hKe4pFH4h6FyYEACK4BGAYYCw/s450/2019-1010-201558-xz-HOME-SITEMAP-ABOUT-MENU-so-ii.png&quot; title=&quot;2019-1010-201558-xz-HOME-SITEMAP-ABOUT-MENU-so-ii.png&quot; alt=&quot;2019-1010-201558-xz-HOME-SITEMAP-ABOUT-MENU-so-ii.png&quot; width=&quot;450&quot; height=&quot;281&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;因為AdonisJs聊天室是一種外掛形式的應用，它可以掛載到任何網頁上。上圖就是我把它掛在Blogger的畫面。但是因為我預設沒有申請有效的HTTPS憑證，所以AdonisJs聊天室只能掛在http的網頁上，在https網頁上就不能運作了。&lt;/p&gt;
&lt;p&gt;AdonisJs聊天室的功能就這樣子而已。畢竟這只是我練習技術做出來的東西，並不是真的要拿來用的工具。儘管如此，AdonisJs聊天室是一套包含了前後端在內多種技術的綜合體。如果未來有遇到類似問題需要克服的話，這裡面有很多程式值得參考。&lt;/p&gt;
&lt;h2&gt;程式碼下載與安裝 / Download and Setup&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-l8GtrThiJ4U/XaCpT5A84UI/AAAAAAAEZZg/cjAh_b2MAsAHJ1p-Wl9sA_eiJdchm6vbgCK4BGAYYCw/s1600/2019-1010-204916-Pull-requests-Issues-Marketplace.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-l8GtrThiJ4U/XaCpT5A84UI/AAAAAAAEZZg/cjAh_b2MAsAHJ1p-Wl9sA_eiJdchm6vbgCK4BGAYYCw/s450/2019-1010-204916-Pull-requests-Issues-Marketplace.png&quot; title=&quot;2019-1010-204916-Pull-requests-Issues-Marketplace.png&quot; alt=&quot;2019-1010-204916-Pull-requests-Issues-Marketplace.png&quot; width=&quot;450&quot; height=&quot;337&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;AdonisJs聊天室 GitHub保存庫：&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat&quot;&gt;https://github.com/pulipulichen/20191004-adonisjs-chat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AdonisJs聊天室的程式碼放在GitHub保存庫中。如果你也想要試著安裝的話，請參考&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat&quot; target=&quot;_blank&quot;&gt;README.md&lt;/a&gt;裡面的說明架設。&lt;/p&gt;
&lt;p&gt;順利配置完成之後，你會啟動兩臺伺服器：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;http://127.0.0.1:3333 ： AdonisJs聊天室主要運作的伺服器&lt;/li&gt;
  &lt;li&gt;http://127.0.0.1:3000 ：純HTML網頁，提供AdonisJs聊天室外掛使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-vDK6J80etgI/XaCpT82sBdI/AAAAAAAEZZU/JYghhKNk9w07MxY0fuh4VaVQr4AFuAcsQCK4BGAYYCw/s1600/2019-1010-205021-Lorem-ipsum-or-sit-amet-consectetur.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-vDK6J80etgI/XaCpT82sBdI/AAAAAAAEZZU/JYghhKNk9w07MxY0fuh4VaVQr4AFuAcsQCK4BGAYYCw/s450/2019-1010-205021-Lorem-ipsum-or-sit-amet-consectetur.png&quot; title=&quot;2019-1010-205021-Lorem-ipsum-or-sit-amet-consectetur.png&quot; alt=&quot;2019-1010-205021-Lorem-ipsum-or-sit-amet-consectetur.png&quot; width=&quot;450&quot; height=&quot;337&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;配置完成之後，在瀏覽器打開&amp;nbsp;&amp;nbsp;&lt;a href=&quot;http://127.0.0.1:3000&quot; target=&quot;_blank&quot;&gt;http://127.0.0.1:3000&lt;/a&gt;，你看到上圖畫面的話，就代表AdonisJs聊天室正常運作了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;系統架構與技術 / System architecture&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-YUoBgUOcn1E/XaCpT75s5yI/AAAAAAAEZZY/PWvk4D6o_QgaozrXDQwbMobcSPuy5dJcACK4BGAYYCw/s1600/2019-1010-210941-Client-Side-Server-Side-Front-End.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-YUoBgUOcn1E/XaCpT75s5yI/AAAAAAAEZZY/PWvk4D6o_QgaozrXDQwbMobcSPuy5dJcACK4BGAYYCw/s450/2019-1010-210941-Client-Side-Server-Side-Front-End.png&quot; title=&quot;2019-1010-210941-Client-Side-Server-Side-Front-End.png&quot; alt=&quot;2019-1010-210941-Client-Side-Server-Side-Front-End.png&quot; width=&quot;450&quot; height=&quot;295&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AdonisJs聊天室的系統架構分成後端與前端。在上面的系統架構圖中，藍色的部分是AdonisJs聊天室主要的功能，綠色的部分則是要外掛上去的純HTML網頁。&lt;/p&gt;
&lt;p&gt;AdonisJs聊天室的後端部分是以Node.js的後端伺服器&lt;a href=&quot;https://adonisjs.com&quot; target=&quot;_blank&quot;&gt;AdonisJs框架&lt;/a&gt;為基礎，它是用來製作REST形式的Client API、對資料庫的控制、以及Admin管理介面的部分。&lt;/p&gt;
&lt;p&gt;AdonisJs聊天室中也提供Client JS的靜態JavaScript程式碼給前端使用，不過它並不是由AdonisJs框架製作，而是由&lt;a href=&quot;https://vuejs.org&quot; target=&quot;_blank&quot;&gt;Vue.js&lt;/a&gt;為基礎搭配&lt;a href=&quot;https://webpack.js.org&quot; target=&quot;_blank&quot;&gt;Webpack&lt;/a&gt;編譯而成。Client JS的工作是畫出前端介面、控制介面的操作邏輯，並且與後端的Client API互通資料，或是開啟後端的Admin管理介面。&lt;/p&gt;
&lt;p&gt;雖然AdonisJs聊天室具備OAuth認證的功能，但這張系統架構圖並沒有畫出來。這是因為AdonisJs聊天室的預設安裝中，OAuth的功能並無法使用，需要額外設定才行。這點待會會聊到。&lt;/p&gt;
&lt;p&gt;以下我們就從後端技術開始，一一聊聊我在AdonisJs聊天室開發過程中的一些想法吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;後端：AdonisJs / Back end: AdonisJs&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-ODBPeG0ZDMg/XaCpT6ko8HI/AAAAAAAEZZc/yTOmJJ9PJmMONf5NonGZvm2uV3l8mINzgCK4BGAYYCw/s1600/2019-1010-212545-JETS-Quick-Start-Guides-Recipes.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-ODBPeG0ZDMg/XaCpT6ko8HI/AAAAAAAEZZc/yTOmJJ9PJmMONf5NonGZvm2uV3l8mINzgCK4BGAYYCw/s450/2019-1010-212545-JETS-Quick-Start-Guides-Recipes.png&quot; title=&quot;2019-1010-212545-JETS-Quick-Start-Guides-Recipes.png&quot; alt=&quot;2019-1010-212545-JETS-Quick-Start-Guides-Recipes.png&quot; width=&quot;450&quot; height=&quot;241&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://adonisjs.com&quot; target=&quot;_blank&quot;&gt;AdonisJs&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;AdonisJs 官方網站：&lt;a href=&quot;https://adonisjs.com&quot; target=&quot;_blank&quot;&gt;https://adonisjs.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AdonisJs是一套Node.js中的網頁框架。跟早期的&lt;a href=&quot;https://expressjs.com/zh-tw/&quot; target=&quot;_blank&quot;&gt;Express.js&lt;/a&gt;相比，AdonisJs將許多功能優雅地包裝起來，並提供多種&lt;a href=&quot;https://adonisjs.com/docs/4.1/ace&quot; target=&quot;_blank&quot;&gt;指令&lt;/a&gt;，方便開發者產生&lt;a href=&quot;https://adonisjs.com/docs/4.1/ace#_creating_commands&quot; target=&quot;_blank&quot;&gt;鷹架(scaffold)&lt;/a&gt;、資料庫的&lt;a href=&quot;https://adonisjs.com/docs/4.1/migrations&quot; target=&quot;_blank&quot;&gt;遷移(migration)&lt;/a&gt;等等。AdonisJs整個框架吸收了&lt;a href=&quot;https://rubyonrails.org&quot; target=&quot;_blank&quot;&gt;Ruby on Rails&lt;/a&gt;的精華，運作架構採用明確易懂的&lt;a href=&quot;https://www.wikiwand.com/zh-tw/MVC&quot; target=&quot;_blank&quot;&gt;MVC模式&lt;/a&gt;呈現。&lt;/p&gt;
&lt;p&gt;儘管AdonisJs框架也有許多&lt;a href=&quot;https://www.wikiwand.com/zh/约定优于配置&quot; target=&quot;_blank&quot;&gt;約定優於配置&lt;/a&gt;的設計，一些小細節需要先學習那些單數、複數的約定才能使用。但好在AdonisJs的包裝做得很好，使得檔案目錄架構和程式碼十分容易理解，也易於調整和擴充。&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-bS_Y5woa-Jw/XaCpT3FUd-I/AAAAAAAEZZI/pUuX-jXPtXIzBwGiGb04APuloEgpPXZkgCK4BGAYYCw/s1600/2019-1011-050346.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-bS_Y5woa-Jw/XaCpT3FUd-I/AAAAAAAEZZI/pUuX-jXPtXIzBwGiGb04APuloEgpPXZkgCK4BGAYYCw/s450/2019-1011-050346.png&quot; title=&quot;2019-1011-050346.png&quot; alt=&quot;2019-1011-050346.png&quot; width=&quot;450&quot; height=&quot;295&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;


&lt;p&gt;雖然整個伺服器的後端是用AdonisJs框架所架設的http伺服器提供服務，但我認為AdonisJs框架最派得上用場的地方，是上圖紅框中Client API的路由，以及Client API跟資料庫之間的互動。&lt;/p&gt;
&lt;p&gt;底下讓我們更進一步來聊聊AdonisJs的特色吧。&lt;/p&gt;
&lt;h3&gt;簡單與漸進 / Simple and progressive&lt;/h3&gt;
&lt;p&gt;在談AdonisJs之前，我想先講一下我之前用過Express.js跟Feathers JS的感想。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-U1KAFODt8Fs/XaCpXjn_mdI/AAAAAAAEZZ8/-1mzgiW180I89AWmh9WMlzXB5n5pQ-t1ACK4BGAYYCw/s1600/express.jpg&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-U1KAFODt8Fs/XaCpXjn_mdI/AAAAAAAEZZ8/-1mzgiW180I89AWmh9WMlzXB5n5pQ-t1ACK4BGAYYCw/s450/express.jpg&quot; title=&quot;express.jpg&quot; alt=&quot;express.jpg&quot; width=&quot;450&quot; height=&quot;253&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://kopu.chat/2017/08/11/node-js-express-初入門-上集/&quot; target=&quot;_blank&quot;&gt;寫點科普，請給指教。&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;在接觸Node.js開發網站應用時，我一開始是用&lt;a href=&quot;https://expressjs.com/zh-tw/&quot; target=&quot;_blank&quot;&gt;Express.js&lt;/a&gt;。Express.js是很老牌且有豐富文件的框架，但是實在是太過自由，跟我之前在PHP時使用的&lt;a href=&quot;https://codeigniter.org.tw&quot; target=&quot;_blank&quot;&gt;CodeIgniter&lt;/a&gt;和&lt;a href=&quot;https://fatfreeframework.com/3.6/home&quot; target=&quot;_blank&quot;&gt;Fat-Free Framework&lt;/a&gt;相比，用Express.js框架開發的程式碼混亂許多。&lt;/p&gt;
&lt;p&gt;這可能是因為Express.js只專注於處理路由的邏輯問題(controller)，但實際上我們在網頁應用中，還需要處理網頁介面(view)和管理資料(model)的問題。雖然許多人也有為Express.js開發出各種功能，但是各種功能各自兜起來的結果，造成程式碼更加的混亂。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-2j0FOJRM1fs/XaCpYH32w5I/AAAAAAAEZaY/dzXDpPioc9Mi2NUnMTKTyvjiwfdyw1vNQCK4BGAYYCw/s1600/key-image-horizontal.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-2j0FOJRM1fs/XaCpYH32w5I/AAAAAAAEZaY/dzXDpPioc9Mi2NUnMTKTyvjiwfdyw1vNQCK4BGAYYCw/s450/key-image-horizontal.png&quot; title=&quot;key-image-horizontal.png&quot; alt=&quot;key-image-horizontal.png&quot; width=&quot;450&quot; height=&quot;71&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(圖片來源：&lt;a href=&quot;https://docs.feathersjs.com/guides/&quot; target=&quot;_blank&quot;&gt;Feathers&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;後來繼續要用Node.js開發網頁應用的時候，我就在想：都已經2019年了，總有比較新的框架出現了吧。花時間研究了一下，我找來了這個看似相當新穎的框架：&lt;a href=&quot;https://feathersjs.com&quot; target=&quot;_blank&quot;&gt;Feathers&lt;/a&gt;。Feathers號稱輕量框架，主打即時同步應用和開發REST API為主，這正符合我想要開發的系統需求。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-EwBKouU__fs/XaCpXi1qOvI/AAAAAAAEZaA/Z2ip9drqrUM1O_peQFLTLUKFW5r-QeIYACK4BGAYYCw/s1600/generate-service.e4513510.png&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-EwBKouU__fs/XaCpXi1qOvI/AAAAAAAEZaA/Z2ip9drqrUM1O_peQFLTLUKFW5r-QeIYACK4BGAYYCw/s450/generate-service.e4513510.png&quot; title=&quot;generate-service.e4513510.png&quot; alt=&quot;generate-service.e4513510.png&quot; width=&quot;450&quot; height=&quot;52&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://docs.feathersjs.com/guides/basics/services.html#database-adapters&quot; target=&quot;_blank&quot;&gt;Feathers: Generating a service&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Feathers的&lt;a href=&quot;https://docs.feathersjs.com/guides/basics/setup.html#what-we-will-do&quot; target=&quot;_blank&quot;&gt;起步文件&lt;/a&gt;中以架設聊天室作為入門教材，單以該文件架設的話，會覺得Feathers的確看起來很簡單。Feathers主打路由邏輯service的部分，它將管理資料庫的model包裝在service中，讓開發者專注於開發service。相較於AdonisJs，Feathers更強調用指令建立鷹架。它的指令還有多種選項搭配，這樣就能夠建立起具有不同基本功能的鷹架。&lt;/p&gt;
&lt;p&gt;然而，這種做法也帶來了各種困擾。最主要的問題，就是鷹架所產生的程式碼有太多看不懂的地方。跟著起步文件的教學去修改，系統當然是能夠順利運作。不過一旦想要自己修改的話，各種問題立刻層出不窮。&lt;/p&gt;
&lt;p&gt;其中一個相當基本、但是卻在官方文件找不到方法的問題，就是資料表之間的關聯(relationship或association)。起步文件中使用的&lt;a href=&quot;https://github.com/feathersjs-ecosystem/feathers-nedb&quot; target=&quot;_blank&quot;&gt;NeDB&lt;/a&gt;是一種NoSQL資料庫，資料表的建立和修改不必特別宣告&lt;a href=&quot;https://www.wikiwand.com/zh-tw/綱要_(資料庫)&quot; target=&quot;_blank&quot;&gt;資料庫綱要(schema)&lt;/a&gt;，而起步文件也省略了這一步。當我想要改用&lt;a href=&quot;https://www.postgresql.org/&quot; target=&quot;_blank&quot;&gt;PostgreSQL&lt;/a&gt;這種關聯式資料庫的時候，起步文件的資料庫設定就會發生錯誤。最後我是在「&lt;a href=&quot;https://medium.com/@mohammedalrowad/painless-file-upload-using-feathersjs-services-e994e4734e0c&quot; target=&quot;_blank&quot;&gt;Painless file upload using FeathersJs service&lt;/a&gt;」這篇文章找到了資料庫設定關聯的做法。改到最後雖然能夠運作，但改起來也不像文章說的無痛啊。&lt;/p&gt;
&lt;p&gt;Feathers太多功能都需要花時間研究。我花了很多時間嘗試作出CORS (不要用預設的socketio-client，改用&lt;a href=&quot;https://docs.feathersjs.com/api/client/rest.html&quot; target=&quot;_blank&quot;&gt;rest-client&lt;/a&gt;)跟&lt;a href=&quot;https://github.com/feathersjs/client/issues/250&quot; target=&quot;_blank&quot;&gt;HTTPS&lt;/a&gt;之後，最後決定放棄繼續深入研究Feathers，它真的太難用了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-i3F0aLeWaNg/XaCpXzHiP5I/AAAAAAAEZaU/GCSZtXtSj3kDjynaGrbC5mdR5VS27pQ7QCK4BGAYYCw/s1600/2019-1010-224421-npm-adonisjs-cli-adonts-new-yardstick.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-i3F0aLeWaNg/XaCpXzHiP5I/AAAAAAAEZaU/GCSZtXtSj3kDjynaGrbC5mdR5VS27pQ7QCK4BGAYYCw/s336/2019-1010-224421-npm-adonisjs-cli-adonts-new-yardstick.png&quot; title=&quot;2019-1010-224421-npm-adonisjs-cli-adonts-new-yardstick.png&quot; alt=&quot;2019-1010-224421-npm-adonisjs-cli-adonts-new-yardstick.png&quot; width=&quot;336.989&quot; height=&quot;210.994&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://adonisjs.com&quot; target=&quot;_blank&quot;&gt;AdonisJs: Quick Start&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;捨棄Feathers後，我繼續研究其他後端框架，最後就找到了現在這個AdonisJs。上圖是AdonisJs快速上手的入門，這樣子就能建立起一個基本的網站。不過這種入門誰都會，倒也不是什麼特別厲害的地方。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-TQZNjbzVcu8/XaCpXtdmdBI/AAAAAAAEZaQ/xHluYGNISOwsyn5oXfc0XK04bGsP6aiWwCK4BGAYYCw/s1600/2019-1010-225542-standard-AdonisJs-installation-looks.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-TQZNjbzVcu8/XaCpXtdmdBI/AAAAAAAEZaQ/xHluYGNISOwsyn5oXfc0XK04bGsP6aiWwCK4BGAYYCw/s450/2019-1010-225542-standard-AdonisJs-installation-looks.png&quot; title=&quot;2019-1010-225542-standard-AdonisJs-installation-looks.png&quot; alt=&quot;2019-1010-225542-standard-AdonisJs-installation-looks.png&quot; width=&quot;276&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://adonisjs.com/docs/4.1/folder-structure&quot; target=&quot;_blank&quot;&gt;AdonisJs: Directory Structure&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;讓我一開始就有好感的是它的目錄結構。AdonisJs的目錄結構區分得很容易理解，一開始主要修改的地方在 start 底下，應用程式的內容就在 app 底下，而設定檔就在 config 底下。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;const&amp;nbsp;Config&amp;nbsp;=&amp;nbsp;use(&#39;Config&#39;)&lt;br&gt;const&amp;nbsp;appSecret&amp;nbsp;=&amp;nbsp;Config.get(&#39;app.appSecret&#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這些程式碼擺在可以容易理解的位置，而且也是以容易理解的方式讓人使用。以設定 &lt;a href=&quot;https://adonisjs.com/docs/4.1/configuration-and-env&quot; target=&quot;_blank&quot;&gt;Configuration&lt;/a&gt; 為例子來說，上面這段程式碼就是在讀取「config/app.js」檔案中的appSecret屬性。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//&amp;nbsp;app/Controllers/Http/Admin/UserController&amp;nbsp;-&amp;gt;&amp;nbsp;store()&lt;br&gt;Route.post(url,&amp;nbsp;&#39;Admin/UserController.store&#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這是&lt;a href=&quot;https://adonisjs.com/docs/4.1/controllers&quot; target=&quot;_blank&quot;&gt;Controller&lt;/a&gt;的用法，我們可以在&amp;nbsp;routes.js 裡面設定從什麼路徑對應到特定的 Controller 檔案中的方法 (method)，用起來很直覺。&lt;/p&gt;
&lt;p&gt;AdonisJs框架裡面的各個檔案所需要的程式碼看起來都不多，而且大部分都是不需要特別講解就能夠理解的功能。其中讓我最覺得優雅的，大概就是AdonisJs的資料庫管理吧。&lt;/p&gt;
&lt;h3&gt;資料庫管理ORM：Lucid / Object-Relational Mapping: Lucid&lt;/h3&gt;
&lt;p&gt;在AdonisJs裡面，資料庫綱要的建立是使用&lt;a href=&quot;https://adonisjs.com/docs/4.1/migrations&quot; target=&quot;_blank&quot;&gt;遷移功能(migration)&lt;/a&gt;。以下是users資料表中建立username、email、password三個欄位的做法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&#39;use&amp;nbsp;strict&#39;&lt;br&gt;&lt;br&gt;const&amp;nbsp;Schema&amp;nbsp;=&amp;nbsp;use(&#39;Schema&#39;)&lt;br&gt;&lt;br&gt;class&amp;nbsp;UsersSchema&amp;nbsp;extends&amp;nbsp;Schema&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;up&amp;nbsp;()&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.create(&#39;users&#39;,&amp;nbsp;(table)&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;table.increments()
      table.string(&#39;username&#39;, 80).notNullable().unique()
      table.string(&#39;email&#39;, 254).notNullable().unique()
      table.string(&#39;password&#39;, 60).notNullable()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;table.timestamps()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;down&amp;nbsp;()&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.drop(&#39;users&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;}&lt;br&gt;&lt;br&gt;module.exports&amp;nbsp;=&amp;nbsp;UsersSchema&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這種以程式碼控制資料庫綱要的做法，在很久以前就有不少開發者極力倡導。這樣的做法最主要的好處是，開發者只需要在程式裡面維護資料庫，不必特別在個別資料庫中用SQL語法進行設定。要知道各個資料庫的SQL語法略有不同，有時候還會遇到不同版本資料庫語法不同的問題，實在令人煩心。&lt;/p&gt;
&lt;p&gt;我以前常常在維護系統不同版本的時候遇到資料表無法對應的問題。少了一個欄位、欄位名字變更，整個系統就無法使用。以前資料庫綱要的備份還原都只能依賴&lt;a href=&quot;http://blog.pulipuli.info/2012/12/postgresql.html&quot; target=&quot;_blank&quot;&gt;SQL指令&lt;/a&gt;，那實在是很麻煩的事情。因此看到AdonisJs這種用遷移功能管理資料庫的方法，就特別深得我心。&lt;/p&gt;
&lt;p&gt;資料表建立之後，我們就能在AdonisJs裡面使用它的物件關聯對應工具：&lt;a href=&quot;https://adonisjs.com/docs/4.1/lucid&quot; target=&quot;_blank&quot;&gt;Lucid ORM&lt;/a&gt;。在這之前我用過&lt;a href=&quot;https://sequelize.org&quot; target=&quot;_blank&quot;&gt;Sequelize ORM&lt;/a&gt;，我得說Sequelize ORM的確很強大，但使用上卻相當繁瑣。相較之下，Lucid ORM採用了約定優於配置的做法，這讓很多時候我們不用預先設定就能直接使用，整個程式碼看起來相當簡潔。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-35K5M_xlnDw/XaCpXkqItFI/AAAAAAAEZaI/f1ZOMvSkG5srMjmyWQI8XZ0ik2T00697QCK4BGAYYCw/s1600/HasMany_kkbac9.png&quot;&gt;&lt;img src=&quot;//1.bp.blogspot.com/-35K5M_xlnDw/XaCpXkqItFI/AAAAAAAEZaI/f1ZOMvSkG5srMjmyWQI8XZ0ik2T00697QCK4BGAYYCw/s450/HasMany_kkbac9.png&quot; title=&quot;HasMany_kkbac9.png&quot; alt=&quot;HasMany_kkbac9.png&quot; width=&quot;450&quot; height=&quot;144&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://adonisjs.com/docs/4.1/relationships#_has_many&quot; target=&quot;_blank&quot;&gt;AdonisJs: Relationships&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;我以在Feathers遇到最痛苦的資料表關聯為例，上面的ERM中可以看到目前有兩個資料表：users跟posts。其中users中每一位user有許多的posts，可以看到posts資料表裡面有user_id這個外鍵(Foreign Key, FK)用來對應它是那位user。&lt;/p&gt;
&lt;p&gt;如果我們要從user找到他撰寫的posts的話，要用&lt;a href=&quot;https://adonisjs.com/docs/4.1/relationships#_has_many&quot; target=&quot;_blank&quot;&gt;hasMany&lt;/a&gt;寫法，對應這樣的資料表關係，在Lucid ORM的寫法是：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;const&amp;nbsp;Model&amp;nbsp;=&amp;nbsp;use(&#39;Model&#39;)&lt;br&gt;&lt;br&gt;class&amp;nbsp;User&amp;nbsp;extends&amp;nbsp;Model&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;posts&amp;nbsp;()&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;this.hasMany(&#39;App/Models/Post&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;br&gt;}&lt;br&gt;&lt;br&gt;module.exports&amp;nbsp;=&amp;nbsp;User&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;相反的，如果我們要從post找到它撰寫的user的話，要用&lt;a href=&quot;https://adonisjs.com/docs/4.1/relationships#_belongs_to&quot; target=&quot;_blank&quot;&gt;belongsTo&lt;/a&gt;的寫法，在Lucid ORM裡面的寫法是：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;const&amp;nbsp;Model&amp;nbsp;=&amp;nbsp;use(&#39;Model&#39;)&lt;br&gt;&lt;br&gt;class&amp;nbsp;Post&amp;nbsp;extends&amp;nbsp;Model&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;user&amp;nbsp;()&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;this.belongsTo(&#39;App/Models/User&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;br&gt;}&lt;br&gt;&lt;br&gt;module.exports&amp;nbsp;=&amp;nbsp;Post&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;透過hasMany跟belongsTo這樣子語義的語法，讓可讀性提高了許多。&lt;/p&gt;
&lt;p&gt;另一方面，Lucid ORM在使用上也很容易理解。如果我們要查詢user，條件是他所發表的post_title包含「hello」這串文字的話，語法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;let&amp;nbsp;users&amp;nbsp;=&amp;nbsp;await&amp;nbsp;User&lt;br&gt;&amp;nbsp;&amp;nbsp;.query()&lt;br&gt;&amp;nbsp;&amp;nbsp;.whereHas(&#39;posts&#39;,&amp;nbsp;(builder)&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;builder.where(&#39;post_title&#39;,&amp;nbsp;&#39;like&#39;,&amp;nbsp;&#39;%hello%&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&amp;nbsp;&amp;nbsp;.fetch()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這樣就能優雅地處理資料表之間的關聯，而不必煩惱各種複雜的join用法。&lt;/p&gt;
&lt;p&gt;此外，AdonisJs大量採用了&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/async-functions?hl=zh-tw&quot; target=&quot;_blank&quot;&gt;ES2017的async/await寫法&lt;/a&gt;，這讓整個以非同步函數主宰的Node.js世界變得非常簡單明瞭，這樣子看起來才真的有2019年程式碼的現代感。關於async和await的用法，我在下面的axios會再繼續聊到它。&lt;/p&gt;
&lt;h3&gt;實用的認證系統 /&amp;nbsp;Authentication&lt;/h3&gt;
&lt;p&gt;作為一個網站應用，使用者的登入和登出是基本的功能。AdonisJs特別將認證系統 &lt;a href=&quot;https://adonisjs.com/docs/4.1/authentication&quot; target=&quot;_blank&quot;&gt;Authentication&lt;/a&gt; 分離成為一個獨立功能，我們可以這樣子實作登入功能：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;class&amp;nbsp;UserController&amp;nbsp;{&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;async&amp;nbsp;login&amp;nbsp;({&amp;nbsp;auth,&amp;nbsp;request&amp;nbsp;})&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const&amp;nbsp;{&amp;nbsp;email,&amp;nbsp;password&amp;nbsp;}&amp;nbsp;=&amp;nbsp;request.all()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;await&amp;nbsp;auth.attempt(email,&amp;nbsp;password)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;&#39;Logged&amp;nbsp;in&amp;nbsp;successfully&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;真的是簡單易懂到一種境界。這個auth背後是直接對應到User Model，而設定檔都在 config/auth.js 裡面。相較之下，Feathers的認證系統就跟謎一樣複雜。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-IW-HanuLHZU/XaCpkKHQ9wI/AAAAAAAEZbA/6vIk8XAzUgkAEX9yZ-3Ny4r57Er3tVQ9gCK4BGAYYCw/s1600/2019-1011-001534.png&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-IW-HanuLHZU/XaCpkKHQ9wI/AAAAAAAEZbA/6vIk8XAzUgkAEX9yZ-3Ny4r57Er3tVQ9gCK4BGAYYCw/s450/2019-1011-001534.png&quot; title=&quot;2019-1011-001534.png&quot; alt=&quot;2019-1011-001534.png&quot; width=&quot;450&quot; height=&quot;149&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;除了網站內的登入之外，AdonisJs也有支援&lt;a href=&quot;https://www.wikiwand.com/zh-tw/开放授权&quot; target=&quot;_blank&quot;&gt;OAuth&lt;/a&gt;登入，它是使用&lt;a href=&quot;https://github.com/adonisjs/adonis-ally&quot; target=&quot;_blank&quot;&gt;Ally&lt;/a&gt;套件來實作這種&lt;a href=&quot;https://adonisjs.com/docs/4.1/social-auth&quot; target=&quot;_blank&quot;&gt;社群認證 Social Authentication&lt;/a&gt; 的功能。Ally套件提供了Facebook、Github、Google、LinkedIn、Twitter、Instagram、Foursquare的OAuth認證整合功能。這七種網站試下來，我最後只有成功整合四種：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;：申請與設定最簡單，從「&lt;a href=&quot;https://github.com/settings/applications/new&quot; target=&quot;_blank&quot;&gt;Register a new OAuth application&lt;/a&gt;」網頁可以直接建立OAuth，然後在「&lt;a href=&quot;https://github.com/settings/developers&quot; target=&quot;_blank&quot;&gt;OAuth Apps&lt;/a&gt;」這裡可以管理已經建立的服務。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.foursquare.com/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Foursquare&lt;/a&gt;：申請時要從&lt;a href=&quot;https://developer.foursquare.com/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Foursquare Developers&lt;/a&gt;進入。註冊帳號似乎要用Facebook的身份，不過也能夠獨立申請帳號。註冊成功之後，剩下的申請都很簡單了。(註：我本來因為沒有成功在Foursqure註冊帳號而放棄它，所以前面截圖都沒出現Foursquare的按鈕。不過後來換了無痕視窗註冊新帳號後，Foursqure就能使用了。)&lt;br&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.instagram.com/developer/&quot; target=&quot;_blank&quot;&gt;Instagram&lt;/a&gt;：申請與設定比GitHub複雜一點，但也夠簡單了。申請請從&lt;a href=&quot;https://www.instagram.com/developer/&quot; target=&quot;_blank&quot;&gt;Instagram Developer介面&lt;/a&gt;進入，做法可以參考「&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10197374&quot; target=&quot;_blank&quot;&gt;[30apis] Day 28 : Instagram Platform API&lt;/a&gt;」這篇，但其實直接看介面摸索也不難啦。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://console.developers.google.com/&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;：Google申請OAuth要從&lt;a href=&quot;https://console.developers.google.com&quot; target=&quot;_blank&quot;&gt;Google APIs&lt;/a&gt;進入，裡面手續蠻複雜的，但申請Google OAuth的人很多，網路上教學也不少，例如「&lt;a href=&quot;http://blog.kenyang.net/2012/09/15/google-oauth-20-google-api&quot; target=&quot;_blank&quot;&gt;使用Google OAuth 2.0 存取Google API&lt;/a&gt;」這篇。不過因為Google APIs持續有在改版，介面不會完全長得一樣，真的要申請的時候還是要自己摸索一下才行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他的服務我都沒能成功整合：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.facebook.com/apps&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt;：申請時要從&lt;a href=&quot;https://developers.facebook.com/apps&quot; target=&quot;_blank&quot;&gt;facebook for developers&lt;/a&gt;進入。申請設定是不難，但它要求必須要用https才行使用OAuth。我沒有購買憑證的打算，所以就略過Facebook。關於AdonisJs的HTTPS服務，下面會再聊到。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/developers&quot; target=&quot;_blank&quot;&gt;LinkedIn&lt;/a&gt;：申請時要從&lt;a href=&quot;https://www.linkedin.com/developers&quot; target=&quot;_blank&quot;&gt;Linkedin Developers&lt;/a&gt;進入。申請憑證的過程很順利，不過實際上它跟AdonisJs的介接會失敗，出現了「Response code 410 (Gone)」的錯誤。我花了一些時間找不到解決方法，所以就放棄了LinkedIn。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.twitter.com/&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt;：申請時要從&lt;a href=&quot;https://developer.twitter.com/&quot; target=&quot;_blank&quot;&gt;Twitter Developer&lt;/a&gt;進入。不過要註冊成為Twitter的開發者，必須填寫相當多的資料。我填到一半就放棄了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ally似乎就只有提供這七種服務，目前沒有新增其他服務的途徑。我本來也想註冊&lt;a href=&quot;https://www.plurk.com/API&quot; target=&quot;_blank&quot;&gt;Plurk OAuth&lt;/a&gt;來試試看，不過似乎Ally並沒有提供自行擴充的方法。&lt;/p&gt;
&lt;p&gt;話說回來，儘管AdonisJs有提供OAuth認證整合的功能，不過實際上這不是我系統會用到的需求。這部分我就是試著做做看而已，並沒有深入鑽研。&lt;/p&gt;
&lt;h3&gt;檔案上傳 / Upload files&lt;/h3&gt;
&lt;p&gt;前面有提到Feathers無痛實作檔案上傳，但是實作起來卻還是很複雜的例子。這邊讓我們來看看AdonisJs是怎麼實作&lt;a href=&quot;https://adonisjs.com/docs/4.1/file-uploads&quot; target=&quot;_blank&quot;&gt;檔案上傳 File Uploads&lt;/a&gt; 的吧：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;const&amp;nbsp;Helpers&amp;nbsp;=&amp;nbsp;use(&#39;Helpers&#39;)&lt;br&gt;&lt;br&gt;Route.post(&#39;upload&#39;,&amp;nbsp;async&amp;nbsp;({&amp;nbsp;request&amp;nbsp;})&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;const&amp;nbsp;profilePic&amp;nbsp;=&amp;nbsp;request.file(&#39;profile_pic&#39;,&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;types:&amp;nbsp;[&#39;image&#39;],&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;size:&amp;nbsp;&#39;2mb&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;await&amp;nbsp;profilePic.move(Helpers.tmpPath(&#39;uploads&#39;),&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name:&amp;nbsp;&#39;custom-name.jpg&#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;overwrite:&amp;nbsp;true&lt;br&gt;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!profilePic.moved())&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;profilePic.error()&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;return&amp;nbsp;&#39;File&amp;nbsp;moved&#39;&lt;br&gt;})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;呃，就這樣？&lt;/p&gt;
&lt;p&gt;我本來以為&lt;a href=&quot;http://www.webtech.tw/info.php?tid=24&quot; target=&quot;_blank&quot;&gt;PHP檔案上傳&lt;/a&gt;已經夠簡單了。但PHP容易上傳的檔案功能，卻因為需要克服資安漏洞而必須做相當多的檢查。做完之後反而變得很複雜。&lt;/p&gt;
&lt;p&gt;沒想到AdonisJs的檔案上傳不僅做好了檢查、檔案大小，連搬移檔案、重新命名、複寫等設定都如此清楚易懂。我把它跟認證系統結合後的程式碼寫在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/48ad73732591c1aebe3960fd2bf2b0974dae40c1/app/Controllers/Http/Client/MessageController.js#L60&quot; target=&quot;_blank&quot;&gt;MessageController.upload()&lt;/a&gt;當中，實際上做起來也很簡單，出乎意料之外的簡單。&lt;/p&gt;
&lt;p&gt;這也是我覺得AdonisJs寫起來很優雅的特點之一。&lt;/p&gt;
&lt;h3&gt;CORS的支援 / Enable Cross-Origin Resource Sharing&amp;nbsp;&lt;/h3&gt;
&lt;p&gt;AdonisJs對&lt;a href=&quot;https://adonisjs.com/docs/4.1/cors&quot; target=&quot;_blank&quot;&gt;CORS&lt;/a&gt;的支援有獨立的設定。最主要是修改 &lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/config/cors.js&quot; target=&quot;_blank&quot;&gt;config/cors.js&lt;/a&gt; 中設定。這邊要調整的參數有點多，請直接參考我的 &lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/config/cors.js&quot; target=&quot;_blank&quot;&gt;cors.js&lt;/a&gt; 檔案即可。&lt;/p&gt;
&lt;p&gt;再來要關閉 &lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/config/shield.js&quot; target=&quot;_blank&quot;&gt;config/shield.js&lt;/a&gt; 中的CSRF Protection，設定檔請看&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/f7b3bcae54237b8fb32ae80629ab7dc26c0f5c45/config/shield.js#L135&quot; target=&quot;_blank&quot;&gt;shield.js&lt;/a&gt;。因為AdonisJs聊天室的運作機制就是會從不同網站上傳送資料到伺服器，而CSRF會擋掉POST等請求，所以我就將CSRF關閉不使用。關於CSRF攻擊手法，請參考「&lt;a href=&quot;https://blog.techbridge.cc/2017/02/25/csrf-introduction/&quot; target=&quot;_blank&quot;&gt;讓我們來談談 CSRF&lt;/a&gt;」這篇。&lt;/p&gt;
&lt;p&gt;最後客戶端也要有對應的設定。我使用客戶端請求資料的函式庫axios中，必須讓它帶有cookie等憑證資料。這個做法是開啟「withCredentials: true」的設定，最推薦的做法是直接宣告它預設包含憑證，寫法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;import&amp;nbsp;axios&amp;nbsp;from&amp;nbsp;&#39;axios&#39;&lt;br&gt;axios.defaults.withCredentials&amp;nbsp;=&amp;nbsp;true&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;詳細做法可以參考我寫的&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/f7b3bcae54237b8fb32ae80629ab7dc26c0f5c45/webpack-app/helpers/AxiosHelper.js#L2&quot; target=&quot;_blank&quot;&gt;AxiosHelper.js&lt;/a&gt;檔案。&lt;/p&gt;
&lt;h3&gt;https的支援 / https server&lt;/h3&gt;
&lt;p&gt;AdonisJs預設是用http伺服器，並不是啟用加密的https伺服器。如果要啟用https的話，可以參考「&lt;a href=&quot;https://adonisjs.com/recipes/4.1/using-https&quot; target=&quot;_blank&quot;&gt;Using Https&lt;/a&gt;」這篇。我將https伺服器的啟動方法額外寫成了&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/server-https.js&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;server-https.js&lt;/a&gt;檔案，我們可以用「npm run start-https」指令啟動https伺服器，它預設會以連結埠4444啟動，可以用 https://127.0.0.1:4444&amp;nbsp;連線到https伺服器。&lt;/p&gt;
&lt;p&gt;值得注意的是，我們其實通常會需要同時啟動http和https兩種伺服器。為此我使用了&lt;a href=&quot;https://www.npmjs.com/package/concurrently&quot; target=&quot;_blank&quot;&gt;concurrently套件&lt;/a&gt;來同時啟動兩個不同的AdonisJs伺服器，這部分的寫法請看&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/48ad73732591c1aebe3960fd2bf2b0974dae40c1/package.json#L9&quot; target=&quot;_blank&quot;&gt;package.json的script&lt;/a&gt;。&lt;/p&gt;
&lt;h4&gt;HTTPS憑證 / HTTPS certificate&lt;/h4&gt;
&lt;p&gt;如果只是要測試的話，可以用&lt;a href=&quot;https://www.npmjs.com/package/pem&quot; target=&quot;_blank&quot;&gt;pem&lt;/a&gt;套件製作自簽憑證(self-signed certificate)，以此直接啟動https伺服器。這種做法不像&lt;a href=&quot;https://blog.miniasp.com/post/2019/02/25/Creating-Self-signed-Certificate-using-OpenSSL&quot; target=&quot;_blank&quot;&gt;使用OpenSSL開發使用自簽憑證&lt;/a&gt;這樣麻煩，使用上簡單許多。我將使用自簽憑證啟動https伺服器的做法寫在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/server-https.js&quot; target=&quot;_blank&quot;&gt;server-https.js&lt;/a&gt;檔案中。&lt;/p&gt;
&lt;p&gt;此外，http和https兩種伺服器必須走不同的連結埠(port)。在AdonisJs裡面，連結埠設定是放在&lt;a href=&quot;https://adonisjs.com/docs/4.1/configuration-and-env#_env_provider&quot; target=&quot;_blank&quot;&gt;.env檔案&lt;/a&gt;之中。為了讓server-https.js伺服器使用不同的設定檔，我額外建立了.env.https檔案，然後用以下程式讀取它：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;require(&#39;dotenv&#39;).config({&amp;nbsp;path:&amp;nbsp;&#39;.env.https&#39;&amp;nbsp;})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這部分的程式碼也在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/a51082970025b64cd0697f02908eeb5091ef1caf/server-https.js#L42&quot; target=&quot;_blank&quot;&gt;server-https.js&lt;/a&gt;裡面。&lt;/p&gt;
&lt;p&gt;自簽憑證的https伺服器終究只能拿來測試用。如果要長久服務的話，則必須要申請有效的HTTPS憑證才行。現在是有像是&lt;a href=&quot;https://www.sslforfree.com&quot; target=&quot;_blank&quot;&gt;SSL for Free&lt;/a&gt;的免費服務，可以用來申請&lt;a href=&quot;https://letsencrypt.org/zh-tw/&quot; target=&quot;_blank&quot;&gt;Let&#39;s Encrypt&lt;/a&gt;的HTTPS憑證，不過這個90天就會失效。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-7GDGiv64Rek/XaCptezL4mI/AAAAAAAEZbk/pMODYtEU5c4ajDO3OXQaHKsVJ14CO93MACK4BGAYYCw/s1600/2019-1011-014244.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-7GDGiv64Rek/XaCptezL4mI/AAAAAAAEZbk/pMODYtEU5c4ajDO3OXQaHKsVJ14CO93MACK4BGAYYCw/s201/2019-1011-014244.png&quot; title=&quot;2019-1011-014244.png&quot; alt=&quot;2019-1011-014244.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你有申請好的HTTPS憑證，請放在./config/cert資料夾中，並將憑證檔案命名為「certificate.crt」、私密金鑰檔案命名為「private.key」命名。這樣子server-https.js就會以這份HTTPS憑證啟動HTTPS伺服器。&lt;/p&gt;
&lt;h3&gt;豐富的文件 / Documents&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://adonisjs.com/docs&quot; target=&quot;_blank&quot;&gt;AdonisJs的文件&lt;/a&gt;相當完整。網站開發會用到的功能，在文件中幾乎都找得到。此外，它的&lt;a href=&quot;https://forum.adonisjs.com&quot; target=&quot;_blank&quot;&gt;討論區&lt;/a&gt;也有相當多提問和解答，我有不少文件中沒找到的做法，在Google到它討論區中找到了解答。&lt;/p&gt;
&lt;p&gt;擁有大量且活躍的使用者，是挑選框架的重要參考依據之一。相較之下，我在研究Feathers的時候，常常很難找到想要的功能，研究起來很令人洩氣。&lt;/p&gt;
&lt;p&gt;儘管如此，多虧AdonisJs大部分程式都相當容易理解和修改，實際上開發時許多時候都不需要仰賴文件，可以直接嘗試自己想要的修改方式，而大多時候它都能如我預期般的運作。這種感覺真的很不錯。&lt;/p&gt;
&lt;h3&gt;其他沒用到的功能 / Other feathers&lt;/h3&gt;
&lt;p&gt;AdonisJs還有大量我沒用到的功能，其中一個大概就是&lt;a href=&quot;https://adonisjs.com/docs/4.1/views&quot; target=&quot;_blank&quot;&gt;前端views&lt;/a&gt;的部分。AdonisJs似乎也有好用的模板引擎，不過因為我主要是在CORS情境下使用Vue.js處理前端，所以這部分功能我都沒用到。&lt;/p&gt;
&lt;p&gt;這次AdonisJs聊天室只是將AdonisJs作為REST API伺服器，它的功能並不多。未來如果要開發複雜應用的話，我會想要嘗試AdonisJs的&lt;a href=&quot;https://adonisjs.com/docs/4.1/testing&quot; target=&quot;_blank&quot;&gt;單元測試 Testing&lt;/a&gt;。看起來似乎沒有很複雜，可以用它來測試單一REST API功能是否正常運作。&lt;/p&gt;
&lt;h3&gt;小結 / Before next&lt;/h3&gt;
&lt;p&gt;好啦，寫到這裡，字數居然已經破萬字了。不過我們才聊完後端的AdonisJs框架而已呢。接下來讓我們轉換心情，來看看前端的部分吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;前端：Vue.js / Front end: Vue.js&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-3sxS6gvfUR0/XaCpkEsaEoI/AAAAAAAEZa4/IWXz04pcXas2dYuwjyv0VjyFGkRcbtTMgCK4BGAYYCw/s1600/Vue.JS_Logo_transparent_PNG.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-3sxS6gvfUR0/XaCpkEsaEoI/AAAAAAAEZa4/IWXz04pcXas2dYuwjyv0VjyFGkRcbtTMgCK4BGAYYCw/s450/Vue.JS_Logo_transparent_PNG.png&quot; title=&quot;Vue.JS_Logo_transparent_PNG.png&quot; alt=&quot;Vue.JS_Logo_transparent_PNG.png&quot; width=&quot;450&quot; height=&quot;389&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.stickpng.com/img/icons-logos-emojis/tech-companies/vue-js-logo&quot; target=&quot;_blank&quot;&gt;StickPNG&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Vue.js 官方網站：&lt;a href=&quot;https://vuejs.org/&quot;&gt;https://vuejs.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vue.js是知名的前端&lt;a href=&quot;https://www.wikiwand.com/zh-tw/MVVM&quot; target=&quot;_blank&quot;&gt;MVVM框架&lt;/a&gt;。它提供了資料綁定、HTML自訂屬性、單一頁面的hash&lt;a href=&quot;https://router.vuejs.org/zh/&quot; target=&quot;_blank&quot;&gt;路由&lt;/a&gt;、翻譯功能&lt;a href=&quot;https://kazupon.github.io/vue-i18n/&quot; target=&quot;_blank&quot;&gt;i18n&lt;/a&gt;等等好用的功能。跟&lt;a href=&quot;https://angularjs.org&quot; target=&quot;_blank&quot;&gt;AngularJS&lt;/a&gt;相比，Vue.js可說是簡單易懂、架構清晰。另一方面，Vue.js又比幾乎無框架的&lt;a href=&quot;http://blog.pulipuli.info/2019/09/svelte-preliminary-study-of-svelte.html&quot; target=&quot;_blank&quot;&gt;Svelte&lt;/a&gt;容易理解。如果要開發單一頁面應用程式的話，強力推薦一定要使用Vue.js這種MVVM框架。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-6TatXZwt2NI/XaCpt4tsOTI/AAAAAAAEZbs/B0onh8gcolcpvrV4iMBgtVQJVXKlV2kLACK4BGAYYCw/s1600/2019-1011-050309.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-6TatXZwt2NI/XaCpt4tsOTI/AAAAAAAEZbs/B0onh8gcolcpvrV4iMBgtVQJVXKlV2kLACK4BGAYYCw/s450/2019-1011-050309.png&quot; title=&quot;2019-1011-050309.png&quot; alt=&quot;2019-1011-050309.png&quot; width=&quot;450&quot; height=&quot;295&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在AdonisJs聊天室應用中，就如上圖系統架構圖的紅框所示，Vue.js主要是載入到前端純HTML網頁裡面運作的功能。&lt;/p&gt;
&lt;p&gt;雖然我在「&lt;a href=&quot;http://blog.pulipuli.info/2019/09/autoitelectron-diy-tools-from-autoit-to.html&quot; target=&quot;_blank&quot;&gt;工具開發閒聊：從AutoIT到Electron&lt;/a&gt;」中提到我逐漸採用Vue.js的事情，不過似乎還沒有深入聊聊我使用至今對它的各種看法。底下我就挑幾個印象深刻的特點來跟大家聊聊吧。&lt;/p&gt;
&lt;h3&gt;簡單好用的MVVM資料綁定 / Data binding&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-gH6I6YelmLk/XaCpkGpbKnI/AAAAAAAEZa0/-2vXNEm1XKsCT37sOspKFolw3HxQlzI4wCK4BGAYYCw/s1600/2019-1011-025205.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-gH6I6YelmLk/XaCpkGpbKnI/AAAAAAAEZa0/-2vXNEm1XKsCT37sOspKFolw3HxQlzI4wCK4BGAYYCw/s450/2019-1011-025205.png&quot; title=&quot;2019-1011-025205.png&quot; alt=&quot;2019-1011-025205.png&quot; width=&quot;450&quot; height=&quot;446&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://vuejs.org/v2/guide/&quot; target=&quot;_blank&quot;&gt;Vue.js Introduction&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Vue.js最重要的特色就是它MVVM框架著重的資料綁定功能。在Vue.js中，資料是最核心的一塊。頁面如何呈現、邏輯如何判斷，全部都是以資料為主。當採用了Vue.js這種MVVM框架之後，我們就可以以資料為核心來開發程式。這種開發方法比傳統的循序流程操弄元素比起來還要簡單許多。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-QjyWMRIThpc/XaCpi5yiGvI/AAAAAAAEZag/d00fVJr6xV4HdJcGF8jOfl7owy4Ulo2nQCK4BGAYYCw/s1600/2019-1011-025557.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-QjyWMRIThpc/XaCpi5yiGvI/AAAAAAAEZag/d00fVJr6xV4HdJcGF8jOfl7owy4Ulo2nQCK4BGAYYCw/s450/2019-1011-025557.png&quot; title=&quot;2019-1011-025557.png&quot; alt=&quot;2019-1011-025557.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://vuejs.org/v2/guide/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Vue.js Introduction&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;在上圖的例子中，資料seen是整個程式的核心。我們只要調整seen，就能控制網頁元素中&amp;lt;span&amp;gt;Now you see me&amp;lt;/span&amp;gt;是否呈現。&lt;/p&gt;
&lt;p&gt;以資料為核心的做法，可以更進一步延伸到整合多個資料計算出的&lt;a href=&quot;https://vuejs.org/v2/guide/computed.html#Basic-Example&quot; target=&quot;_blank&quot;&gt;computed資料&lt;/a&gt;，以及監控資料是否改變的&lt;a href=&quot;https://vuejs.org/v2/guide/computed.html#Watchers&quot; target=&quot;_blank&quot;&gt;watch&lt;/a&gt;。更特別的是，watch還能監控物件資料中的屬性，例如監控&quot;status.username&quot; (請看我寫的&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/f7b3bcae54237b8fb32ae80629ab7dc26c0f5c45/webpack-app/client.js#L66&quot; target=&quot;_blank&quot;&gt;client.js&lt;/a&gt;)。這樣讓整個邏輯控制變得很靈活。&lt;/p&gt;
&lt;p&gt;雖然Vue.js的教學大多是從data跟&lt;a href=&quot;https://vuejs.org/v2/guide/events.html&quot; target=&quot;_blank&quot;&gt;methods&lt;/a&gt;開始，不過實際開發下來，我深深地覺得可以在watch中放入更多邏輯控制，而methods就把它當作簡單的setter就好。畢竟以資料為核心推動整個程式的運作，這才是符合MVVM框架的邏輯。&lt;/p&gt;
&lt;h4&gt;資料綁定跟傳統操弄元素的比較 / Compare traditional element to&amp;nbsp;data binding&lt;/h4&gt;
&lt;p&gt;說到這裡，讓我來批評一下傳統jQuery操控元素的做法。在用JavaScript或jQuery操控元素的時候，如果有資料變更，我們必須一一造訪所有顯示該資料的元素，一一指定它的顯示內容。反之，如果要取得特定&amp;lt;input type=&quot;text&quot; /&amp;gt;設定的值，傳統做法也是選擇該元素，取出它的value。&lt;/p&gt;
&lt;p&gt;這樣的做法在非同步的網站應用中，常常會遇到很多難以偵錯的問題。最基本的錯誤就是在開發過程中挪動了元素的位置，導致jQuery照順序找元素的時候找不到它。相較之下，Vue.js的資料跟樣板本身是脫鉤的，請看「&lt;a href=&quot;https://vuejs.org/v2/guide/syntax.html&quot; target=&quot;_blank&quot;&gt;Template Syntax&lt;/a&gt;」的做法。&lt;/p&gt;
&lt;p&gt;除了這個小問題，在非同步環境中，我們最怕的就是資料之間的不同步。有時候我們要取得元素上的資料，那個元素卻在另一段程式碼中非同步地請求伺服器資料來設定。結果兩段不同的程式碼的先後順序難以釐清，邏輯錯誤往往就發生在這種小細節上。這時候在Vue.js裡面的watch就是很好的做法，它會在資料改變的時候作出反應，我們不必煩惱不同程式碼之間先後的問題。&lt;/p&gt;
&lt;p&gt;在Vue.js之中，這一切都很簡單。我們可以在很多不同的程式碼中設定資料，也可以設定資料改變之後要怎麼反應。而這之間的誰先誰後、介面如何調整，全部都交給Vue.js負責即可。這樣子才是資料(model)和顯示(view)脫鉤的好做法。&lt;/p&gt;
&lt;h3&gt;可分離的元件架構 / Components&lt;/h3&gt;
&lt;p&gt;Vue.js另一個令我激賞的特點，那就是它靈活的&lt;a href=&quot;https://vuejs.org/v2/guide/components.html&quot; target=&quot;_blank&quot;&gt;元件架構 Components&lt;/a&gt;。在寫大型的應用時，將程式依照邏輯區分成不同檔案，避免單一檔案中塞入過多程式碼，這是很重要的習慣。以前我在寫Vue.js的時候不知道元件的好用，直到在開發&lt;a href=&quot;http://blog.pulipuli.info/2019/09/autoitelectron-diy-tools-from-autoit-to.html#postcataautoitelectron-diy-tools-from-autoit-to.html0_anchor14&quot; target=&quot;_blank&quot;&gt;Electron Sticky Notes&lt;/a&gt;時好好遵循Vue.js的寫法使用元件之後，我才感受到它的強大。&lt;/p&gt;
&lt;p&gt;雖然很多人對於元件的著眼點是在於可重複使用，不過我認為它最重要的加值，還是將大型的程式分割成許多容易維護的小型元件。每個元件裡面有自己的資料、邏輯，而各元件之間又能用&lt;a href=&quot;https://vuejs.org/v2/guide/components.html#Passing-Data-to-Child-Components-with-Props&quot; target=&quot;_blank&quot;&gt;資料綁定和props&lt;/a&gt;同步。將大型、厚重的程式分割之後，我們可以專注於開發小巧、完整的元件。&lt;/p&gt;
&lt;p&gt;Vue.js的&lt;a href=&quot;https://vuejs.org/v2/guide/single-file-components.html&quot; target=&quot;_blank&quot;&gt;單一檔案元件Single File Components&lt;/a&gt;也能夠將邏輯、樣板、樣式、語系分割成不同的檔案。以我在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/client/components/Login/Login.vue&quot; target=&quot;_blank&quot;&gt;Login.vue&lt;/a&gt;單一檔案元件為例子來說，它的程式碼如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;template&amp;nbsp;src=&quot;./Login.html&quot;&amp;gt;&amp;lt;/template&amp;gt;&lt;br&gt;&amp;lt;style&amp;nbsp;src=&quot;./Login.less&quot;&amp;nbsp;lang=&quot;less&quot;&amp;nbsp;scoped&amp;gt;&amp;lt;/style&amp;gt;&lt;br&gt;&amp;lt;i18n&amp;nbsp;src=&quot;./Login.json&quot;&amp;gt;&amp;lt;/i18n&amp;gt;&lt;br&gt;&amp;lt;script&amp;nbsp;src=&quot;./Login.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;它將單一元件分割成&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/client/components/Login/Login.html&quot; target=&quot;_blank&quot;&gt;樣板Login.html&lt;/a&gt;、&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/client/components/Login/Login.less&quot; target=&quot;_blank&quot;&gt;樣式Login.less&lt;/a&gt; (而且還是&lt;a href=&quot;http://lesscss.org/&quot; target=&quot;_blank&quot;&gt;less語法&lt;/a&gt;)、&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/client/components/Login/Login.json&quot; target=&quot;_blank&quot;&gt;語系Login.json&lt;/a&gt;、以及&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/client/components/Login/Login.js&quot; target=&quot;_blank&quot;&gt;邏輯Login.js&lt;/a&gt;。將程式碼分割之後，我們可以個別專注維護各自的檔案，也方便我們在多檔案之間交互參照。&lt;/p&gt;
&lt;p&gt;然而，這種做法會讓單一系統變成相當多的檔案，並不適合直接使用。後續我們還有賴編譯器Webpack把這些檔案打包、壓縮，才能成為真正適合給網頁引用的JavaScript程式碼。&lt;/p&gt;
&lt;h3&gt;適用於單一元件的語系、樣式、以及錯誤處理 / I18n, scoped style and error handling in a component&lt;/h3&gt;
&lt;p&gt;講到可分割的元件，那就不得不提分割元件後帶來的另外三個好處：多國語系翻譯i18n、區域性的樣式、以及錯誤處理。&lt;/p&gt;
&lt;h4&gt;多國語系i18n / Internationalization&lt;/h4&gt;
&lt;p&gt;大部分的網站開發框架都會將語系翻譯集中在某一處管理，包含AdonisJs的&lt;a href=&quot;https://adonisjs.com/docs/4.1/internationalization&quot; target=&quot;_blank&quot;&gt;Internationalization&lt;/a&gt;也是這樣處理。但是Vue.js的&lt;a href=&quot;https://kazupon.github.io/vue-i18n/&quot; target=&quot;_blank&quot;&gt;多國語系翻譯i18n&lt;/a&gt;支援單一元件，因此我們可以在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/client/components/Login/Login.vue&quot; target=&quot;_blank&quot;&gt;Login.vue&lt;/a&gt;元件裡面直接設定&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/client/components/Login/Login.json&quot; target=&quot;_blank&quot;&gt;Login.json&lt;/a&gt;。這讓我們在維護單一元件時，不必再跟全網站超多的翻譯檔打交道，只需要專心維護自己這個元件中的語系檔即可。&lt;/p&gt;
&lt;p&gt;當然，我們依然可以設定全域的語系檔，我把它放在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/i18n/i18n-global.conf.js&quot; target=&quot;_blank&quot;&gt;i18n-global.conf.js&lt;/a&gt;裡面，然後在最上層Vue.js載入i18n的時候設定進去。詳細做法請參考我寫的&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/plugins/i18n.js&quot; target=&quot;_blank&quot;&gt;i18n.js&lt;/a&gt;。&lt;/p&gt;
&lt;h4&gt;區域性樣式 / Scoped style&lt;/h4&gt;
&lt;p&gt;再來談談樣式。Vue.js支援less語法，我們可以用上下層包裹CSS選取器，以巢狀結構呈現CSS，提高CSS的可讀性和寫作效率。關於LESS跟CSS的比較，可以看「&lt;a href=&quot;https://www.oxxostudio.tw/articles/201601/css-less-01.html&quot; target=&quot;_blank&quot;&gt;用 LESS 寫 CSS ( 入門、Import、變數 )&lt;/a&gt;」這篇。但實務開發時，因為我們可以將元件拆分得很細，單一元件中樣板的元素可能不會這麼多，所以實際上好像也用不太到複雜的巢狀結構。&lt;/p&gt;
&lt;p&gt;比起支援less語法，Vue.js元件的區域性樣式更有實用價值。在前面宣告單一檔案元件Login.vue時，我在&amp;lt;style&amp;gt;標籤裡面加入了scoped屬性，這就表示這個樣式表只適用於這個元件中的樣板。&lt;/p&gt;
&lt;p&gt;我們可以看看官方例子「&lt;a href=&quot;https://vue-loader-v14.vuejs.org/zh-cn/features/scoped-css.html&quot; target=&quot;_blank&quot;&gt;有作用域的 CSS&lt;/a&gt;」中，區域性樣式的實際轉換結果：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;style&amp;gt;&lt;br&gt;.example&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;[data-v-f3f3eg9]&lt;/span&gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;color:&amp;nbsp;red;&lt;br&gt;}&lt;br&gt;&amp;lt;/style&amp;gt;&lt;br&gt;&lt;br&gt;&amp;lt;template&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;lt;div&amp;nbsp;class=&quot;example&quot;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;data-v-f3f3eg9&lt;/span&gt;&amp;gt;hi&amp;lt;/div&amp;gt;&lt;br&gt;&amp;lt;/template&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;紅色字所添加的屬性，就是Vue.js宣告這個樣式只適用於這個樣板的意思。區域性樣式使得我們更容易專注開發各自的元件，不用擔心元件和元件之間的樣式會彼此打架，更不用一直仰賴「!important」覆蓋別人的樣子。&lt;/p&gt;
&lt;p&gt;不過值得注意的是，有時候我們會在樣板裡面建立樣板之外的元素，這時候要搭配使用深度作用選取器，才能選到樣板之中額外建立的元素。許多文件都將樣板選取器寫成「 &amp;gt;&amp;gt;&amp;gt; 」，例如「.a &amp;gt;&amp;gt;&amp;gt; .b { /* ... */}」，不過我的情況是只有使用「&lt;span style=&quot;font-weight: bold; color: rgb(255, 0, 0);&quot;&gt;::v-deep&lt;/span&gt;」才能發生作用，例如「.extra.text ::v-deep a &amp;gt; img { /* ... */ }」。詳細請看&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/6dc741c1e7790031b5865c233e64510acbeed9bb/webpack-app/client/components/Chat/Chat.less#L12&quot; target=&quot;_blank&quot;&gt;Chat.less&lt;/a&gt;檔案的內容。&lt;/p&gt;
&lt;h4&gt;錯誤處理 / Error handle&lt;/h4&gt;
&lt;p&gt;Vue.js有多種錯誤處理的做法，其中跟元件比較密切的錯誤處理就是&lt;a href=&quot;https://vuejs.org/v2/api/&quot; target=&quot;_blank&quot;&gt;errorCaptured&lt;/a&gt;。errorCaptured主要是捕捉這個元件以及下層子元件所發生的錯誤，因此我們可以明確知道這個錯誤可能是發生在那些程式裡面。關於Vue.js的錯誤處理可以看「&lt;a href=&quot;https://medium.com/js-dojo/error-exception-handling-in-vue-js-application-6c26eeb6b3e4&quot; target=&quot;_blank&quot;&gt;Error/Exception handling in Vue.js application&lt;/a&gt;」這篇，我在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/6dc741c1e7790031b5865c233e64510acbeed9bb/webpack-app/client.js#L125&quot; target=&quot;_blank&quot;&gt;client.js&lt;/a&gt;裡面也用到errorCaptured。&lt;/p&gt;
&lt;p&gt;Vue.js還有用於全域的&lt;a href=&quot;https://vuejs.org/v2/api/#errorHandler&quot; target=&quot;_blank&quot;&gt;errorHandler&lt;/a&gt;功能，不過這個我就沒用到了。&lt;/p&gt;
&lt;h3&gt;強大的路由和動態元件 / Route and dynamic component&lt;/h3&gt;
&lt;p&gt;當我們將網頁的功能拆開成許多小元件之後，我們會需要些方法來決定何時要用什麼功能。如果要讓使用者可以透過網址來存取，那需要用到的是&lt;a href=&quot;https://router.vuejs.org/zh/guide/&quot; target=&quot;_blank&quot;&gt;Vue Router&lt;/a&gt;。如果是要全部由程式邏輯來控制所顯示的內容，那就是用&lt;a href=&quot;https://vuejs.org/v2/guide/components-dynamic-async.html&quot; target=&quot;_blank&quot;&gt;動態元件 Dynamic component&lt;/a&gt;。雖然這兩者很少被拿在一起講，但在我摸索之後，其實它們還挺像的。&lt;/p&gt;
&lt;h4&gt;Vue路由器 / Vue Router&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-NvDa3ZmNjgY/XaCpwWG8ZmI/AAAAAAAEZcQ/R6YHKM4lAUQt1HIdoGEhuDE1SIIDfzAugCK4BGAYYCw/s1600/2019-1011-041700.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-NvDa3ZmNjgY/XaCpwWG8ZmI/AAAAAAAEZcQ/R6YHKM4lAUQt1HIdoGEhuDE1SIIDfzAugCK4BGAYYCw/s450/2019-1011-041700.png&quot; title=&quot;2019-1011-041700.png&quot; alt=&quot;2019-1011-041700.png&quot; width=&quot;450&quot; height=&quot;275.526&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.tutorialspoint.com/vuejs/vuejs_routing.htm&quot; target=&quot;_blank&quot;&gt;TutorialsPoint: VueJS - Routing&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;在Vue Router中，預設是用hash作為網站路由。hash的值會決定現在要顯示什麼元件。Vue.js的樣板中可以用以下語法來建立設定路由路徑的連結：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;router-link&amp;nbsp;to&amp;nbsp;=&amp;nbsp;&quot;/route1&quot;&amp;gt;Router&amp;nbsp;Link&amp;nbsp;1&amp;lt;/router-link&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;它也可以用&lt;a href=&quot;https://router.vuejs.org/zh/guide/essentials/navigation.html&quot; target=&quot;_blank&quot;&gt;JavaScript程式碼&lt;/a&gt;來控制路由路徑：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;router.push({&amp;nbsp;path:&amp;nbsp;&#39;route1&#39;&amp;nbsp;})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;此外，Vue Router也可以&lt;a href=&quot;https://router.vuejs.org/zh/guide/essentials/dynamic-matching.html#响应路由参数的变化&quot; target=&quot;_blank&quot;&gt;透過路由路徑取得參數&lt;/a&gt;。這點在接收來自不同網頁的資料時非常實用。&lt;/p&gt;
&lt;h4&gt;動態元件 /&amp;nbsp;Dynamic component&lt;/h4&gt;
&lt;p&gt;相較於Vue Router的強大功能，&lt;a href=&quot;https://vuejs.org/v2/guide/components-dynamic-async.html&quot; target=&quot;_blank&quot;&gt;動態元件&lt;/a&gt;看起來就簡單許多。它在樣板中的呈現方式如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;keep-alive&amp;gt;
  &amp;lt;component&amp;nbsp;v-bind:is=&quot;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;currentTabComponent&lt;/span&gt;&quot;&amp;gt;&amp;lt;/component&amp;gt;
&amp;lt;/keep-alive&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;紅字&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;currentTabComponent&lt;/span&gt;這個資料決定了這個位置要呈現的元件，其他使用方式就跟一般元件一樣。&amp;lt;keep-alive&amp;gt;是用來保存不同元件的運作狀況。當元件被切換成其他元件時，前一個元件仍然保有它運作時的狀態。關於是否使用&amp;lt;keep-alive&amp;gt;的用法，可以看看「&lt;a href=&quot;https://cythilya.github.io/2017/10/22/vue-component-dynamic-components/&quot; target=&quot;_blank&quot;&gt;Vue.js: 動態元件 Dynamic Components&lt;/a&gt;」這篇。&lt;/p&gt;
&lt;p&gt;雖然動態元件看起來很簡單，但對於只是要切換現在要顯示那個元件的系統需求來說，這樣就已經足夠了。&lt;/p&gt;
&lt;h4&gt;延遲與非同步載入 / Lazy and async loading&lt;/h4&gt;
&lt;p&gt;Vue.js的元件架構能夠讓我們把複雜的網站拆開成多個小型元件。但當網站非常複雜、開發的元件數量一多，就算能用Webpack打包、壓縮成一個檔案，這樣的檔案依然是大到難以接收。更重要的是，在複雜的網站上，使用者不見得會用到所有的元件。這樣的話，將所有元件打包成一個檔案的做法，顯然不是好事。&lt;/p&gt;
&lt;p&gt;Vue Router跟動態元件兩者都有支援一項特別的功能：延遲和非同步載入。簡單來說，就是只有在會用到該元件的時候，Vue.js才會即時去取得該元件的程式碼、執行並編譯該元件的內容。在Vue Router裡面，這種做法稱之為&lt;a href=&quot;https://router.vuejs.org/guide/advanced/lazy-loading.html&quot; target=&quot;_blank&quot;&gt;Lazy Loading Routes&lt;/a&gt;。在動態元件裡面則是稱之為&lt;a href=&quot;https://vuejs.org/v2/guide/components-dynamic-async.html#Async-Components&quot; target=&quot;_blank&quot;&gt;Async Components&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;原本Vue.js的延遲與非同步載入只是做到了「比較慢執行程式碼」的效果，但搭配Webpack的分割檔案功能，我們就能將某些元件分割並打包成獨立檔案，讓使用者需要的時候才動態下載並載入它。&lt;/p&gt;
&lt;p&gt;我在客戶端&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/client/components.js&quot; target=&quot;_blank&quot;&gt;components.js&lt;/a&gt;裡面就是用動態元件的非同步載入功能，並且搭配Webpack將元件分割成&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/client-components/login.bundle.js&quot; target=&quot;_blank&quot;&gt;login.bundle.js&lt;/a&gt;和&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/client-components/chat.bundle.js&quot; target=&quot;_blank&quot;&gt;chat.bundle.js&lt;/a&gt;兩個檔案。寫法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;import&amp;nbsp;Loading&amp;nbsp;from&amp;nbsp;&#39;./../components/Loading/Loading.vue&#39;&lt;br&gt;import&amp;nbsp;ErrorHandler&amp;nbsp;from&amp;nbsp;&#39;./../components/ErrorHandler/ErrorHandler.vue&#39;&lt;br&gt;import&amp;nbsp;Auth&amp;nbsp;from&amp;nbsp;&#39;./components/Auth/Auth.vue&#39;&lt;br&gt;&lt;br&gt;let&amp;nbsp;components&amp;nbsp;=&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;Loading:&amp;nbsp;Loading,&lt;br&gt;&amp;nbsp;&amp;nbsp;&#39;error-handler&#39;:&amp;nbsp;ErrorHandler,&lt;br&gt;&amp;nbsp;&amp;nbsp;Auth:&amp;nbsp;Auth,&lt;br&gt;&amp;nbsp;&amp;nbsp;Login:&amp;nbsp;()&amp;nbsp;=&amp;gt;&amp;nbsp;import(/*&amp;nbsp;webpackChunkName:&amp;nbsp;&quot;client-components/Login&quot;&amp;nbsp;*/&amp;nbsp;&#39;./components/Login/Login.vue&#39;),&lt;br&gt;&amp;nbsp;&amp;nbsp;Chat:&amp;nbsp;()&amp;nbsp;=&amp;gt;&amp;nbsp;import(/*&amp;nbsp;webpackChunkName:&amp;nbsp;&quot;client-components/Chat&quot;&amp;nbsp;*/&amp;nbsp;&#39;./components/Chat/Chat.vue&#39;),&lt;br&gt;}&lt;br&gt;export&amp;nbsp;default&amp;nbsp;components&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Login和Chat這兩個元件只有在需要顯示的時候，Vue.js才會即時去下載對應的檔案、並且執行元件的內容，這樣就能確保使用者不必下載用不到的多餘元件檔案，降低客戶端的負擔。&lt;/p&gt;
&lt;h3&gt;小結 / Before next&lt;/h3&gt;
&lt;p&gt;好，Vue.js的特色講到這裡就差不多了。這邊寫一寫又發現Vue.js還有幾個實用的特色，它真的是一款深奧的MVVM框架。&lt;/p&gt;
&lt;p&gt;目前Vue最新版的Vue 3.0提出了Vue 3.0 Function-based API，我們可以看看「&lt;a href=&quot;https://kuro.tw/posts/2019/08/06/初探-Vue-3-0-Function-based-API/&quot; target=&quot;_blank&quot;&gt;初探 Vue 3.0 Function-based API&lt;/a&gt;」這篇，其中setup的寫法很像是我在&lt;a href=&quot;http://blog.pulipuli.info/2019/09/svelte-preliminary-study-of-svelte.html&quot; target=&quot;_blank&quot;&gt;Svelte&lt;/a&gt;看到的做法，也許這樣可以讓程式開發更為簡潔。不過大致上看了&lt;a href=&quot;https://vue-composition-api-rfc.netlify.com/#summary&quot; target=&quot;_blank&quot;&gt;Vue Composition API&lt;/a&gt;之後，我覺得這個做法似乎還在變動中。也許再等一段時間，等它穩定之後再來嘗試吧。&lt;/p&gt;
&lt;p&gt;現在寫著寫著居然也超過一萬六千字了，但該講的事情還有三分之一呢。&lt;/p&gt;
&lt;p&gt;我在前端用到的工具，除了Vue.js之外，還有畫面呈現的&lt;a href=&quot;https://semantic-ui.com&quot; target=&quot;_blank&quot;&gt;Semantic UI&lt;/a&gt;、處理日期的&lt;a href=&quot;https://github.com/iamkun/dayjs&quot; target=&quot;_blank&quot;&gt;DAY.JS&lt;/a&gt;，以及從前端到後端傳輸資料的&lt;a href=&quot;https://github.com/axios/axios&quot; target=&quot;_blank&quot;&gt;axios&lt;/a&gt;。其中值得一提的就是這個axios。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;前後端資料傳輸：axios / Data request: axios&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-n2OFKTt4Rj8/XaCpwWcwjrI/AAAAAAAEZcE/X1-wvMYn5WcW6NJASXIvujn_JP5FhXsqwCK4BGAYYCw/s1600/fetch_data_with_axios.jpg&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-n2OFKTt4Rj8/XaCpwWcwjrI/AAAAAAAEZcE/X1-wvMYn5WcW6NJASXIvujn_JP5FhXsqwCK4BGAYYCw/s450/fetch_data_with_axios.jpg&quot; title=&quot;fetch_data_with_axios.jpg&quot; alt=&quot;fetch_data_with_axios.jpg&quot; width=&quot;450&quot; height=&quot;250&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://dustinhsiao21.com/2018/01/09/use-multi-request-by-axios-all/&quot; target=&quot;_blank&quot;&gt;DUSTIN&#39;S MURMUR&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;axios 的GitHub保存庫：&lt;a href=&quot;https://github.com/axios/axios&quot;&gt;https://github.com/axios/axios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;axios是一套發出HTTP客戶端請求的函式庫。它的工作專注於跟伺服器請求資料、取得資料。axios採用了&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot; target=&quot;_blank&quot;&gt;Promise&lt;/a&gt;架構，能夠支援&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Statements/async_function&quot; target=&quot;_blank&quot;&gt;ES2017的async/await的寫法&lt;/a&gt;，這讓我們開發AJAX應用時不必再跟層層包覆的callback纏鬥，程式寫起來精簡許多。而且axios把許多細節都優雅地包裝起來，開發者可以用最直覺的方式使用它。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-VvEUUZmgwBo/XaCpwXU61TI/AAAAAAAEZb8/AqhZImudAxwXYHDvx5rIfO6sh8xHQvQJwCK4BGAYYCw/s1600/2019-1011-050251.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-VvEUUZmgwBo/XaCpwXU61TI/AAAAAAAEZb8/AqhZImudAxwXYHDvx5rIfO6sh8xHQvQJwCK4BGAYYCw/s450/2019-1011-050251.png&quot; title=&quot;2019-1011-050251.png&quot; alt=&quot;2019-1011-050251.png&quot; width=&quot;450&quot; height=&quot;295&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在AdonisJs聊天室中，axios是由前端的Vue.js使用，負責跟後端AdonisJs框架架設的Client API互通資料。我為了AdonisJs聊天室CORS需求，又特別將axios封裝成&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack-app/helpers/AxiosHelper.js&quot; target=&quot;_blank&quot;&gt;AxiosHelper.js&lt;/a&gt;獨立檔案，進一步統一get()與post()在傳遞資料和錯誤處理的方式，並且加上了上傳檔案的方法。&lt;/p&gt;
&lt;p&gt;底下我們就來聊聊axios的幾個特色吧。&lt;/p&gt;
&lt;h3&gt;HTTP客戶端的選擇 / Why select axios?&lt;/h3&gt;
&lt;p&gt;要在Vue.js中跟伺服器請求資料，要選擇什麼工具比較合適呢？這似乎是許多開發者都有的共同問題。&lt;/p&gt;
&lt;p&gt;以前我主要使用&lt;a href=&quot;https://api.jquery.com/jquery.ajax/&quot; target=&quot;_blank&quot;&gt;jQuery的$.ajax()&lt;/a&gt;，它將複雜的XMLHTTPRequest封裝成易用的工具。但它不是採用Promise框架，必須要用大量的回呼函數處理每一個回傳的資料，這種開發方式已經過時。&lt;/p&gt;
&lt;p&gt;說到Vue.js，就會想到Vue.js生態系中的&lt;a href=&quot;https://github.com/pagekit/vue-resource&quot; target=&quot;_blank&quot;&gt;vue-resource&lt;/a&gt;。但因為它不能用於伺服器的Node.js，後來Vue.js比較推薦的是axios。在「&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10194612&quot; target=&quot;_blank&quot;&gt;Day19 純、手工系列 JS(Vue Axios篇)&lt;/a&gt;」跟「&lt;a href=&quot;https://hashnode.com/post/vue-resource-vs-axios-cjcpv06gk000wtgwufl6f1ucv&quot; target=&quot;_blank&quot;&gt;Vue-resource vs Axios?&lt;/a&gt;」這篇都有提到這點。&lt;/p&gt;
&lt;p&gt;相較於axios，很多人主張應該使用原生功能fetch，例如「&lt;a href=&quot;https://blog.logrocket.com/axios-or-fetch-api/&quot; target=&quot;_blank&quot;&gt;Axios or fetch(): Which should you use?&lt;/a&gt;」這篇。但就可讀性和封裝程度來看，axios很明顯是容易使用的得多。&lt;/p&gt;
&lt;p&gt;舉例來說，如果我們要跟「/users/list」請求使用者列表資料，axios只要這樣寫：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;let&amp;nbsp;result&amp;nbsp;=&amp;nbsp;await&amp;nbsp;axios.get(&#39;/users/list&#39;)&lt;br&gt;let&amp;nbsp;users&amp;nbsp;=&amp;nbsp;result.data&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;axios預設會將回傳的結果轉換成JSON，這使得開發者省下資料轉換的手續，整個程式碼看起來就優雅許多。如果不仔細看，你可能還以為你在跟同一個頁面裡面的某個物件取得資料，忘記它其實是一個跟遠端伺服器非同步取得資料的AJAX做法呢。&lt;/p&gt;
&lt;h3&gt;簡潔的async與await語法 / Easier and readable asynchronous: async/await&lt;/h3&gt;
&lt;p&gt;從前面的AdonisJs框架到axios，我一再提到了ES2017的async/await寫法。這個寫法大幅度簡化了非同步架構下程式的複雜度。之前JavaScript提出許多改進，像是&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot; target=&quot;_blank&quot;&gt;Promise&lt;/a&gt;或是&lt;a href=&quot;http://programmermagazine.github.io/mag/pmag201505/focus3.html&quot; target=&quot;_blank&quot;&gt;yield&lt;/a&gt;，我在看的時候都覺得只是程式的另一種寫法。但直到ES 2017的async/await，我才真正有種JavaScript新時代來臨的感動。&lt;/p&gt;
&lt;p&gt;舉例來說，我們要在Vue掛載的時候，從依序取得 /user/list 跟 /message/list 的資料的話，做法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;VueConfig.mounted&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;async&lt;/span&gt;&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;let&amp;nbsp;result&lt;br&gt;&amp;nbsp;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;await&lt;/span&gt;&amp;nbsp;axios.get(&#39;/user/list&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;this.users&amp;nbsp;=&amp;nbsp;result.data&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;await&lt;/span&gt;&amp;nbsp;axios.get(&#39;/message/list&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;this.messages&amp;nbsp;=&amp;nbsp;result.data&lt;br&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這樣子程式就會先跟伺服器取得 /user/list 的資料，再來取得 /message/list 的資料，兩者循序進行。值得注意的是，&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;await&lt;/span&gt;關鍵字必須包在&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;async&lt;/span&gt;宣告的函數裡面使用，我們可以直接在Vue.js的函數前加上&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;async&lt;/span&gt;關鍵字即可，不會影響Vue.js的其他功能運作。此外，值得注意的是，如果忘記加上await，程式並不會出錯。不過這是axios會回傳Promise物件，它的表現就不是如上面的方式運作了。&lt;/p&gt;
&lt;p&gt;如果想要簡單使用await的話，我們可以用匿名函數搭配async來使用，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;;(async&amp;nbsp;()&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;let&amp;nbsp;result&lt;br&gt;&amp;nbsp;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;await&amp;nbsp;axios.get(&#39;/user/list&#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;await&amp;nbsp;axios.get(&#39;/message/list&#39;)&lt;br&gt;})()&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;雖然現在Chrome跟Firefox已經預設支援await/async的寫法，但是早期的瀏覽器並沒有不支援。各個瀏覽器的相容性請看&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Operators/await&quot; target=&quot;_blank&quot;&gt;MDN web docs的await&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;不過這個事情好解決，我們可以請Webpack打包的時候，一併把&lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-runtime&quot; target=&quot;_blank&quot;&gt;@babel/plugin-transform-runtime套件&lt;/a&gt;打包進來，這樣子就能夠讓早期的瀏覽器兼容async和await的用法了。詳情請看我在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/bb834e898da1d7dc78c34528cdfa68aec6363c68/webpack.config.js#L152&quot; target=&quot;_blank&quot;&gt;webpack.config.js&lt;/a&gt;裡面的寫法。&lt;/p&gt;
&lt;h3&gt;靈活的擴充性：支援CORS跟檔案上傳 / CORS and file upload support&lt;/h3&gt;
&lt;p&gt;axios的簡單易用是它的主要特色，但它同時也具備因應不同使用情境的靈活性。網路上許多人看重的是它的可取消功能 (在options裡面設定&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/6dc741c1e7790031b5865c233e64510acbeed9bb/webpack.config.js#L130&quot; target=&quot;_blank&quot;&gt;timeout&lt;/a&gt;)，不過我在AdonisJs聊天室用到比較多的地方，是CORS跟檔案上傳這兩個功能。&lt;/p&gt;
&lt;p&gt;為了在傳送HTTP請求時配合身份認證，我們必須為axios的請求加上cookie等憑證資訊。最簡單的做法是直接在一開始就宣告設定：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;import&amp;nbsp;axios&amp;nbsp;from&amp;nbsp;&#39;axios&#39;&lt;br&gt;axios.defaults.withCredentials&amp;nbsp;=&amp;nbsp;true&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這個在前面講AdonisJs框架的時候也有提到過。&lt;/p&gt;
&lt;p&gt;axios另一個好用的地方在於能夠使用檔案上傳。寫法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;let&amp;nbsp;imagefile&amp;nbsp;=&amp;nbsp;document.querySelector(&#39;#file&#39;).files[0]&lt;br&gt;&lt;br&gt;let&amp;nbsp;formData&amp;nbsp;=&amp;nbsp;new&amp;nbsp;FormData()&lt;br&gt;formData.append(&quot;image&quot;,&amp;nbsp;imagefile)&lt;br&gt;let&amp;nbsp;result&amp;nbsp;=&amp;nbsp;await&amp;nbsp;axios.post(&#39;/upload_file&#39;,&amp;nbsp;formData,&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;headers:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#39;Content-Type&#39;:&amp;nbsp;&#39;multipart/form-data&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;})&lt;br&gt;console.log(result.data)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這樣子就能上傳檔案，配合後端AdonisJs框架的Client API運作。&lt;/p&gt;
&lt;p&gt;在AdonisJs聊天室的程式碼中，前端的部分我寫在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/f7b3bcae54237b8fb32ae80629ab7dc26c0f5c45/webpack-app/helpers/AxiosHelper.js#L74&quot; target=&quot;_blank&quot;&gt;AxiosHelper.js&lt;/a&gt;裡面，後端的部分則是寫在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/6dc741c1e7790031b5865c233e64510acbeed9bb/app/Controllers/Http/Client/MessageController.js#L60&quot; target=&quot;_blank&quot;&gt;MessageController.js&lt;/a&gt;裡面。&lt;/p&gt;
&lt;p&gt;令我訝異是，即使是在CORS跨網域的情境下，我們依然能夠使用這種方式上傳檔案，並且取得伺服器回覆的資料。有這個方法之後，我在很久以前寫的「&lt;a href=&quot;http://blog.pulipuli.info/2011/05/jsonppost.html&quot; target=&quot;_blank&quot;&gt;JSONP跨網域傳送檔案：以POST方法實作&lt;/a&gt;」就完全不需要使用了呢。&lt;/p&gt;
&lt;h3&gt;小結 / Before next&lt;/h3&gt;
&lt;p&gt;axios只是個負責前端到後端傳輸資料的小工具。但它簡潔的寫法、優雅的包裝，這些特色都大大簡化了非同步資料請求的複雜度。&lt;/p&gt;
&lt;p&gt;在使用async/await，也許人們很快就會忘了被callback統治下的恐怖，也許大家也不會仔細探究它背後的Promise跟yeild是如何運作，但開發者能夠省下這些鑽研細節的時間，投注更多心力在系統的主要邏輯上，這就是一件好事。&lt;/p&gt;
&lt;p&gt;不過，要讓async/await順利運作，抑或是要打包與壓縮前面Vue.js中的龐大元件，一個好的編譯器是不可或缺的存在。接下來就讓我們來聊聊Webpack吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;前端編譯：Webpack / Front end compiler: Webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-AHC4acO1shI/XaCq35SCOuI/AAAAAAAEZdQ/uGshATgE2D4Jowvh_Kh0yQf4TBbL5MUJQCK4BGAYYCw/s1600/webpack.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-AHC4acO1shI/XaCq35SCOuI/AAAAAAAEZdQ/uGshATgE2D4Jowvh_Kh0yQf4TBbL5MUJQCK4BGAYYCw/s450/webpack.png&quot; title=&quot;webpack.png&quot; alt=&quot;webpack.png&quot; width=&quot;402&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;


&lt;p&gt;(圖片來源：&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Webpack.png&quot; target=&quot;_blank&quot;&gt;維基百科&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Webpack是將前端使用的程式碼打包、壓縮、甚至是分割的編譯工具。它不僅可以將大量零散的JavaScript程式碼整合在一起，還能直接編譯less、載入CSS。更重要的是，它作為編譯器的工作中，能夠將上述Vue.js等框架的許多功能發揮到極致。我從「&lt;a href=&quot;http://blog.pulipuli.info/2019/04/blogger-how-do-i-maintain-bloggers.html&quot; target=&quot;_blank&quot;&gt;閒聊Blogger範本程式碼的管理&lt;/a&gt;」這篇就有聊到我開始使用Webpack，但是直到最近在「&lt;a href=&quot;http://blog.pulipuli.info/2019/09/autoitelectron-diy-tools-from-autoit-to.html&quot; target=&quot;_blank&quot;&gt;工具開發閒聊：從AutoIT到Electron&lt;/a&gt;」中，我才深刻感受到Webpack不可或缺的價值。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-E_8hahcGXag/XaCpwUMJ1dI/AAAAAAAEZcY/4hwVYZVOL3w7cpfZ__1O1_-nZL14K_z-QCK4BGAYYCw/s1600/2019-1011-050418.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-E_8hahcGXag/XaCpwUMJ1dI/AAAAAAAEZcY/4hwVYZVOL3w7cpfZ__1O1_-nZL14K_z-QCK4BGAYYCw/s450/2019-1011-050418.png&quot; title=&quot;2019-1011-050418.png&quot; alt=&quot;2019-1011-050418.png&quot; width=&quot;450&quot; height=&quot;295&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在AdonisJs聊天室中，Webpack負責將前端會使用的程式原始碼打包、編譯成數個發佈檔。程式原始碼放在 &lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/tree/master/webpack-app&quot; target=&quot;_blank&quot;&gt;/webpack-app&lt;/a&gt; 資料夾裡面，編譯後的發佈檔放在 &lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/tree/master/public/spa&quot; target=&quot;_blank&quot;&gt;/public/spa&lt;/a&gt; 裡面。Wepback最主要的設定檔則是寫在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack.config.js&quot; target=&quot;_blank&quot;&gt;webpack.config.js &lt;/a&gt;之中。&lt;/p&gt;
&lt;p&gt;雖然我以前有講過&lt;a href=&quot;http://blog.pulipuli.info/2019/04/blogger-how-do-i-maintain-bloggers.html#postcatablogger-how-do-i-maintain-bloggers.html0_anchor14&quot; target=&quot;_blank&quot;&gt;為什麼要用Webpack編譯程式碼的理由&lt;/a&gt;了，前面在Vue.js和axios提到的許多特色也都跟Wepback有所重疊，不過這邊還是挑出幾個我最近覺得比較有意思的特色出來聊聊吧。&lt;/p&gt;
&lt;h3&gt;合併與壓縮 / Bundle and compress&lt;/h3&gt;
&lt;p&gt;Webpack最基本的就是大量檔案合併在一起的編譯功能。前面有提到過Vue.js能夠將複雜系統分割成大量小型元件的功能，這特別需要搭配Webpack把眾多小型元件合併成少量的發佈檔，以免使用者使用系統還要下載大量檔案。&lt;/p&gt;
&lt;p&gt;接著，在生產模式「production」底下，Webpack也會對JavaScript和CSS進行壓縮。在AdonisJs聊天室中Webpack所打包的發佈檔&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/client.js&quot; target=&quot;_blank&quot;&gt;client.js&lt;/a&gt;，在開發模式「development」下的檔案大小是902KB，但是在生產模式中則可以壓縮到356KB。壓縮效率驚人。&lt;/p&gt;
&lt;h3&gt;相容性轉換 / Convert for browser compatibility&lt;/h3&gt;
&lt;p&gt;我在&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack.config.js&quot; target=&quot;_blank&quot;&gt;webpack.config.js&lt;/a&gt;的設定檔裡面也為生產模式加入了Babel轉換。Babel能將較新的JavaScript程式語言寫法，例如&lt;a href=&quot;https://pjchender.blogspot.com/2017/01/es6-arrow-function.html&quot; target=&quot;_blank&quot;&gt;箭頭函數() =&amp;gt; {}&lt;/a&gt;以及ES2017的async / await，轉換為舊型瀏覽器也能執行的程式碼。&lt;/p&gt;
&lt;p&gt;值得一提的是，為了要讓瀏覽器兼容async/await，Webpack的設定檔有很多不同的方式，請看「&lt;a href=&quot;https://juejin.im/post/5d076744f265da1b8b2b5ef4&quot; target=&quot;_blank&quot;&gt;一文读懂babel-loader、babel-polyfill、babel-transform-runtime的区别和联系&lt;/a&gt;」這篇。最後我選擇的是在載入babel-loader的時候加上plugins &quot;&lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-runtime&quot; target=&quot;_blank&quot;&gt;@bable/plugin-transform-runtime&lt;/a&gt;&quot;，這樣執行時就不會遭遇「Uncaught ReferenceError: regeneratorRuntime is not defined」錯誤，而且也比直接「import &quot;@babel/polyfill&quot;」所產生的檔案還要小。&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/bb834e898da1d7dc78c34528cdfa68aec6363c68/webpack.config.js#L152&quot; target=&quot;_blank&quot;&gt;在webpack.config.js的寫法請看這裡&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;自動分割程式碼與手動載入 / Code&amp;nbsp;splitting&lt;span style=&quot;color: inherit;&quot;&gt;&amp;nbsp;&lt;/span&gt;automatically and loading chunks manually&lt;/h3&gt;
&lt;p&gt;再來是講講Webpack的分割功能。我將它的分割分成自動分析的分割，以及手動分割的設定兩個部分。這邊先來聊聊基本的自動分割的部分。&lt;/p&gt;
&lt;p&gt;Webpack能使用&lt;a href=&quot;https://webpack.js.org/plugins/split-chunks-plugin/&quot; target=&quot;_blank&quot;&gt;SplitChunksPlugin&lt;/a&gt;將打包的程式碼分割成數個檔案。這主要是將不同程式碼中會用到的相同函式庫、元件或程式碼抽取出來成為獨立檔案，避免重複程式碼增肥了發佈檔的檔案大小。這部分的介紹可以看「&lt;a href=&quot;https://medium.com/frochu/webpack-commons-chunk-plugin-f2e4bd853c26&quot; target=&quot;_blank&quot;&gt;webpack 二三事：如何讓 CommonsChunkPlugin() 發揮最大效益&lt;/a&gt;」這篇，但CommonsChunkPlugin已經是過時的寫法，現在要用SplitChunksPlugin。&lt;/p&gt;
&lt;p&gt;Webpack能夠用很多方式分析共用的程式碼，並把它分離成為獨立的chunk檔案。我參考了「&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-javascript/code-splitting&quot; target=&quot;_blank&quot;&gt;Reduce JavaScript Payloads with Code Splitting&lt;/a&gt;」這篇，將node_modules裡面的檔案分離成&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/vendors.js&quot; target=&quot;_blank&quot;&gt;vendors.js&lt;/a&gt;，不同程式會用到的共同程式碼分離成&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/commons.js&quot; target=&quot;_blank&quot;&gt;commons.js&lt;/a&gt;。這部分的程式碼寫在webpack.config.js的&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/e260ee25cc6810e7508879c409e37723ffc7ffae/webpack.config.js#L119&quot; target=&quot;_blank&quot;&gt;splitChunks&lt;/a&gt;裡面，程式碼如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;webpackConfig.optimization&amp;nbsp;=&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;splitChunks:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cacheGroups:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Split&amp;nbsp;vendor&amp;nbsp;code&amp;nbsp;to&amp;nbsp;its&amp;nbsp;own&amp;nbsp;chunk(s)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vendors:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;test:&amp;nbsp;/[\\/]node_modules[\\/]/,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name:&amp;nbsp;&#39;vendors&#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;chunks:&amp;nbsp;&quot;all&quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Split&amp;nbsp;code&amp;nbsp;common&amp;nbsp;to&amp;nbsp;all&amp;nbsp;chunks&amp;nbsp;to&amp;nbsp;its&amp;nbsp;own&amp;nbsp;chunk&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;commons:&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name:&amp;nbsp;&quot;commons&quot;,&amp;nbsp;//&amp;nbsp;The&amp;nbsp;name&amp;nbsp;of&amp;nbsp;the&amp;nbsp;chunk&amp;nbsp;containing&amp;nbsp;all&amp;nbsp;common&amp;nbsp;code&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;chunks:&amp;nbsp;&quot;initial&quot;,&amp;nbsp;//&amp;nbsp;TODO:&amp;nbsp;Document&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;minChunks:&amp;nbsp;2&amp;nbsp;//&amp;nbsp;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;number&amp;nbsp;of&amp;nbsp;modules&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;},&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然而，這樣的做法也造成了另一個問題。原本我期望透過Webpack打包成一個檔案，只需要載入一個&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/client.js&quot; target=&quot;_blank&quot;&gt;client.js&lt;/a&gt;就好了。現在卻是用程式碼分割成多個檔案：&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/vendors.js&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;vendors.js&lt;/a&gt;、&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/commons.js&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;commons.js&lt;/a&gt;以及&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/client.js&quot; target=&quot;_blank&quot;&gt;client.js&lt;/a&gt;。有沒有方法可以一口氣載入這三個檔案呢？為此，我另外寫了&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/client-loader.js&quot; target=&quot;_blank&quot;&gt;client-loader.js&lt;/a&gt;來依序載入這三個檔案，讓客戶端依然只需引用單一檔案，抱持使用上的簡潔。&lt;/p&gt;
&lt;p&gt;但老實說這不是很漂亮的做法，我本來以為Webpack應該要有這方面相對應的做法，不過我找了老半天都找不到相關資訊。大家大多都在討論怎麼分割程式碼比較好，卻很少文章在討論怎麼讀取它們比較好，例如「&lt;a href=&quot;https://medium.com/hackernoon/the-100-correct-way-to-split-your-chunks-with-webpack-f8a9df5b7758&quot; target=&quot;_blank&quot;&gt;The 100% correct way to split your chunks with Webpack&lt;/a&gt;」這篇。&lt;/p&gt;
&lt;h3&gt;手動分割程式碼與自動動態載入 / Code splitting manually and dynamic loading chunks automatically&lt;/h3&gt;
&lt;p&gt;除了自動分析程式碼並將程式碼進行之外，Webpack也能夠讓讀取程式中手動設定的分割檔案，並支援動態載入。舉例來說，因為semantic-ui太過龐大，我希望它能夠分割成獨立檔案，然後自動動態載入該檔案的話，寫法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;let&amp;nbsp;semantic&amp;nbsp;=&amp;nbsp;()&amp;nbsp;=&amp;gt;&amp;nbsp;import(/*&amp;nbsp;webpackChunkName:&amp;nbsp;&quot;vendors/semantic-ui&quot;&amp;nbsp;*/&amp;nbsp;&#39;./vendors/semantic-ui/semantic-ui.js&#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這時候Wepback會自動讀取webpackChunkName的設定，把semantic-ui.js這個檔案及其引用的所有程式都獨立成vendors/semantic-ui.js。並且在程式執行到該段落時，動態去載入該檔案。&lt;/p&gt;
&lt;p&gt;在CORS的情境中，Webpack還必須特別指定發佈路徑，這樣自動載入才能找到後端伺服器上的正確檔案。做法是在webpack.config.js的output裡面設定publicPath，&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/e260ee25cc6810e7508879c409e37723ffc7ffae/webpack.config.js#L35&quot; target=&quot;_blank&quot;&gt;寫法請看這裡&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Wepback的動態載入能夠手動分割程式碼並且在需要的時候載入該檔案，這樣的做法能不能應用到前面自動分析共用程式碼的寫法呢？我看網路上的做法大多都是將原本「import Vue from &#39;vue&#39;」的靜態載入寫法改為前面的「import(&#39;vue&#39;)」動態載入寫法，再搭配Webpack的魔術註解(magic comments)設定分割檔案的名稱，例如「&lt;a href=&quot;https://wanago.io/2018/08/20/webpack-4-course-part-eight-dynamic-imports-with-prefetch-and-preload/&quot; target=&quot;_blank&quot;&gt;Webpack 4 course: what are dynamic imports?&lt;/a&gt;」這篇的教學。但是我覺得大量改寫原本import的寫法並不是好事，因為它並非基本JavaScript語法中的常識。&lt;/p&gt;
&lt;p&gt;總之，雖然手動分割與動態載入的寫法用在Vue.js的元件分割上非常好用，但Webpack自動分析與分割的功能，目前好像還是得要自己寫個&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/public/spa/client-loader.js&quot; target=&quot;_blank&quot;&gt;client-loader.js&lt;/a&gt;載入器才行。不知道有沒有更好的解決方法呢？&lt;/p&gt;
&lt;h3&gt;對於Vue.js和axios的支援 / Expend abilities of Vue.js and axios&lt;/h3&gt;
&lt;p&gt;Vue.js實際上可以不用編譯，直接就能在網頁上執行，例如這個&lt;a href=&quot;https://vuejs.org/v2/examples/&quot; target=&quot;_blank&quot;&gt;Markdown Editor Example&lt;/a&gt;範例。不過如果加上Webpack編譯的支援，Vue.js跟axios就能做到一些額外的功能：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Vue.js中的大量元件檔案可以用Webpack合併、壓縮成單一檔案，也能夠用Webpack手動分割與動態載入，讓元件只有在需要用到的時候才讀取與執行。&lt;/li&gt;
  &lt;li&gt;Vue.js的單一檔案元件不僅可以用src將樣板、樣式分離成獨立檔案，還能夠支援語系&lt;a href=&quot;https://kazupon.github.io/vue-i18n/guide/sfc.html#webpack&quot; target=&quot;_blank&quot;&gt;i18n&lt;/a&gt;與&lt;a href=&quot;https://vue-loader.vuejs.org/guide/pre-processors.html#less&quot; target=&quot;_blank&quot;&gt;less樣式語法&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;Wepback加上相容性轉換後，就能支援ES2017的async/await語法。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我一直有想過要試試&lt;a href=&quot;https://vue-loader-v14.vuejs.org/zh-cn/features/hot-reload.html&quot; target=&quot;_blank&quot;&gt;熱重載 Hot Reload&lt;/a&gt;的功能，不過不知道是因為動態載入呢，還是因為CORS甚麼的因素，我一直沒能成功啟用熱重載。未來有機會再來試試看好了。&lt;/p&gt;
&lt;h3&gt;設定檔與版本差異問題 / Configuration and version difference of Webpack&lt;/h3&gt;
&lt;p&gt;Webpack在合併、壓縮、轉換、分割的做法上非常靈活，但只要系統專案的架構穩定之後，Webpack就是一個放著背後跑、不用管它的小精靈。因此，我們很容易可以從其他人類似的專案架構上，找到值得學習的Wepback設定檔寫法。我這份&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/master/webpack.config.js&quot; target=&quot;_blank&quot;&gt;webpack.config.js&lt;/a&gt;在不同專案之間也是一直在改良、精進，這種踏實的成長感令人覺得充實。&lt;/p&gt;
&lt;p&gt;Webpack設定檔是在Node.js環境下運作，因此它又能配合&lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot; target=&quot;_blank&quot;&gt;dotenv套件&lt;/a&gt;讀取.env設定的內容。這就可以讓我們在後端AdonisJs框架與前端的Vue.js與Webpack中使用共通的設定檔。在AdonisJs聊天室中，我在Webpack設定檔裡面讀取AdonisJs聊天室伺服器的網址，這樣在CORS動態載入的時候，Webpack就能正確載入到後端伺服器上的檔案。寫法請參考&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/69dc5f0ccc21cc209c78cf2fda9b9cefd0abeee3/webpack.config.js#L5&quot; target=&quot;_blank&quot;&gt;webpack.config.js&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;值得注意的是，在學習別人Webpack設定檔寫法的時候，&lt;span style=&quot;text-decoration-line: underline; font-weight: bold; color: rgb(255, 0, 0);&quot;&gt;請務必注意Webpack版本差異&lt;/span&gt;。不同版本之間，設定檔的寫法有不小的差距。目前我使用的是&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/e260ee25cc6810e7508879c409e37723ffc7ffae/package.json#L93&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Webpack 4&lt;/a&gt;。該系統使用的Webpack版本可以從&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat/blob/69dc5f0ccc21cc209c78cf2fda9b9cefd0abeee3/package.json#L93&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;package.json&lt;/a&gt;裡面查詢，請務必先確認Webpack版本之後再來研究設定喔。&lt;/p&gt;
&lt;h3&gt;小結 / Before ending&lt;/h3&gt;
&lt;p&gt;Webpack是支撐Vue.js跟axios等各種前端技術的重要角色。如果缺少Webpack，Vue.js跟axios可能就沒辦法這麼好用了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / Wrap up&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-lcq6BZd2sOI/XaCpwd6Uv4I/AAAAAAAEZcU/G8db2Qxg-_0UMhHgh8AEQ4wxnVJDj26zwCK4BGAYYCw/s1600/adonis.jpg&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-lcq6BZd2sOI/XaCpwd6Uv4I/AAAAAAAEZcU/G8db2Qxg-_0UMhHgh8AEQ4wxnVJDj26zwCK4BGAYYCw/s450/adonis.jpg&quot; title=&quot;adonis.jpg&quot; alt=&quot;adonis.jpg&quot; width=&quot;321&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.ancient.eu/image/4557/adonis/&quot; target=&quot;_blank&quot;&gt;Ancient History Encyclopedia - Adonis&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;好久以前我期望用JavaScript開發前後端網頁應用程式的想法，終於在這次的&lt;a href=&quot;https://github.com/pulipulichen/20191004-adonisjs-chat&quot; target=&quot;_blank&quot;&gt;AdonisJs聊天室&lt;/a&gt;中實現了。這個網頁應用中所使用的後端AdonisJs框架、前端Vue.js和編譯器Webpack等技術的組合，使得網頁應用開發變得十分優雅。&lt;/p&gt;
&lt;p&gt;以前在改寫程式時，總是會覺得像是在做黑手的工作，老是在一團混亂的程式碼中，把程式搞得更混亂。現在使用AdonisJs框架之後，總算讓我覺得寫程式是一種優雅的創作，不用為了太多小細節煩心。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.wikiwand.com/zh/%E9%98%BF%E5%A4%9A%E5%B0%BC%E6%96%AF&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;Adonis&lt;/a&gt;這個名字來自於希臘神話中的非常英俊的神，它也可以用來&lt;a href=&quot;https://dictionary.cambridge.org/dictionary/english-chinese-traditional/adonis&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;代稱非常有魅力的年輕男子&lt;/a&gt;。接下來我就是以AdonisJs聊天室為基礎，繼續開發下一個系統。希望未來做出來的系統也能跟Adonis一樣，充滿魅力。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次對AdonisJs聊天室及其使用技術的閒聊就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;你有用過Node.js開發網頁應用程式嗎？你選擇的是什麼框架呢？&lt;/li&gt;
  &lt;li&gt;你有用過JavaScript開發前端嗎？你選擇的是什麼框架呢？&lt;/li&gt;
  &lt;li&gt;你對於這篇所提到的AdonisJs、Vue.js、axios、Webpack有什麼想法呢？還是你覺得有更好的工具可以使用呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/4949148758956723163/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/10/nodejscorsadonisjs-practice-of-build.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/4949148758956723163'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/4949148758956723163'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/10/nodejscorsadonisjs-practice-of-build.html' title='Node.js前後端CORS網頁應用試作：AdonisJs聊天室 / Practice of Build a CORS Full Stack Web Application in Node.js: AdonisJs Chat'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//1.bp.blogspot.com/-SwX1R0zBhJA/XaCo-8wTSfI/AAAAAAAEZYo/9U3jg1_BLsoSNEzUcd0vVcf1P5fWCizuACK4BGAYYCw/s72-c/14-Node_js_CORS_AdonisJs_Practice_of.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-8529023428692745820</id><published>2019-10-03T20:31:00.000+08:00</published><updated>2019-10-03T20:31:02.155+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="GitHub"/><category scheme="http://www.blogger.com/atom/ns#" term="NetBeans"/><category scheme="http://www.blogger.com/atom/ns#" term="Service/GitHub"/><category scheme="http://www.blogger.com/atom/ns#" term="Software/NetBeans"/><category scheme="http://www.blogger.com/atom/ns#" term="Tool/NetBeans"/><title type='text'>如何在NetBeans中設定Git的遞交者？ / How to change author of Git commits in NetBeans</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-TJT2hfcNmo8/XZXpoFfVoWI/AAAAAAAEZDI/_9T9NvTCNAUXNt1I5k2IaBR0_NEFHJ1FACK4BGAYYCw/s1600/13-NetBeans_Git_How_to_change_author.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-TJT2hfcNmo8/XZXpoFfVoWI/AAAAAAAEZDI/_9T9NvTCNAUXNt1I5k2IaBR0_NEFHJ1FACK4BGAYYCw/s1600/13-NetBeans_Git_How_to_change_author.png&quot; title=&quot;13-NetBeans_Git_How_to_change_author.png&quot; alt=&quot;13-NetBeans_Git_How_to_change_author.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ALOHA~~這裡是灌新電腦後要重設設定就會非常苦惱的布丁。&lt;/p&gt;
&lt;p&gt;NetBeans具備了&lt;a href=&quot;http://blog.pulipuli.info/2014/08/gitnetbeansnetbeansgit-clone-git.html&quot; target=&quot;_blank&quot;&gt;版本控制工具Git&lt;/a&gt;的功能，不過預設Git在遞交的時候，它會用你電腦的使用者帳號名稱跟電腦名稱作為作者的資訊。這時候其實我們可以從「Open Global Configuration」來手動設定Git遞交的作者資訊喔。讓我們來看看怎麼操作吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;沒有設定Git遞交的作者 / Default author of Git commits&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-u05Ojs-zOzw/XZXpnf7k8dI/AAAAAAAEZC8/baaZlDwYRaIpYwPnwtFBXh8HK4_tvGDRgCK4BGAYYCw/s1600/2019-1003-195050.png&quot;&gt;&lt;img src=&quot;//1.bp.blogspot.com/-u05Ojs-zOzw/XZXpnf7k8dI/AAAAAAAEZC8/baaZlDwYRaIpYwPnwtFBXh8HK4_tvGDRgCK4BGAYYCw/s450/2019-1003-195050.png&quot; title=&quot;2019-1003-195050.png&quot; alt=&quot;2019-1003-195050.png&quot; width=&quot;450&quot; height=&quot;352&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;讓我們先來看看NetBeans裡面沒有設定Git作者的話，執行commit (遞交)指令時會出現的畫面。上圖是NetBeans中執行Git commit的對話視窗。中間的Author跟Commiter，預設是以現在電腦的使用者帳號跟電腦名稱所組成，這通常不會是你實際上使用的聯絡資訊。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-r5vgY53sXjw/XZXpnRKmGrI/AAAAAAAEZCs/__O44e0011oX7jfAl4W_0mW0__ApUjbzACK4BGAYYCw/s1600/2019-1003-195300.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-r5vgY53sXjw/XZXpnRKmGrI/AAAAAAAEZCs/__O44e0011oX7jfAl4W_0mW0__ApUjbzACK4BGAYYCw/s450/2019-1003-195300.png&quot; title=&quot;2019-1003-195300.png&quot; alt=&quot;2019-1003-195300.png&quot; width=&quot;450&quot; height=&quot;157&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果就這樣遞交的話，NetBeans就會跳出訊息：&lt;/p&gt;
&lt;blockquote&gt;Set Repository User&lt;br&gt;&lt;br&gt;Repository does not have fully specified user yes.&lt;br&gt;Do you want to set USER &amp;lt;USER@PC-NAME&amp;gt; as the default author?&lt;/blockquote&gt;
&lt;p&gt;它就會問你是不是要用這個設定作為Git遞交時的預設作者。&lt;/p&gt;
&lt;p&gt;當然，其實是希望設定自己的聯絡資訊作為作者。這時候就要修改Git的設定了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;設定Git遞交的作者資訊 / Set the author of Git commit&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-mpY3Vq1JCVo/XZXpnbRRO4I/AAAAAAAEZC0/qVA9-jut1RIXWhv-reJbZwKtIu1lfLn-gCK4BGAYYCw/s1600/2019-1003-200305.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-mpY3Vq1JCVo/XZXpnbRRO4I/AAAAAAAEZC0/qVA9-jut1RIXWhv-reJbZwKtIu1lfLn-gCK4BGAYYCw/s450/2019-1003-200305.png&quot; title=&quot;2019-1003-200305.png&quot; alt=&quot;2019-1003-200305.png&quot; width=&quot;388&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;要如何在NetBeans裡面設定呢？請在工具列中點下「Team」，進入「Repository &amp;gt; Open Global Configuration」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-DxKN562qe5o/XZXpnol534I/AAAAAAAEZDE/4guFx7H0nBAiCUYH06dOSjwadLZdjNOHwCK4BGAYYCw/s1600/2019-1003-200458.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-DxKN562qe5o/XZXpnol534I/AAAAAAAEZDE/4guFx7H0nBAiCUYH06dOSjwadLZdjNOHwCK4BGAYYCw/s341/2019-1003-200458.png&quot; title=&quot;2019-1003-200458.png&quot; alt=&quot;2019-1003-200458.png&quot; width=&quot;341.989&quot; height=&quot;188.991&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候NetBeans會跳出一個提示，這是它要建立Git的設定檔案「.gitconfig」的確認訊息。.gitconfig預設會放在你現在帳號的家目錄底下。請按下「Yes」繼續。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-KYauQBZbZEc/XZXpndTPjkI/AAAAAAAEZC4/TceDRIUIYy0yoYW3S3qoXrHZVayrS6lLACK4BGAYYCw/s1600/2019-1003-200642.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-KYauQBZbZEc/XZXpndTPjkI/AAAAAAAEZC4/TceDRIUIYy0yoYW3S3qoXrHZVayrS6lLACK4BGAYYCw/s447/2019-1003-200642.png&quot; title=&quot;2019-1003-200642.png&quot; alt=&quot;2019-1003-200642.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候.gitconfig會是空檔案。我們可以在這裡輸入你的作者資訊：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nohighlight&quot;&gt;[user]&lt;br&gt; name&amp;nbsp;=&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;USER&lt;/font&gt;&lt;br&gt; email&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;USER_EMAIL&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;紅色的&lt;font color=&quot;#ff0000&quot;&gt;USER&lt;/font&gt;是作者的名字，藍色的&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;USER_EMAIL&lt;/span&gt;是你的聯絡信箱。請改成你的個人資訊。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-LcxDbW2KFDs/XZXpvOHKf7I/AAAAAAAEZDc/rCM57ZWjmBMklTprIyq3Np92gxZifRSYACK4BGAYYCw/s1600/2019-1003-200757.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-LcxDbW2KFDs/XZXpvOHKf7I/AAAAAAAEZDc/rCM57ZWjmBMklTprIyq3Np92gxZifRSYACK4BGAYYCw/s353/2019-1003-200757.png&quot; title=&quot;2019-1003-200757.png&quot; alt=&quot;2019-1003-200757.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;設定好的話就會像上圖一樣，然後儲存.gitconfig吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-zFro7eBYLXY/XZXpvI2MSnI/AAAAAAAEZDY/5x3z6iLKvqQGwfLRWO7b-8Pyzaov50zZwCK4BGAYYCw/s1600/2019-1003-201101.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-zFro7eBYLXY/XZXpvI2MSnI/AAAAAAAEZDY/5x3z6iLKvqQGwfLRWO7b-8Pyzaov50zZwCK4BGAYYCw/s450/2019-1003-201101.png&quot; title=&quot;2019-1003-201101.png&quot; alt=&quot;2019-1003-201101.png&quot; width=&quot;450&quot; height=&quot;328&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下次再進行Git遞交的時候，你就會看到剛剛設定的作者資訊囉。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / Wrap up&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-GiKO3tDphZ4/XZXpvA_jy3I/AAAAAAAEZDg/DNZgb2IREoQxQkT0k3M8nrTIRkD4XPs6gCK4BGAYYCw/s1600/2019-1003-201335.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-GiKO3tDphZ4/XZXpvA_jy3I/AAAAAAAEZDg/DNZgb2IREoQxQkT0k3M8nrTIRkD4XPs6gCK4BGAYYCw/s365/2019-1003-201335.png&quot; title=&quot;2019-1003-201335.png&quot; alt=&quot;2019-1003-201335.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在Windows環境裡面，我們沒辦法直接在檔案管理員裡面建立「.gitignore」檔案。這時候用透過NetBeans設定Git遞交的作者就很方便。&lt;/p&gt;
&lt;p&gt;這個功能只需要設定一次就好，往往很容易做完就忘記了，所以我在這裡特別記錄一下做法。下次再設定的時候，可能就是.....重灌電腦的時候吧。orz



&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次在NetBeans裡面設定Git遞交作者的教學就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;你有用過版本控制系統嗎？&lt;a href=&quot;https://netbeans.org/nonav/kb/docs/ide/git.html&quot; target=&quot;_blank&quot;&gt;Git&lt;/a&gt;？&lt;a href=&quot;https://netbeans.org/nonav/kb/docs/ide/mercurial.html&quot; target=&quot;_blank&quot;&gt;Mercurial&lt;/a&gt;？&lt;a href=&quot;https://netbeans.org/nonav/kb/docs/ide/subversion.html&quot; target=&quot;_blank&quot;&gt;Subversion&lt;/a&gt;？&lt;a href=&quot;https://netbeans.org/nonav/kb/docs/ide/cvs.html&quot; target=&quot;_blank&quot;&gt;CSV&lt;/a&gt;？&lt;a href=&quot;https://netbeans.org/nonav/kb/docs/ide/clearcase.html&quot; target=&quot;_blank&quot;&gt;ClearCase&lt;/a&gt;？&lt;/li&gt;
  &lt;li&gt;你是直接使用版本控制系統的指令嗎？還是像我這樣，搭配其他IDE來使用版本控制系統呢？&lt;/li&gt;
  &lt;li&gt;你用過版本控制的經驗中，讓你印象最深刻的功能是什麼呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/8529023428692745820/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/10/netbeansgit-how-to-change-author-of-git.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/8529023428692745820'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/8529023428692745820'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/10/netbeansgit-how-to-change-author-of-git.html' title='如何在NetBeans中設定Git的遞交者？ / How to change author of Git commits in NetBeans'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//1.bp.blogspot.com/-TJT2hfcNmo8/XZXpoFfVoWI/AAAAAAAEZDI/_9T9NvTCNAUXNt1I5k2IaBR0_NEFHJ1FACK4BGAYYCw/s72-c/13-NetBeans_Git_How_to_change_author.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-4086424327904525684</id><published>2019-10-03T17:07:00.002+08:00</published><updated>2019-10-03T17:07:21.235+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Software/Notepad++"/><category scheme="http://www.blogger.com/atom/ns#" term="Software/Windows"/><category scheme="http://www.blogger.com/atom/ns#" term="Windows/電腦軟體"/><title type='text'>如何合併多個純文字檔案並加上換行：使用Notepad++ / How to merge plain files in a single file with broken lines: Using Notepad++</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-PjkFqgTSVvQ/XZW57HbkeZI/AAAAAAAEY_M/2n8l7hGfi6UOjenzSu5sjlnLKtGgDiOBgCK4BGAYYCw/s1600/12-Notepad_How_to_merge_plain_files.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-PjkFqgTSVvQ/XZW57HbkeZI/AAAAAAAEY_M/2n8l7hGfi6UOjenzSu5sjlnLKtGgDiOBgCK4BGAYYCw/s1600/12-Notepad_How_to_merge_plain_files.png&quot; title=&quot;12-Notepad_How_to_merge_plain_files.png&quot; alt=&quot;12-Notepad_How_to_merge_plain_files.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ALOHA~~我是就算為了一個小小的合併檔案工作也不想寫程式的布丁。&lt;/p&gt;
&lt;p&gt;我們很多時候需要將大量的純文字檔案合併成一個檔案，並且希望在各個檔案之間加上換行。單純將純文字檔案合併成一個檔案的做法很多，但是要能夠正確識別中文編碼，還要在合併的檔案之間加上斷行，那就不太容易了。&lt;/p&gt;
&lt;p&gt;令人意外的是，Windows上好用的&lt;a href=&quot;http://blog.pulipuli.info/2016/12/utf-8notepad-how-to-convert-plain-text.html#postcatautf-8notepad-how-to-convert-plain-text.html0_anchor0&quot; target=&quot;_blank&quot;&gt;純文字編輯器Notepad++&lt;/a&gt;，它的&lt;a href=&quot;http://www.scout-soft.com/combine/&quot; target=&quot;_blank&quot;&gt;Combine外掛&lt;/a&gt;居然有合併多個純文字檔案的功能。讓我們來看看怎麽操作吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;問題敘述 / Problem statement&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-Nbo5aAiZk3w/XZW56xqEqPI/AAAAAAAEY-8/vuK0ohrT9ts5iVhEv8trsU-3hGtBXLqygCK4BGAYYCw/s1600/2019-1003-153048.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-Nbo5aAiZk3w/XZW56xqEqPI/AAAAAAAEY-8/vuK0ohrT9ts5iVhEv8trsU-3hGtBXLqygCK4BGAYYCw/s450/2019-1003-153048.png&quot; title=&quot;2019-1003-153048.png&quot; alt=&quot;2019-1003-153048.png&quot; width=&quot;450&quot; height=&quot;295&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/15bkl8ycQmc-OD2C8v-7aEaw6UfGM400w3XH3bGkczCA/export?format=txt&quot; target=&quot;_blank&quot;&gt;大俠名冊 1.txt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1EDQ24NwH83W8p0gdXQNFyBFcaTXSBAsenhhTkfd_F-E/export?format=txt&quot; target=&quot;_blank&quot;&gt;大俠名冊 2.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;現在我們有兩個純文字檔案組成的名冊，裡面是一行一位名字。附帶一提，這裡面的名字是由&lt;a href=&quot;http://www.richyli.com/name/novel.asp&quot; target=&quot;_blank&quot;&gt;夢幻筆名產生器&lt;/a&gt;而來的，這個工具在做範例檔案的時候非常好用。&lt;/p&gt;
&lt;p&gt;值得注意的是，這兩個檔案的結尾都沒有換行。這個看不見的小細節，會影響後面的操作設定喔。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-vUYQA0nSdjU/XZW56-ME5sI/AAAAAAAEY-4/A7bsMphKI_QvViXf5rNpMPkmASFvzf2JACK4BGAYYCw/s1600/2019-1003-161608.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-vUYQA0nSdjU/XZW56-ME5sI/AAAAAAAEY-4/A7bsMphKI_QvViXf5rNpMPkmASFvzf2JACK4BGAYYCw/s450/2019-1003-161608.png&quot; title=&quot;2019-1003-161608.png&quot; alt=&quot;2019-1003-161608.png&quot; width=&quot;450&quot; height=&quot;414&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我們的目標是要把這些名冊檔案合併成一個檔案，如上圖所示。仔細觀察的話，可以發現兩個檔案之間是&lt;font color=&quot;#ff0000&quot;&gt;&lt;u&gt;有加入換行&lt;/u&gt;&lt;/font&gt;的結果。&lt;/p&gt;
&lt;p&gt;雖然這個例子只用了兩個小檔案，也許用複製貼上也可以完成這個工作。不過在處理大量檔案的時候，手工作業就很難做到這件事情了。&lt;/p&gt;
&lt;p&gt;那要怎麼將純文字檔案合併成一個檔案，並且加入換行呢？讓我們從Notepad++開始吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;環境設定：Notepad++ / Environment: Notepad++&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-FD6ddJw1r6g/XZW56pbRoNI/AAAAAAAEY-o/aRAJxMxCpncv7PzSYglqI1bmgRlYMRNAACK4BGAYYCw/s1600/2019-1003-161947.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-FD6ddJw1r6g/XZW56pbRoNI/AAAAAAAEY-o/aRAJxMxCpncv7PzSYglqI1bmgRlYMRNAACK4BGAYYCw/s407/2019-1003-161947.png&quot; title=&quot;2019-1003-161947.png&quot; alt=&quot;2019-1003-161947.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;Notepad++官方網站：&lt;/span&gt;&lt;a href=&quot;https://notepad-plus-plus.org/&quot; target=&quot;_blank&quot;&gt;https://notepad-plus-plus.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Notepad++安裝版下載網頁：&lt;a href=&quot;https://notepad-plus-plus.org/download/v7.2.2.html&quot; target=&quot;_blank&quot;&gt;https://notepad-plus-plus.org/download/v7.2.2.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Notepad++可攜版&amp;nbsp;&lt;a href=&quot;https://notepad-plus-plus.org/repository/7.x/7.2.2/npp.7.2.2.bin.zip&quot; style=&quot;margin: 0px; padding: 0px; list-style: none; border: none; outline: none;&quot;&gt;Notepad++ zip package 32-bit x86&lt;/a&gt;&amp;nbsp;檔案備份：&lt;a href=&quot;https://drive.google.com/open?id=0B5UXWzdIPpm0WG1qRDJ5NGZCd0k&quot; style=&quot;margin: 0px; padding: 0px; list-style: none; border: none; outline: none;&quot;&gt;Google Drive&lt;/a&gt;、&lt;a href=&quot;https://1drv.ms/u/s!AqkXZ97o-6JrnSNnjLgwx7g_WfUK&quot; style=&quot;margin: 0px; padding: 0px; list-style: none; border: none; outline: none;&quot;&gt;OneDrive&lt;/a&gt;、&lt;a href=&quot;https://app.box.com/s/mzhv5q42v9a2zd4gwv9rdoprjw39z7l9&quot; style=&quot;margin: 0px; padding: 0px; list-style: none; border: none; outline: none;&quot;&gt;Box&lt;/a&gt;、&lt;a href=&quot;https://mega.nz/#!EwZHEQJK!faLas3PVwDVJrMdooYS3zAO2nYjGAH8mfFZzD7vr0-Y&quot; style=&quot;margin: 0px; padding: 0px; list-style: none; border: none; outline: none;&quot;&gt;Mega&lt;/a&gt;、&lt;a href=&quot;http://www.mediafire.com/file/7h919umsvh3131t/npp.7.2.2.bin.zip&quot; style=&quot;margin: 0px; padding: 0px; list-style: none; border: none; outline: none;&quot;&gt;MediaFire&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我是在Windows 7 64位元作業系統中使用Notepad++ 7.2.2版本。你可以選擇使用安裝版或可攜版的Notepad++，請下載並安裝，把它準備好吧。&lt;/p&gt;
&lt;h3&gt;安裝Combine外掛 / Install Combine plugin&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-nYjvMDxuEwc/XZW5675sN2I/AAAAAAAEY_I/f3G-CqolTSIf8Jz5qsdT9SM2hNFYXXu8gCK4BGAYYCw/s1600/2019-1003-162504.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-nYjvMDxuEwc/XZW5675sN2I/AAAAAAAEY_I/f3G-CqolTSIf8Jz5qsdT9SM2hNFYXXu8gCK4BGAYYCw/s450/2019-1003-162504.png&quot; title=&quot;2019-1003-162504.png&quot; alt=&quot;2019-1003-162504.png&quot; width=&quot;434&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再來我們要為Notepad++安裝外掛。請開啟Notepad++，從工具列中的「外掛」進入「Plugin Manager &amp;gt; Show Plugin Manager」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-9XjN3lsfI1I/XZW56_9CODI/AAAAAAAEY_E/eKoWu9QKo5kmYl2WFhNVGix0u5hxorK-wCK4BGAYYCw/s1600/2019-1003-162658.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-9XjN3lsfI1I/XZW56_9CODI/AAAAAAAEY_E/eKoWu9QKo5kmYl2WFhNVGix0u5hxorK-wCK4BGAYYCw/s450/2019-1003-162658.png&quot; title=&quot;2019-1003-162658.png&quot; alt=&quot;2019-1003-162658.png&quot; width=&quot;450&quot; height=&quot;437&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;開啟Plugin Manager (外掛管理器)後，預設會在「Available」(可安裝的外掛)頁籤裡面，請到Plugin(外掛)列表中找到「Combine」這個外掛，將它打勾。然後按下右下角的「Install」按鈕。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-WZ5X5r1-k7I/XZW5-xjYv2I/AAAAAAAEY_8/2brXmu7VxZMyNdbe98ra_YOg-R4BXqY9wCK4BGAYYCw/s1600/2019-1003-162943.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-WZ5X5r1-k7I/XZW5-xjYv2I/AAAAAAAEY_8/2brXmu7VxZMyNdbe98ra_YOg-R4BXqY9wCK4BGAYYCw/s450/2019-1003-162943.png&quot; title=&quot;2019-1003-162943.png&quot; alt=&quot;2019-1003-162943.png&quot; width=&quot;450&quot; height=&quot;161&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Combine外掛會用到「combine.dll」檔案，但是Notepad++無法驗證它的安全性。實際使用的時候似乎是沒問題的，這時候請按下「Yes」即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-eD8MRXIe5lo/XZW5-o39HjI/AAAAAAAEY_4/aVUNwEbA1IA_X_i7ZbeWRqifCHAFITckwCK4BGAYYCw/s1600/2019-1003-163008.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-eD8MRXIe5lo/XZW5-o39HjI/AAAAAAAEY_4/aVUNwEbA1IA_X_i7ZbeWRqifCHAFITckwCK4BGAYYCw/s450/2019-1003-163008.png&quot; title=&quot;2019-1003-163008.png&quot; alt=&quot;2019-1003-163008.png&quot; width=&quot;450&quot; height=&quot;156&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安裝完成之後，Plugin Manager會需要重新啟動Notepad++。請按「Yes」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-Dg8NZLNWypA/XZW5-y0qbTI/AAAAAAAEY_0/wySY-txf4gM-9HrALssxU1DXC9Mso2zqgCK4BGAYYCw/s1600/2019-1003-163102.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-Dg8NZLNWypA/XZW5-y0qbTI/AAAAAAAEY_0/wySY-txf4gM-9HrALssxU1DXC9Mso2zqgCK4BGAYYCw/s450/2019-1003-163102.png&quot; title=&quot;2019-1003-163102.png&quot; alt=&quot;2019-1003-163102.png&quot; width=&quot;434&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;重新啟動Notepad++後，我們就能在「外掛」底下看到「Combine」外掛的功能。這就表示Combine外掛安裝完成了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;合併檔案 / Combine files&lt;/h2&gt;
&lt;p&gt;接下來我們就一步一步來實作看看。&lt;/p&gt;
&lt;h3&gt;STEP 1. 準備檔案 / Prepare plain text files&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-R96lTPPMMNg/XZW5-s_K16I/AAAAAAAEY_w/2ezMy0HiZUMdUI0dmxCj4w6nU7Qy7FqKgCK4BGAYYCw/s1600/2019-1003-163329.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-R96lTPPMMNg/XZW5-s_K16I/AAAAAAAEY_w/2ezMy0HiZUMdUI0dmxCj4w6nU7Qy7FqKgCK4BGAYYCw/s389/2019-1003-163329.png&quot; title=&quot;2019-1003-163329.png&quot; alt=&quot;2019-1003-163329.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/15bkl8ycQmc-OD2C8v-7aEaw6UfGM400w3XH3bGkczCA/export?format=txt&quot; target=&quot;_blank&quot;&gt;大俠名冊 1.txt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1EDQ24NwH83W8p0gdXQNFyBFcaTXSBAsenhhTkfd_F-E/export?format=txt&quot; target=&quot;_blank&quot;&gt;大俠名冊 2.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;請將待合併的純文字檔案放到一個資料夾中。&lt;/p&gt;
&lt;h3&gt;STEP 2. 用Notepad++開啟舊檔 / Open files in Notepad++&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-hkN9aoW5FqY/XZW5-vAD0SI/AAAAAAAEY_s/V5fyYjLofKIydqY-yTx-_8X1veDGJyO_gCK4BGAYYCw/s1600/2019-1003-163553.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-hkN9aoW5FqY/XZW5-vAD0SI/AAAAAAAEY_s/V5fyYjLofKIydqY-yTx-_8X1veDGJyO_gCK4BGAYYCw/s310/2019-1003-163553.png&quot; title=&quot;2019-1003-163553.png&quot; alt=&quot;2019-1003-163553.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再來回到Notepad++中，打開「開啟舊檔」功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-TTV15TfyKH8/XZW5-hZCLoI/AAAAAAAEY_o/zhEyIJmjS2owxccGdyAdrL3DYEVAfwZpQCK4BGAYYCw/s1600/2019-1003-163744.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-TTV15TfyKH8/XZW5-hZCLoI/AAAAAAAEY_o/zhEyIJmjS2owxccGdyAdrL3DYEVAfwZpQCK4BGAYYCw/s450/2019-1003-163744.png&quot; title=&quot;2019-1003-163744.png&quot; alt=&quot;2019-1003-163744.png&quot; width=&quot;450&quot; height=&quot;310&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;選取要合併的檔案，然後按下「Open」(開啟)按鈕。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-WLH7Ozdhw-I/XZW6KIxkFPI/AAAAAAAEZAg/-k9Gqu45JugoC-Bn-MAf0BB_gvofnpm4ACK4BGAYYCw/s1600/2019-1003-163812.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-WLH7Ozdhw-I/XZW6KIxkFPI/AAAAAAAEZAg/-k9Gqu45JugoC-Bn-MAf0BB_gvofnpm4ACK4BGAYYCw/s450/2019-1003-163812.png&quot; title=&quot;2019-1003-163812.png&quot; alt=&quot;2019-1003-163812.png&quot; width=&quot;434&quot; height=&quot;450&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候要合併的檔案會在Notepad++中開啟。&lt;/p&gt;
&lt;h3&gt;STEP 3. 合併檔案 / Combine files&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-6VZru_YQcb0/XZW6KFHg5lI/AAAAAAAEZAU/gMn-HtLljlgyCq4IK76k9-GHbD5Zu6VzgCK4BGAYYCw/s1600/2019-1003-164004.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-6VZru_YQcb0/XZW6KFHg5lI/AAAAAAAEZAU/gMn-HtLljlgyCq4IK76k9-GHbD5Zu6VzgCK4BGAYYCw/s368/2019-1003-164004.png&quot; title=&quot;2019-1003-164004.png&quot; alt=&quot;2019-1003-164004.png&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;從工具列的「外掛」進入「Combine &amp;gt; Start」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-ACJSKPR5BYA/XZW6KLO0nbI/AAAAAAAEZAI/kVuOVrvaSHQmHsR3fxC90oWbCjjSvuM4wCK4BGAYYCw/s1600/2019-1003-164114.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-ACJSKPR5BYA/XZW6KLO0nbI/AAAAAAAEZAI/kVuOVrvaSHQmHsR3fxC90oWbCjjSvuM4wCK4BGAYYCw/s450/2019-1003-164114.png&quot; title=&quot;2019-1003-164114.png&quot; alt=&quot;2019-1003-164114.png&quot; width=&quot;450&quot; height=&quot;278.234&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候會顯示Combine外掛合併檔案的選項。這四個選項的意思是：&lt;/p&gt;
&lt;p&gt;Before text: (在檔案之前)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Insert filename (是否插入檔案名稱)&lt;/li&gt;
  &lt;li&gt;Insert line (是否插入以「-----」構成的虛線水平線)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After text: (在檔案之後)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Insert line (是否插入以「-----」構成的虛線水平線)&lt;/li&gt;
  &lt;li&gt;
    &lt;font color=&quot;#ff0000&quot;&gt;Insert linefeed (是否插入換行)&lt;/font&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這邊我們要勾選「Insert linefeed」這個選項，讓每個檔案合併時加入換行。然後按下「OK」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-vUYQA0nSdjU/XZW56-ME5sI/AAAAAAAEY-4/A7bsMphKI_QvViXf5rNpMPkmASFvzf2JACK4BGAYYCw/s1600/2019-1003-161608.png&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-vUYQA0nSdjU/XZW56-ME5sI/AAAAAAAEY-4/A7bsMphKI_QvViXf5rNpMPkmASFvzf2JACK4BGAYYCw/s450/2019-1003-161608.png&quot; title=&quot;2019-1003-161608.png&quot; alt=&quot;2019-1003-161608.png&quot; width=&quot;450&quot; height=&quot;414&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候Combine外掛就會把在Notepad++中開啟的檔案合併成一個新的檔案，這樣就合併完成了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-kCG1pXbqvpM/XZW6KMMn2wI/AAAAAAAEZAc/GDpGIVjzz306660sytp80yq30r9a1OvdwCK4BGAYYCw/s1600/2019-1003-164451.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-kCG1pXbqvpM/XZW6KMMn2wI/AAAAAAAEZAc/GDpGIVjzz306660sytp80yq30r9a1OvdwCK4BGAYYCw/s450/2019-1003-164451.png&quot; title=&quot;2019-1003-164451.png&quot; alt=&quot;2019-1003-164451.png&quot; width=&quot;450&quot; height=&quot;414&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你可以按工具列的「儲存檔案」按鈕，將合併的檔案儲存起來。這樣就做完了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / Wrap up&lt;/h2&gt;
&lt;p&gt;在Notepad++的Combine外掛中提供了很多選項，使用者可以依照待合併檔案的內容，以及希望的合併結果，來決定是否要開啟某些選項。舉例來說，如果每個純文字檔案的結尾都已經有換行，那就不必勾選「Insert linefeed」，直接合併即可。&lt;/p&gt;
&lt;p&gt;使用Notepad++來合併純文字檔案最大的優勢在於它能夠正確處理不同編碼。我找過許多其他的檔案合併工具，但它們多半只是為了英文語系使用者開發，一遇到中文檔案就變成亂碼。相較之下，Notepad++在處理不同編碼的檔案時，一直表現得很好。我也很推薦大家用Notepad++把純文字檔案轉換成UTF-8編碼，請見「&lt;a href=&quot;http://blog.pulipuli.info/2016/12/utf-8notepad-how-to-convert-plain-text.html&quot; target=&quot;_blank&quot;&gt;如何把純文字檔案轉換成UTF-8格式：使用Notepad++&lt;/a&gt;」這篇。&lt;/p&gt;
&lt;p&gt;雖然網路上有很多用命令列就能完成的教學，但幾乎都不能額外加入換行的功能。而且命令列指令也容易忘記，每次要用都要回頭查詢，實在麻煩。&lt;/p&gt;
&lt;p&gt;不過Notepad++的Combine外掛也半斤八兩，它的合併檔案其實是指合併在Notepad++開啟的檔案。第一次使用的時候，我還摸索了一陣子，所以才想要寫一下操作教學。&lt;/p&gt;
&lt;p&gt;值得注意的是，Combine外掛只能合併在Notepad++中開啟的檔案，因此你的電腦必須先承受Notepad++開啟大量檔案的壓力，然後才能用Combine外掛來合併。我不確定用Notepad++來合併檔案的處理檔案上限在那裡，至少合併30幾個幾百K的小檔案，在我這臺記憶體有16GB的電腦上是完全沒問題。



  如果真的要處理超級大的巨量資料，我想你還是撰寫程式語言，用串流(stream)的模式來處理檔案的合併吧。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次使用Notepad++合併純文字檔案的教學就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;你有遇到過需要合併大量檔案的情況嗎？&lt;/li&gt;
  &lt;li&gt;你通常需要合併什麼類型的檔案呢？&lt;/li&gt;
  &lt;li&gt;在合併檔案時，你有用過其他工具嗎？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/4086424327904525684/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/10/notepad-how-to-merge-plain-files-in.html#comment-form' title='4 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/4086424327904525684'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/4086424327904525684'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/10/notepad-how-to-merge-plain-files-in.html' title='如何合併多個純文字檔案並加上換行：使用Notepad++ / How to merge plain files in a single file with broken lines: Using Notepad++'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//4.bp.blogspot.com/-PjkFqgTSVvQ/XZW57HbkeZI/AAAAAAAEY_M/2n8l7hGfi6UOjenzSu5sjlnLKtGgDiOBgCK4BGAYYCw/s72-c/12-Notepad_How_to_merge_plain_files.png" height="72" width="72"/><thr:total>4</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-8067981384724380496</id><published>2019-10-03T02:09:00.000+08:00</published><updated>2019-10-03T21:42:36.375+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Data Mining"/><category scheme="http://www.blogger.com/atom/ns#" term="Presentation"/><category scheme="http://www.blogger.com/atom/ns#" term="Software/Weka"/><title type='text'>Weka簡介與實作：資料探勘的分群、異常偵測、關聯規則探勘、分類 / Practice Data Mining with Weka: Clustering, Outlier Detection, Associations and Classification</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-aPhRlMnd5tA/XZTnfhJccTI/AAAAAAAEY64/Ht78qAKg2iAg9x8A-B8WNSUaZS3jIVKHgCK4BGAYYCw/s1600/11-Weka_Practice_Data_Mining_with_Weka.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-aPhRlMnd5tA/XZTnfhJccTI/AAAAAAAEY64/Ht78qAKg2iAg9x8A-B8WNSUaZS3jIVKHgCK4BGAYYCw/s1600/11-Weka_Practice_Data_Mining_with_Weka.png&quot; title=&quot;11-Weka_Practice_Data_Mining_with_Weka.png&quot; alt=&quot;11-Weka_Practice_Data_Mining_with_Weka.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;啊囉哈~~這裡是整理投影片整理得超久的布丁。&lt;/p&gt;
&lt;p&gt;今天要來談的Weka是知名的資料探勘自由軟體，它含括了資料探勘中的三大議題：&lt;a href=&quot;http://blog.pulipuli.info/2017/09/clustering.html&quot; target=&quot;_blank&quot;&gt;分群(clustering)&lt;/a&gt;、&lt;a href=&quot;http://blog.pulipuli.info/2017/08/wekahotspot-association-rule-mining.html&quot; target=&quot;_blank&quot;&gt;關聯規則探勘(association rule mining)&lt;/a&gt;以及&lt;a href=&quot;http://blog.pulipuli.info/2017/04/weka-make-predictions-with-saved.html&quot; target=&quot;_blank&quot;&gt;分類(classification)&lt;/a&gt;。想要學習資料探勘的基本概念，並快速開始進入資料探勘實作的話，Weka是個不需要寫程式也可以輕鬆上手的好方法。&lt;/p&gt;
&lt;p&gt;這一篇是我在2019年研習班中講授的課程投影片。這篇的做法改進了我之前製作的「&lt;a href=&quot;http://blog.pulipuli.info/2017/10/applications-of-big-data-and-statistics.html&quot; target=&quot;_blank&quot;&gt;巨量資料探勘與統計應用&lt;/a&gt;」課程內容，不僅更加掌握Weka的功能與參數，也直接採用&lt;a href=&quot;https://www.wikiwand.com/en/OpenDocument&quot; target=&quot;_blank&quot;&gt;ODS開放文件格式試算表&lt;/a&gt;作為練習資料的格式。如果你對資料探勘有興趣的話，不妨也試著一起玩玩看吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;課程架構 / Guideline&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-VCPgCcL1uZc/XZTne-i7wWI/AAAAAAAEY6o/SWru3sAynnATEQiQeQ3VvK0xE9xLHaiAQCK4BGAYYCw/s1600/2019-1003-000016.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-VCPgCcL1uZc/XZTne-i7wWI/AAAAAAAEY6o/SWru3sAynnATEQiQeQ3VvK0xE9xLHaiAQCK4BGAYYCw/s450/2019-1003-000016.png&quot; title=&quot;2019-1003-000016.png&quot; alt=&quot;2019-1003-000016.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這門課程將資料探勘分成兩大類、三種分析，而各種分析有不同的技術可採用。這兩大類為：沒有預設答案的「非監督式學習」，對應的是「探索性分析」；有預設答案的「監督式學習」，對應的是「比較性分析」和「預設性分析」。&lt;/p&gt;
&lt;p&gt;每種分析都有對應的資料探勘技術，這些技術都可以用Weka來實作。在探索性分析中，為了瞭解資料的狀況，我們可以採用的資料探勘技術為「分群」和「異常偵測」。在比較性分析中，我們想要瞭解不同類型的資料有何差異，可以使用的技術為「關聯規則探勘」。在預測性分析中，我們想要以歷史資料建立規則模型，用來預測未來的未知資料，可以採用的資料探勘技術為「分類」和「迴歸」。&lt;/p&gt;
&lt;p&gt;跟傳統定義不同的是，我將關聯規則探勘作為一種比較性分析，並將它隸屬於監督式學習中。傳統關聯規則探勘大多作為非監督式學習，但探勘結果往往難以應用。相反的，在有預設答案的情況下去找出不同類型資料的差異，這種問題更適合採用關聯規則探勘來分析。所以我把它特別獨立出來，變成比較性分析來介紹。&lt;/p&gt;
&lt;p&gt;本課程分成四個投影片來介紹。底下我會列出投影片、投影片大綱，以及該投影片使用到的實作教材和相關連結。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Chapter 1. 認識Weka / Introduction of Weka&lt;/h2&gt;
&lt;div&gt;
  &lt;iframe src=&quot;https://docs.google.com/presentation/d/e/2PACX-1vRqbAYxejDc0flSE97bBZbruYmMYMHCFhTYV8EVW542VsvkS88-OWKwEmFfRnMZ-osdp7ZOTQ0Tbq5u/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; width=&quot;960&quot; height=&quot;749&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vRqbAYxejDc0flSE97bBZbruYmMYMHCFhTYV8EVW542VsvkS88-OWKwEmFfRnMZ-osdp7ZOTQ0Tbq5u/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; target=&quot;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot;&gt;Open in new window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:window.open(&#39;https://docs.google.com/presentation/d/e/2PACX-1vRqbAYxejDc0flSE97bBZbruYmMYMHCFhTYV8EVW542VsvkS88-OWKwEmFfRnMZ-osdp7ZOTQ0Tbq5u/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;width=800,height=600,toolbar=0,menubar=0,location=0&#39;)&quot;&gt;Open in popup window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Google投影片：&lt;a href=&quot;https://docs.google.com/presentation/d/10vGvxQyITs_ipXezJDt5Nxjxn0itBdXgEHNkJ1RuPHQ/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;1：認識Weka - Weka簡介與實作 - blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Power Point格式備份：&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2019/10/1：認識Weka%20-%20Weka簡介與實作%20-%20blog.pptx&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;、&lt;a href=&quot;https://1drv.ms/p/s!AqkXZ97o-6JrpjC7sLPFHkWUE624?e=5dLjHE&quot; target=&quot;_blank&quot;&gt;One Drive&lt;/a&gt;、&lt;a href=&quot;https://mega.nz/#!1wRCDaQA!qYEj4frRIZkbku5fAfjE6t6keKVEEHfJDz4zYqgml_c&quot; target=&quot;_blank&quot;&gt;Mega&lt;/a&gt;、&lt;a href=&quot;https://app.box.com/s/hz2660hiiar8vcwhz375dnv5tspswvjc&quot; target=&quot;_blank&quot;&gt;Box&lt;/a&gt;、&lt;a href=&quot;http://www.mediafire.com/file/q01wgi5f4w61xub/1%25EF%25BC%259A%25E8%25AA%258D%25E8%25AD%2598Weka_-_Weka%25E7%25B0%25A1%25E4%25BB%258B%25E8%2588%2587%25E5%25AF%25A6%25E4%25BD%259C_-_blog.pptx/file&quot; target=&quot;_blank&quot;&gt;MediaFire&lt;/a&gt;、&lt;a href=&quot;https://www.slideshare.net/pulipulichen/1-introduction-of-weka&quot; target=&quot;_blank&quot;&gt;SlideShare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一份投影片「認識Weka」介紹的內容包括：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Part 1. 認識Weka&lt;/li&gt;
  &lt;li&gt;Part 2. Weka的資料來源&lt;/li&gt;
  &lt;li&gt;Part 3. 準備Weka：下載、安裝與設定&lt;/li&gt;
  &lt;li&gt;Part 4. 認識Weka架構&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-zRLqISkHEzk/XZTneydZ8iI/AAAAAAAEY60/WMsx4ppaP10sqL_DP6GZ-PL5TdNzev9gACK4BGAYYCw/s1600/2019-1003-002314.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-zRLqISkHEzk/XZTneydZ8iI/AAAAAAAEY60/WMsx4ppaP10sqL_DP6GZ-PL5TdNzev9gACK4BGAYYCw/s450/2019-1003-002314.png&quot; title=&quot;2019-1003-002314.png&quot; alt=&quot;2019-1003-002314.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這份投影片主要是給Weka做個簡介之外，還要帶大家安裝本課程會用到的Weka及其四個套件，以及LibreOffice Calc試算表。&lt;/p&gt;
&lt;h3&gt;相關檔案與連結 / Materials and reference&lt;/h3&gt;
&lt;p&gt;「Part 3. 準備Weka：下載、安裝與設定」會用到以下檔案：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-apzpMg-A4Bs/XZTnexUYM-I/AAAAAAAEY6s/4k2gvAQlm3cI1BOaV4OPIYfF3TS0Hb8HQCK4BGAYYCw/s1600/weka_logo.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-apzpMg-A4Bs/XZTnexUYM-I/AAAAAAAEY6s/4k2gvAQlm3cI1BOaV4OPIYfF3TS0Hb8HQCK4BGAYYCw/s131/weka_logo.png&quot; title=&quot;weka_logo.png&quot; alt=&quot;weka_logo.png&quot; width=&quot;131.203&quot; height=&quot;131.203&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://twitter.com/WekaMOOC&quot; target=&quot;_blank&quot;&gt;WekaMOOC&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.waikato.ac.nz/ml/weka/downloading.html&quot; target=&quot;_blank&quot;&gt;Weka軟體下載&lt;/a&gt;：支援Windows、Mac OS、Linux版本。Windows版本請下載includes Oracle&#39;s Java VM的檔案(請注意你的電腦是64 bit還是32 bit)。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.pulipuli.info/2017/06/wekautf8-how-to-process-chinese-data-in.html&quot; target=&quot;_blank&quot;&gt;如何在Weka中顯示中文：調整檔案編碼為UTF8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-LDN0wmcbO0w/XZTnegU-PSI/AAAAAAAEY6Q/FgCHFYRdQAs8Vim1s8Ttlrv3zCHeUJZTQCK4BGAYYCw/s1600/Libre-Office.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-LDN0wmcbO0w/XZTnegU-PSI/AAAAAAAEY6Q/FgCHFYRdQAs8Vim1s8Ttlrv3zCHeUJZTQCK4BGAYYCw/s134/Libre-Office.png&quot; title=&quot;Libre-Office.png&quot; alt=&quot;Libre-Office.png&quot; width=&quot;134.703&quot; height=&quot;134.703&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;http://www.icons101.com/icon/id_77230/setid_2631/Simple_Dock_Apps_Icons_by_Turhothgor/LibreOffice&quot; target=&quot;_blank&quot;&gt;ICONS101&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zh-tw.libreoffice.org/download/libreoffice-fresh/&quot; target=&quot;_blank&quot;&gt;LibreOffice 下載 &lt;/a&gt;：支援Windows、Mac OS、Linux版本。&lt;/li&gt;
  &lt;li&gt;本教學中主要使用的是LibreOffice Calc。更詳細的教學，也可以看看我之前寫過的「&lt;a href=&quot;http://blog.pulipuli.info/search/label/LibreOffice%20Calc%20Course&quot; target=&quot;_blank&quot;&gt;試算表應用實務 LibreOffice Calc&lt;/a&gt;」。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Chapter 2.&amp;nbsp;探索性與比較性分析：分群、異常偵測、關聯規則探勘 /&amp;nbsp;Exploratory and&amp;nbsp;comparison analytics: Clustering, outlier detection, associations&lt;/h2&gt;
&lt;div&gt;
  &lt;iframe src=&quot;https://docs.google.com/presentation/d/e/2PACX-1vSRkUYrTdFN-ojUpc225z20YqOYkISttz_o1qTopaSRkjR9VquNY5oc9QI4eyX8xda3IE0HjTbY2w4t/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; width=&quot;960&quot; height=&quot;749&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vSRkUYrTdFN-ojUpc225z20YqOYkISttz_o1qTopaSRkjR9VquNY5oc9QI4eyX8xda3IE0HjTbY2w4t/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; target=&quot;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot;&gt;Open in new window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:window.open(&#39;https://docs.google.com/presentation/d/e/2PACX-1vSRkUYrTdFN-ojUpc225z20YqOYkISttz_o1qTopaSRkjR9VquNY5oc9QI4eyX8xda3IE0HjTbY2w4t/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;width=800,height=600,toolbar=0,menubar=0,location=0&#39;)&quot;&gt;Open in popup window&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
  &lt;li&gt;Google投影片：&lt;a href=&quot;https://docs.google.com/presentation/d/1w3yfXPq8VChHPf2U1zjNzoC8tb29CKYRRUcDj1HJTaU/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;2：探索性與比較性分析 - Weka簡介與實作 - blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Power Point投影片備份：&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2019/10/2：探索性與比較性分析%20-%20Weka簡介與實作%20-%20blog.pptx&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;、&lt;a href=&quot;https://1drv.ms/p/s!AqkXZ97o-6JrpjGGLUrUmRKpqMhy?e=tBKoaG&quot; target=&quot;_blank&quot;&gt;One Drive&lt;/a&gt;、&lt;a href=&quot;https://mega.nz/#!84IgAYhJ!elm3p9fHzXfYEGUDnJqQC3hw8TJeYiBNdnq_uAvNRFs&quot; target=&quot;_blank&quot;&gt;Mega&lt;/a&gt;、&lt;a href=&quot;https://app.box.com/s/2cqu6bgqedzn3iwbmfg4dz2is6xl6lnp&quot; target=&quot;_blank&quot;&gt;Box&lt;/a&gt;、&lt;a href=&quot;http://www.mediafire.com/file/vwuqzecsmh0q59p/2%25EF%25BC%259A%25E6%258E%25A2%25E7%25B4%25A2%25E6%2580%25A7%25E8%2588%2587%25E6%25AF%2594%25E8%25BC%2583%25E6%2580%25A7%25E5%2588%2586%25E6%259E%2590_-_Weka%25E7%25B0%25A1%25E4%25BB%258B%25E8%2588%2587%25E5%25AF%25A6%25E4%25BD%259C_-_blog.pptx/file&quot; target=&quot;_blank&quot;&gt;MediaFire&lt;/a&gt;、&lt;a href=&quot;https://www.slideshare.net/pulipulichen/2-clustering-and-association-rule-mining&quot; target=&quot;_blank&quot;&gt;SlideShare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二份投影片「探索性與比較性分析」介紹的內容包括：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Part 5. 探索性分析：分群&lt;br&gt;&lt;/li&gt;
  &lt;li&gt;Part 6. 探索性分析：異常偵測&lt;/li&gt;
  &lt;li&gt;Part 7. 比較性分析：關聯規則探勘&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;從這份投影片開始，我們就要開始實際操作Weka進行資料探勘的任務。我在介紹的時候會先講一下問題的情境，再來簡單地介紹資料探勘技術的演算法和原理，然後再實際操作Weka完成資料探勘的任務。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-w8noDezda3E/XZTne_OjjEI/AAAAAAAEY6g/tLo75R5yWiAJdISZfuKgP1UFZ0MRftunwCK4BGAYYCw/s1600/2019-1003-002757-LOF-LOF-LOF-LOF.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-w8noDezda3E/XZTne_OjjEI/AAAAAAAEY6g/tLo75R5yWiAJdISZfuKgP1UFZ0MRftunwCK4BGAYYCw/s450/2019-1003-002757-LOF-LOF-LOF-LOF.png&quot; title=&quot;2019-1003-002757-LOF-LOF-LOF-LOF.png&quot; alt=&quot;2019-1003-002757-LOF-LOF-LOF-LOF.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;值得一提的是，我在這次教學中加入了「異常偵測」這個主題，採用技術為區域異數因素(Local Outlier Factor, LOF)。LOF分析可以在多維度資料中偵測異常值，是相當泛用的分析技術。雖然以往資料探勘教學中較少對異常偵測有所著墨，不過其實在實務資料分析中，用異常偵測找出資料的離異值是非常有意義的作法。有時候，刪除離異值可以確保模型收斂，它可以用於各種資料探勘的前處理；有時候，找出學生中最與眾不同的人，可以幫助我們深入進行個案研究。透過Weka的localOutlierFactor套件，可以讓我們很容易就能完成異常偵測的分析任務，誠心推薦給資料分析的各位。&lt;/p&gt;
&lt;h3&gt;相關檔案與連結 / Materials and reference&lt;/h3&gt;
&lt;p&gt;在「Part 5. 探索性分析：分群」中，我們將會用到以下檔案和連結：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;//3.bp.blogspot.com/-p3-XKvmfjJY/XZTnkWszwOI/AAAAAAAEY7I/aB22rc4zM8o35s9_tM1xW8x3RDtTHshuACK4BGAYYCw/s1600/2019-1003-005523.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-p3-XKvmfjJY/XZTnkWszwOI/AAAAAAAEY7I/aB22rc4zM8o35s9_tM1xW8x3RDtTHshuACK4BGAYYCw/s24/2019-1003-005523.png&quot; title=&quot;2019-1003-005523.png&quot; alt=&quot;2019-1003-005523.png&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Gs71wu3cY8fZtoZJbQpp2aDTgNcGc3b36AlBBnxzj_8/export?format=ods&quot; target=&quot;_blank&quot;&gt;stu-sch-1 - train.ods&lt;/a&gt; (&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Gs71wu3cY8fZtoZJbQpp2aDTgNcGc3b36AlBBnxzj_8/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;線上檢視&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;//4.bp.blogspot.com/-1RU5sxuBSK8/XZTnkB4xBRI/AAAAAAAEY7A/Ulcbfzb7N8ASc0rPFdTaDZwt4RW1oMi0QCK4BGAYYCw/s1600/2019-1003-005556.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-1RU5sxuBSK8/XZTnkB4xBRI/AAAAAAAEY7A/Ulcbfzb7N8ASc0rPFdTaDZwt4RW1oMi0QCK4BGAYYCw/s25/2019-1003-005556.png&quot; title=&quot;2019-1003-005556.png&quot; alt=&quot;2019-1003-005556.png&quot;&gt;
    &lt;/a&gt;&lt;a href=&quot;https://pulipulichen.github.io/Weka-Cluster-Result-Analyzer/&quot; target=&quot;_blank&quot;&gt;Weka分群結果分析器&lt;/a&gt; (&lt;a href=&quot;https://github.com/pulipulichen/Weka-Cluster-Result-Analyzer&quot; target=&quot;_blank&quot;&gt;GitHub保存庫&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在「Part 6. 探索性分析：異常偵測」中，我們將會用到以下檔案：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;//3.bp.blogspot.com/-p3-XKvmfjJY/XZTnkWszwOI/AAAAAAAEY7I/aB22rc4zM8o35s9_tM1xW8x3RDtTHshuACK4BGAYYCw/s1600/2019-1003-005523.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-p3-XKvmfjJY/XZTnkWszwOI/AAAAAAAEY7I/aB22rc4zM8o35s9_tM1xW8x3RDtTHshuACK4BGAYYCw/s24/2019-1003-005523.png&quot; title=&quot;2019-1003-005523.png&quot; alt=&quot;2019-1003-005523.png&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Gs71wu3cY8fZtoZJbQpp2aDTgNcGc3b36AlBBnxzj_8/export?format=ods&quot; target=&quot;_blank&quot;&gt;stu-sch-1 - train.ods&lt;/a&gt;&amp;nbsp;(&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Gs71wu3cY8fZtoZJbQpp2aDTgNcGc3b36AlBBnxzj_8/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;線上檢視&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在「Part 7. 比較性分析：關聯規則探勘」中，我們將會用到以下檔案：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;//3.bp.blogspot.com/-p3-XKvmfjJY/XZTnkWszwOI/AAAAAAAEY7I/aB22rc4zM8o35s9_tM1xW8x3RDtTHshuACK4BGAYYCw/s1600/2019-1003-005523.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-p3-XKvmfjJY/XZTnkWszwOI/AAAAAAAEY7I/aB22rc4zM8o35s9_tM1xW8x3RDtTHshuACK4BGAYYCw/s24/2019-1003-005523.png&quot; title=&quot;2019-1003-005523.png&quot; alt=&quot;2019-1003-005523.png&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Gs71wu3cY8fZtoZJbQpp2aDTgNcGc3b36AlBBnxzj_8/export?format=ods&quot; target=&quot;_blank&quot;&gt;stu-sch-1 - train.ods&lt;/a&gt;&amp;nbsp;(&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Gs71wu3cY8fZtoZJbQpp2aDTgNcGc3b36AlBBnxzj_8/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;線上檢視&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其實這三個部分用到的檔案&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Gs71wu3cY8fZtoZJbQpp2aDTgNcGc3b36AlBBnxzj_8/export?format=ods&quot; target=&quot;_blank&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;stu-sch-1 - train.ods&lt;/a&gt;都是一樣的喔。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Chapter 3. 預測性分析：分類與迴歸 / Predictive analytics: Classification and regression&lt;/h2&gt;
&lt;div&gt;
  &lt;iframe src=&quot;https://docs.google.com/presentation/d/e/2PACX-1vQoU8fbNlf4wE1Z7FOMCTY0tC65KGmyQh6lH9-9ANBx8QmdDMhzjNJjeQ9Oow5MXEjpG8DXD3sFbRJV/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; width=&quot;960&quot; height=&quot;749&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vQoU8fbNlf4wE1Z7FOMCTY0tC65KGmyQh6lH9-9ANBx8QmdDMhzjNJjeQ9Oow5MXEjpG8DXD3sFbRJV/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; target=&quot;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot;&gt;Open in new window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:window.open(&#39;https://docs.google.com/presentation/d/e/2PACX-1vQoU8fbNlf4wE1Z7FOMCTY0tC65KGmyQh6lH9-9ANBx8QmdDMhzjNJjeQ9Oow5MXEjpG8DXD3sFbRJV/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;width=800,height=600,toolbar=0,menubar=0,location=0&#39;)&quot;&gt;Open in popup window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Google投影片：&lt;a href=&quot;https://docs.google.com/presentation/d/1wHkfobQmGOJ-C0h1TMcW1Kp4umNwiJ_ZHdgJIMYaPB8/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;3：預測性分析 - Weka簡介與實作 - blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Power Point投影片備份：&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2019/10/3：預測性分析：分類%20-%20Weka簡介與實作%20-%20blog.pptx&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;、&lt;a href=&quot;https://1drv.ms/p/s!AqkXZ97o-6JrpjLHeMv8FROYaimz?e=hd7yZx&quot; target=&quot;_blank&quot;&gt;One Drive&lt;/a&gt;、&lt;a href=&quot;https://mega.nz/#!Z5AEFQ7Y!QpH2k3ZBz5WhhvUElGbp0mApi9jcrrP0H3rUwg34hZc&quot; target=&quot;_blank&quot;&gt;Mega&lt;/a&gt;、&lt;a href=&quot;https://app.box.com/s/wl2fcweupseizoxkfmrywk1u6ova8r5w&quot; target=&quot;_blank&quot;&gt;Box&lt;/a&gt;、&lt;a href=&quot;http://www.mediafire.com/file/166tij3u2p1pcr7/3%25EF%25BC%259A%25E9%25A0%2590%25E6%25B8%25AC%25E6%2580%25A7%25E5%2588%2586%25E6%259E%2590%25EF%25BC%259A%25E5%2588%2586%25E9%25A1%259E_-_Weka%25E7%25B0%25A1%25E4%25BB%258B%25E8%2588%2587%25E5%25AF%25A6%25E4%25BD%259C_-_blog.pptx/file&quot; target=&quot;_blank&quot;&gt;MediaFire&lt;/a&gt;、&lt;a href=&quot;https://www.slideshare.net/pulipulichen/3-classification-and-regression&quot; target=&quot;_blank&quot;&gt;SlideShare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第三份投影片「預測性分析」介紹的內容包括：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;Part 8. 預測性分析：分類&lt;/li&gt;
  &lt;li&gt;Part 9. 預測性分析：迴歸&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-jlIit7-mYNY/XZTnkW749-I/AAAAAAAEY7Q/WEauUW5WEIIJisXoMtDox0yUuMp8k9MIwCK4BGAYYCw/s1600/2019-1003-004744-AI-VE-AL.png&quot;&gt;
    &lt;img src=&quot;//4.bp.blogspot.com/-jlIit7-mYNY/XZTnkW749-I/AAAAAAAEY7Q/WEauUW5WEIIJisXoMtDox0yUuMp8k9MIwCK4BGAYYCw/s450/2019-1003-004744-AI-VE-AL.png&quot; title=&quot;2019-1003-004744-AI-VE-AL.png&quot; alt=&quot;2019-1003-004744-AI-VE-AL.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;雖然看起來只有分類和迴歸兩個主題，不過投影片就有103張了呢。現在提到資料探勘、機器學習，大部分的焦點都落在這個「預測性分析」上。我們往往會希望用歷史股價變動來預測股票的漲跌，我們希望用學生表現的已知行為來預測期末表現，這些都是預測性分析所要處理的問題。而預測性分析中分類和迴歸這兩個技術的主要差別，在於分類要預測的是「類別」，例如「男」或「女」、「合格」或「不合格」；而迴歸則是預測連續數值，例如「分數成績」、「股價」。&lt;/p&gt;
&lt;p&gt;由於Python的盛行，現在許多人都是從Python程式語言學習迴歸。但其實要做迴歸這種預測性分析並不用這麼麻煩，試算表搭配Weka就能做得出來囉。&lt;/p&gt;
&lt;h3&gt;相關檔案與連結 / Materials and reference&lt;/h3&gt;
&lt;p&gt;在「Part 8. 預測性分析：分類」中，我們會用到的教材有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;//3.bp.blogspot.com/-p3-XKvmfjJY/XZTnkWszwOI/AAAAAAAEY7I/aB22rc4zM8o35s9_tM1xW8x3RDtTHshuACK4BGAYYCw/s1600/2019-1003-005523.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-p3-XKvmfjJY/XZTnkWszwOI/AAAAAAAEY7I/aB22rc4zM8o35s9_tM1xW8x3RDtTHshuACK4BGAYYCw/s24/2019-1003-005523.png&quot; title=&quot;2019-1003-005523.png&quot; alt=&quot;2019-1003-005523.png&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Gs71wu3cY8fZtoZJbQpp2aDTgNcGc3b36AlBBnxzj_8/export?format=ods&quot; target=&quot;_blank&quot;&gt;stu-sch-1 - train.ods&lt;/a&gt; (&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Gs71wu3cY8fZtoZJbQpp2aDTgNcGc3b36AlBBnxzj_8/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;線上檢視&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;//2.bp.blogspot.com/-bLB0IeO-tzo/XZTnnWf-PtI/AAAAAAAEY7k/27Ybbqz8GNEDE5yGnatbSlHOACnMUOLDwCK4BGAYYCw/s1600/2019-1003-005435.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-bLB0IeO-tzo/XZTnnWf-PtI/AAAAAAAEY7k/27Ybbqz8GNEDE5yGnatbSlHOACnMUOLDwCK4BGAYYCw/s31/2019-1003-005435.png&quot; title=&quot;2019-1003-005435.png&quot; alt=&quot;2019-1003-005435.png&quot; width=&quot;31&quot; height=&quot;30&quot;&gt;
    &lt;/a&gt;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1kk7Lqygl7DV3BJ7NEKhuUDg2R0joT9cZpkqo02cxeSA/export?format=ods&quot; target=&quot;_blank&quot;&gt;stu-sch-2 - test.ods&lt;/a&gt; (&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1kk7Lqygl7DV3BJ7NEKhuUDg2R0joT9cZpkqo02cxeSA/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;線上檢視&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;//4.bp.blogspot.com/-Ct3_WVAj8KI/XZTnnWNUJBI/AAAAAAAEY7s/ppBjHhxZ3UUbObOJg_lbgEMkzviZLpc3QCK4BGAYYCw/s1600/2019-1003-005617.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//4.bp.blogspot.com/-Ct3_WVAj8KI/XZTnnWNUJBI/AAAAAAAEY7s/ppBjHhxZ3UUbObOJg_lbgEMkzviZLpc3QCK4BGAYYCw/s24/2019-1003-005617.png&quot; title=&quot;2019-1003-005617.png&quot; alt=&quot;2019-1003-005617.png&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1cAuUC2zvw8s6aEI-WKjAEQZxDZCVDG6j3dFDSQOpla4/export?format=ods&quot; target=&quot;_blank&quot;&gt;stu-sch-3 - unknown.ods&lt;/a&gt; (&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1cAuUC2zvw8s6aEI-WKjAEQZxDZCVDG6j3dFDSQOpla4/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;線上檢視&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在「Part 9. 預測性分析：迴歸」中，我們會用到的教材有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;//3.bp.blogspot.com/-p3-XKvmfjJY/XZTnkWszwOI/AAAAAAAEY7I/aB22rc4zM8o35s9_tM1xW8x3RDtTHshuACK4BGAYYCw/s1600/2019-1003-005523.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-p3-XKvmfjJY/XZTnkWszwOI/AAAAAAAEY7I/aB22rc4zM8o35s9_tM1xW8x3RDtTHshuACK4BGAYYCw/s24/2019-1003-005523.png&quot; title=&quot;2019-1003-005523.png&quot; alt=&quot;2019-1003-005523.png&quot;&gt;
    &lt;/a&gt;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1CE7RzVyTgyfHnK4zYou6h5J0tiQjzpbdIGsKbFEvzkI/export?format=ods&quot; target=&quot;_blank&quot;&gt;stu-sch,gra-1 - train.ods&lt;/a&gt; (&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1CE7RzVyTgyfHnK4zYou6h5J0tiQjzpbdIGsKbFEvzkI/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;線上檢視&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;//2.bp.blogspot.com/-bLB0IeO-tzo/XZTnnWf-PtI/AAAAAAAEY7k/27Ybbqz8GNEDE5yGnatbSlHOACnMUOLDwCK4BGAYYCw/s1600/2019-1003-005435.png&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//2.bp.blogspot.com/-bLB0IeO-tzo/XZTnnWf-PtI/AAAAAAAEY7k/27Ybbqz8GNEDE5yGnatbSlHOACnMUOLDwCK4BGAYYCw/s31/2019-1003-005435.png&quot; title=&quot;2019-1003-005435.png&quot; alt=&quot;2019-1003-005435.png&quot; width=&quot;31&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1z_BKXVd2FXZEzhA_Z2OKvYchUuRyl_fOxIbZDdK8uLo/export?format=ods&quot; target=&quot;_blank&quot;&gt;stu-sch,gra-2 - test.ods&lt;/a&gt; (&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1z_BKXVd2FXZEzhA_Z2OKvYchUuRyl_fOxIbZDdK8uLo/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;線上檢視&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;//4.bp.blogspot.com/-Ct3_WVAj8KI/XZTnnWNUJBI/AAAAAAAEY7s/ppBjHhxZ3UUbObOJg_lbgEMkzviZLpc3QCK4BGAYYCw/s1600/2019-1003-005617.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-Ct3_WVAj8KI/XZTnnWNUJBI/AAAAAAAEY7s/ppBjHhxZ3UUbObOJg_lbgEMkzviZLpc3QCK4BGAYYCw/s24/2019-1003-005617.png&quot; title=&quot;2019-1003-005617.png&quot; alt=&quot;2019-1003-005617.png&quot;&gt;
    &lt;/a&gt;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1ZC68uayX6SzKeWBF_FVn5042H2gQGwUt0Kd5FUE5I9Y/export?format=ods&quot; target=&quot;_blank&quot;&gt;stu-sch,gra-3 - unknown.ods&lt;/a&gt; (&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1ZC68uayX6SzKeWBF_FVn5042H2gQGwUt0Kd5FUE5I9Y/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;線上檢視&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;此外，還有補充教材：&lt;a href=&quot;http://blog.pulipuli.info/2017/06/spss-interpreting-multiple-regression.html&quot; target=&quot;_blank&quot;&gt;如何判斷哪個屬性對成績影響最大？以SPSS實作解釋型多元迴歸&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這兩組教材檔案名稱看起來很像，但資料內容並不一樣喔，請仔細查看檔案名稱，不要搞混了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Chapter 4.&amp;nbsp;進階應用與結語 / Applications and wrap up
&lt;/h2&gt;
&lt;div&gt;
  &lt;iframe src=&quot;https://docs.google.com/presentation/d/e/2PACX-1vSW5zu5-TU3XQSAx_E-Xd1pNA171_2_7LziWnsbr4L2IzQAOlpsQOVYzwJct7fd9d3-d6aH_vv_YjTr/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; width=&quot;960&quot; height=&quot;749&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vSW5zu5-TU3XQSAx_E-Xd1pNA171_2_7LziWnsbr4L2IzQAOlpsQOVYzwJct7fd9d3-d6aH_vv_YjTr/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; target=&quot;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot;&gt;Open in new window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:window.open(&#39;https://docs.google.com/presentation/d/e/2PACX-1vSW5zu5-TU3XQSAx_E-Xd1pNA171_2_7LziWnsbr4L2IzQAOlpsQOVYzwJct7fd9d3-d6aH_vv_YjTr/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;width=800,height=600,toolbar=0,menubar=0,location=0&#39;)&quot;&gt;Open in popup window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Google投影片：&lt;a href=&quot;https://docs.google.com/presentation/d/1yBK72R9T8PBeMgpMtZeqpzvE0F_6GCwLLMdJyXwv2x0/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;4：進階應用與結語 - Weka簡介與實作 - blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Power Point投影片備份：&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2019/10/4：進階應用與結語%20-%20Weka簡介與實作%20-%20blog.pptx&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;、&lt;a href=&quot;https://1drv.ms/p/s!AqkXZ97o-6JrpjO_YZH5T9j9QZHd?e=VqShH6&quot; target=&quot;_blank&quot;&gt;One Drive&lt;/a&gt;、&lt;a href=&quot;https://mega.nz/#!RxZCnCAK!D_LHMvAxqy-fnRV5litY5eXTE9gtzYlY9QyH5e-JZ6k&quot; target=&quot;_blank&quot;&gt;Mega&lt;/a&gt;、&lt;a href=&quot;https://app.box.com/s/iocsde45k9n34vht9kjqirrn1b63ftb3&quot; target=&quot;_blank&quot;&gt;Box&lt;/a&gt;、&lt;a href=&quot;http://www.mediafire.com/file/7md8k2opakyoq7x/4%25EF%25BC%259A%25E9%2580%25B2%25E9%259A%258E%25E6%2587%2589%25E7%2594%25A8%25E8%2588%2587%25E7%25B5%2590%25E8%25AA%259E_-_Weka%25E7%25B0%25A1%25E4%25BB%258B%25E8%2588%2587%25E5%25AF%25A6%25E4%25BD%259C_-_blog.pptx/file&quot; target=&quot;_blank&quot;&gt;MediaFire&lt;/a&gt;、&lt;a href=&quot;https://www.slideshare.net/pulipulichen/4-applications&quot; target=&quot;_blank&quot;&gt;SlideShare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第四份投影片「進階應用與結語」介紹的內容包括：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Part 10. Weka的進階應用&lt;/li&gt;
  &lt;li&gt;Part 11. 結語&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;介紹完Weka的基本應用，第四部分就帶大家看看Weka還可以做的其他分析。這邊大部分都是我寫過介紹的內容，包括&lt;a href=&quot;http://blog.pulipuli.info/2017/06/wekamnist-mnist-digits-classification.html&quot; target=&quot;_blank&quot;&gt;圖片分類&lt;/a&gt;、&lt;a href=&quot;http://blog.pulipuli.info/2017/10/text-classification-with-weka.html&quot; target=&quot;_blank&quot;&gt;文本分類&lt;/a&gt;、&lt;a href=&quot;http://blog.pulipuli.info/2017/10/behavior-prediction-dynamic-bayesian.html&quot; target=&quot;_blank&quot;&gt;行為序列預測&lt;/a&gt;、&lt;a href=&quot;http://blog.pulipuli.info/2017/09/aiweka-time-series-forecasting-with-weka.html&quot; target=&quot;_blank&quot;&gt;時間序列預測&lt;/a&gt;等等。其實Weka的可能性，比課本上介紹的還要多很多呢。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-DqyHp0fS7Ds/XZTnnre4b2I/AAAAAAAEY7w/6BOMV1HeX4ILkvgQSCJxvDMBvmEY7MdXACK4BGAYYCw/s1600/2019-1003-010314-Al-literacy-AI-Fr-HT-ora-No-Ia-AI.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-DqyHp0fS7Ds/XZTnnre4b2I/AAAAAAAEY7w/6BOMV1HeX4ILkvgQSCJxvDMBvmEY7MdXACK4BGAYYCw/s450/2019-1003-010314-Al-literacy-AI-Fr-HT-ora-No-Ia-AI.png&quot; title=&quot;2019-1003-010314-Al-literacy-AI-Fr-HT-ora-No-Ia-AI.png&quot; alt=&quot;2019-1003-010314-Al-literacy-AI-Fr-HT-ora-No-Ia-AI.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;課程到了最後，我們瞭解了很多資料探勘的分析技術。現在資料探勘中的預測性分析，大多被包裝成AI人工智慧，似乎已經廣為人知。有人對AI盲目推崇、認為大數據、巨量資料就是未來；有人對AI表示恐懼，認為AI將會搶走他們的工作。但就目前AI的進展來看，它終究只是一種分析歷史資料、然後將分析結果直接應用的一種分析技術。而這個技術要簡單也沒那麼難，這堂課的Weka就做得了。&lt;/p&gt;
&lt;p&gt;因此，我希望藉由這堂課來培育大家的AI素養 (AI literacy)。那就是我們必須要對AI保持正確的認知態度，學習思考什麼時候可以用AI、什麼時候不能用AI。希望這堂課介紹的Weka能夠讓大家更容易駕馭AI，而不是讓AI停留在盲目崇拜或恐懼的層次。&lt;/p&gt;
&lt;h3&gt;相關連結 / Reference&lt;/h3&gt;
&lt;p&gt;在「Part 10. Weka的進階應用」中，我所提到的相關文章連結如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;圖片分類：&lt;a href=&quot;http://blog.pulipuli.info/2017/06/wekamnist-mnist-digits-classification.html&quot; target=&quot;_blank&quot;&gt;不深度學習也不用寫程式的圖片辨識：用Weka實作MNIST手寫數字辨識&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;文本探勘：&lt;a href=&quot;http://blog.pulipuli.info/2017/10/text-classification-with-weka.html&quot; target=&quot;_blank&quot;&gt;超簡單！文本機器分類入門&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;行為預測：&lt;a href=&quot;http://blog.pulipuli.info/2017/10/behavior-prediction-dynamic-bayesian.html&quot; target=&quot;_blank&quot;&gt;行為順序預測：動態貝氏網路&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;時間序列預測：&lt;a href=&quot;http://blog.pulipuli.info/2017/09/aiweka-time-series-forecasting-with-weka.html&quot; target=&quot;_blank&quot;&gt;用Weka實作多變項時間序列預測&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;指令列整合：&lt;a href=&quot;http://blog.pulipuli.info/2017/06/weka-making-predictions-with-weka-in.html&quot; target=&quot;_blank&quot;&gt;使用Weka指令列實作預測功能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;當然，其實還有更多相關文章都在我這個Blog：「&lt;a href=&quot;http://blog.pulipuli.info&quot; target=&quot;_blank&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;」，歡迎有興趣的人進來挖寶囉。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-_TdrBGNUlJk/XZTnqQNuzTI/AAAAAAAEY8I/_YzIoT7eV1c3nSaDAx3-NnRPZb5xnuk_wCK4BGAYYCw/s1600/2019-1003-011512-ah.png&quot;&gt;
    &lt;img src=&quot;//2.bp.blogspot.com/-_TdrBGNUlJk/XZTnqQNuzTI/AAAAAAAEY8I/_YzIoT7eV1c3nSaDAx3-NnRPZb5xnuk_wCK4BGAYYCw/s450/2019-1003-011512-ah.png&quot; title=&quot;2019-1003-011512-ah.png&quot; alt=&quot;2019-1003-011512-ah.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這篇我在研習班講授的「Weka簡介與實作」終於整理完了。&lt;/p&gt;
&lt;p&gt;雖然作為一位常常介紹Weka的人這樣講很奇怪，但被找去講這個主題時，我第一個反應是：「怎麽過了這麼多年了還在講Weka」。&lt;/p&gt;
&lt;p&gt;Weka是以Java開發的應用程式，不僅系統介面不符合當代應用程式的設計，實際上它的操作也相當繁瑣。許多人抱持著「不用寫程式就可以做資料探勘耶！」的期待接觸Weka，不過實際上能不能掌握Weka，或著說，掌握資料分析，最終是要看使用者具不具備資料分析的思維。瞭解資料、知道自己要分析什麼的人，不論是Weka還是Python，他都能有足夠的熱情和動力掌握這些分析工具，並且更進一步的往他的分析目標邁進。&lt;/p&gt;
&lt;h3&gt;Weka的小小優點 / Strengths of Weka&amp;nbsp;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-0FMYFXbM8vs/XZTnqRdRBCI/AAAAAAAEY8E/u7-QlUAR3ucFOHAMWLtJonxfJuV-e5qegCK4BGAYYCw/s1600/2019-1003-012442-WWelca-vs-Weka-BE.png&quot;&gt;
    &lt;img src=&quot;//1.bp.blogspot.com/-0FMYFXbM8vs/XZTnqRdRBCI/AAAAAAAEY8E/u7-QlUAR3ucFOHAMWLtJonxfJuV-e5qegCK4BGAYYCw/s450/2019-1003-012442-WWelca-vs-Weka-BE.png&quot; title=&quot;2019-1003-012442-WWelca-vs-Weka-BE.png&quot; alt=&quot;2019-1003-012442-WWelca-vs-Weka-BE.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;話說回來，也許一些只用Python等程式語言的人可能對Weka這種圖形化使用者介面嗤之以鼻，不過我得說Weka在很多小地方其實做得很好。因為這些優點實在是太小了，如果對資料分析不熟悉的人可能看不懂這些詞彙的意義，所以底下這三個特色我是說給進階者看得：&lt;/p&gt;
&lt;p&gt;第一個特色是缺漏值補齊，如果你沒有做特別的設定，Weka會自動採用眾數或中位數補齊缺漏值。而這件事情若用程式語言來做，其實相當費工。此外，若是在SPSS分析裡面，有缺漏值的資料大多時候都會直接被整個刪除捨棄不用。&lt;/p&gt;
&lt;p&gt;Weka另一個貼心的特色是虛擬變項的轉換。面對只能接受連續數值類型資料的演算法，Weka會自動將類別變項轉換成虛擬變項，使用者仍然可以用自己最習慣的類別變項來填寫資料即可。這個例子最常發生在SPSS使用者身上，例如「&lt;a href=&quot;https://dasanlin888.pixnet.net/blog/post/34469150&quot; target=&quot;_blank&quot;&gt;迴歸分析使用虛擬變項的注意事項&lt;/a&gt;」這篇。SPSS分析幾乎都必須是以連續變項進行，包括類別資料的卡方檢定也是，所以很多SPSS使用者被迫要以數字為資料編碼，例如將「男性」編碼為1、「女性」編碼為2。如果用程式語言來開發，將類別編碼轉換成虛擬變項也是一件必須要執行的重要處理，略過這個步驟的話，大部分演算法都無法執行。不過在Weka裡面，他會默默的自動幫你處理好，非常偉大。&lt;/p&gt;
&lt;p&gt;第三件特色是變項的正規化。許多資料探勘演算法都必須計算資料的相似度，特別是分群。對具有多維變項的資料計算相似度時，因為各個維度的資料單位不相同，它們的全距也都不相同。如果直接忽略單位，單以數值計算相似度時，全距較大的維度屬性會對相似度有極大的影響。為了克服這個問題，比較好的做法是要對各個維度進行正規化或標準化，去除單位，這樣是比較合理的做法。如果用程式語言來做，各個維度的正規化和標準化手續其實挺麻煩的。不過在Weka中，大多數演算法預設都會自動進行正規化或標準化。當然，你也可以開啟進階設定把它關掉就是了。&lt;/p&gt;
&lt;h3&gt;閒聊 / Talk&lt;/h3&gt;
&lt;p&gt;好啦，寫到這裡，這篇也差不多要告一個段落了。其實這篇應該要更早完成的，但是課程教完之後，我遭遇了電腦整個掛掉的窘境。要知道對一個各種工作都仰賴電腦的我來說，電腦壞掉這件事情對我造成相當大的打擊。然後在重灌電腦的期間，也花了點時間開發了一些小工具，詳情請看「&lt;a href=&quot;http://blog.pulipuli.info/2019/09/autoitelectron-diy-tools-from-autoit-to.html&quot; target=&quot;_blank&quot;&gt;工具開發閒聊：從AutoIT到Electron&lt;/a&gt;」這篇。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-ctcBob0j3Z8/XZTnqBXZm8I/AAAAAAAEY78/DHiFunJCDzwCwm-t67snCEDdr8Fv5o59QCK4BGAYYCw/s1600/2019-1003-014518.png&quot;&gt;&lt;img src=&quot;//4.bp.blogspot.com/-ctcBob0j3Z8/XZTnqBXZm8I/AAAAAAAEY78/DHiFunJCDzwCwm-t67snCEDdr8Fv5o59QCK4BGAYYCw/s450/2019-1003-014518.png&quot; title=&quot;2019-1003-014518.png&quot; alt=&quot;2019-1003-014518.png&quot; width=&quot;450&quot; height=&quot;381&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近我比較有在寫blog，就是電腦逐漸上軌道的表現。「布丁布丁吃什麼？」blog的網站功能有許多壞掉的地方，最近也總算能夠把它修復了。有一臺好用的電腦，對我來說還是相當重要啊。&lt;/p&gt;
&lt;p&gt;電腦修好後，總算能夠繼續我論文系統的研究了。前幾篇提到的&lt;a href=&quot;http://blog.pulipuli.info/2019/09/svelte-preliminary-study-of-svelte.html&quot; target=&quot;_blank&quot;&gt;Svelte&lt;/a&gt;就是我在研究中的產物，可惜人氣好像不太高的樣子。在&lt;a href=&quot;http://blog.pulipuli.info/2019/09/autoitelectron-diy-tools-from-autoit-to.html#postcataautoitelectron-diy-tools-from-autoit-to.html0_anchor17&quot; target=&quot;_blank&quot;&gt;這篇&lt;/a&gt;中我也提到我正在摸索&lt;a href=&quot;https://feathersjs.com/&quot; target=&quot;_blank&quot;&gt;FeathersJS&lt;/a&gt;，轉念採用另一個想法後，似乎更能掌握它了。我會繼續這樣子，一邊研究、一邊把它整理下來做記錄，努力完成我的論文吧。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次對Weka的教學就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;你用過Weka或其他的資料探勘工具嗎？&lt;br&gt;&lt;/li&gt;
  &lt;li&gt;你用資料探勘或機器學習通常是在分析什麼樣的問題呢？&lt;/li&gt;
  &lt;li&gt;對於資料探勘的教學，你比較著重在什麼部分呢？理論、演算法、應用情境、實機操作、資料分析講解？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/8067981384724380496/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/10/weka-practice-data-mining-with-weka.html#comment-form' title='24 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/8067981384724380496'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/8067981384724380496'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/10/weka-practice-data-mining-with-weka.html' title='Weka簡介與實作：資料探勘的分群、異常偵測、關聯規則探勘、分類 / Practice Data Mining with Weka: Clustering, Outlier Detection, Associations and Classification'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//1.bp.blogspot.com/-aPhRlMnd5tA/XZTnfhJccTI/AAAAAAAEY64/Ht78qAKg2iAg9x8A-B8WNSUaZS3jIVKHgCK4BGAYYCw/s72-c/11-Weka_Practice_Data_Mining_with_Weka.png" height="72" width="72"/><thr:total>24</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-331429868822941321</id><published>2019-10-02T20:28:00.001+08:00</published><updated>2019-10-02T20:30:16.703+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="KALS"/><category scheme="http://www.blogger.com/atom/ns#" term="Presentation"/><title type='text'>數位學習平臺介紹：KALS和PBL / Introducing to Online Learning Environments: KALS and PBL</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-yssTQWrjsPg/XZSXyTznuwI/AAAAAAAEY5g/D9MIVxFA1pwONlnSpPmELYe3_IEw4Rv5ACK4BGAYYCw/s1600/10-KALS_PBL_IDSR_Introducing_to_KALS.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-yssTQWrjsPg/XZSXyTznuwI/AAAAAAAEY5g/D9MIVxFA1pwONlnSpPmELYe3_IEw4Rv5ACK4BGAYYCw/s1600/10-KALS_PBL_IDSR_Introducing_to_KALS.png&quot; title=&quot;10-KALS_PBL_IDSR_Introducing_to_KALS.png&quot; alt=&quot;10-KALS_PBL_IDSR_Introducing_to_KALS.png&quot; class=&quot;original-size&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大家晚安，這裡是平安渡過颱風、但是學業上不太平安的布丁。&lt;/p&gt;
&lt;p&gt;在2018年的一個工作坊中，我跟實驗室的同事們用英文做了閱讀知識合作標註學習系統KALS (Knowledge-based Annotation&amp;nbsp;Learning System)以及問題導向學習環境PBL (Problem-based Learning)的介紹投影片。這篇文章是將這兩個投影片記錄一下，供有需要的人取用。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2&gt;閱讀知識合作標註學習系統 KALS / KALS:&amp;nbsp;Knowledge-based Annotation Learning System&lt;/h2&gt;
&lt;div&gt;
  &lt;iframe src=&quot;https://docs.google.com/presentation/d/e/2PACX-1vTkJPhjA6TOzjfR5I924ynljHOTU3WzYpklTeizKbaNGurs7UVkCt5T7fK4ISlbRPwpgc1mltfGg0x7/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; width=&quot;960&quot; height=&quot;749&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vTkJPhjA6TOzjfR5I924ynljHOTU3WzYpklTeizKbaNGurs7UVkCt5T7fK4ISlbRPwpgc1mltfGg0x7/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; target=&quot;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot;&gt;Open in new window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:window.open(&#39;https://docs.google.com/presentation/d/e/2PACX-1vTkJPhjA6TOzjfR5I924ynljHOTU3WzYpklTeizKbaNGurs7UVkCt5T7fK4ISlbRPwpgc1mltfGg0x7/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;width=800,height=600,toolbar=0,menubar=0,location=0&#39;)&quot;&gt;Open in popup window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1WgxrS7CkKjpTiNjypDwMJc2iqo2XsLuukR0_hosCwa8/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;Google Drive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;以Power Point格式備份：&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2019/10/20180518%20KALS.pptx&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;、&lt;a href=&quot;https://1drv.ms/p/s!AqkXZ97o-6Jrpi7V6PQlrRAj_dT6?e=LNFjbo&quot; target=&quot;_blank&quot;&gt;One Drive&lt;/a&gt;、&lt;a href=&quot;https://mega.nz/#!tpZWAS4A!j4ZMGJkn38CNsMM-g28AnoGJLbBodScdc_a-0Y1g1yQ&quot; target=&quot;_blank&quot;&gt;Mega&lt;/a&gt;、&lt;a href=&quot;https://app.box.com/s/vkwznsznb7owmm3woyj7jc2hc47cfxlt&quot; target=&quot;_blank&quot;&gt;Box&lt;/a&gt;、&lt;a href=&quot;http://www.mediafire.com/file/cyn7b624wymvaub/20180518_KALS.pptx/file&quot; target=&quot;_blank&quot;&gt;MediaFire&lt;/a&gt;、&lt;a href=&quot;https://www.slideshare.net/pulipulichen/20180518-kals&quot; target=&quot;_blank&quot;&gt;SlideShare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這份投影片介紹了KALS的三個主要功能：閱讀支援、合作學習、行為分析。閱讀支援是指KALS可以讓網頁具備標註功能，學生可以透過KALS在網頁上標亮、添增筆記、錄音、插入多媒體、搜尋等等。合作學習是指學生可以透過共享網頁上的標註來互動與討論。而行為分析是指KALS能夠蒐集學生的閱讀行為來發展各種應用，例如標註推薦、閱讀順序探勘、閱讀焦慮偵測。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;問題導向學習環境 PBL / PBL: Problem-based learning environment&lt;/h2&gt;
&lt;div&gt;
  &lt;iframe src=&quot;https://docs.google.com/presentation/d/e/2PACX-1vRXq5fh3CqzQjYOTkZs8Vn0be5chS7Y_g-eBn6FaPtd-2lcK5BBH0-CgBZChKMG9tYORNUtekvMUUwy/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; width=&quot;960&quot; height=&quot;749&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vRXq5fh3CqzQjYOTkZs8Vn0be5chS7Y_g-eBn6FaPtd-2lcK5BBH0-CgBZChKMG9tYORNUtekvMUUwy/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; target=&quot;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot;&gt;Open in new window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:window.open(&#39;https://docs.google.com/presentation/d/e/2PACX-1vRXq5fh3CqzQjYOTkZs8Vn0be5chS7Y_g-eBn6FaPtd-2lcK5BBH0-CgBZChKMG9tYORNUtekvMUUwy/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&#39;, &#39;width=800,height=600,toolbar=0,menubar=0,location=0&#39;)&quot;&gt;Open in popup window&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1nl4i54KKfjbIaOZCLpi6etJnc93tesw1GO33fbW1aUQ/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;Google Drive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;以Power Point格式備份：&lt;a href=&quot;https://pulipulichen.github.io/blog-pulipuli-info-data-2019/10/20180518%20PBL.pptx&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;、&lt;a href=&quot;https://1drv.ms/p/s!AqkXZ97o-6Jrpi9j7mdp8uM6M2KY?e=WWZSxA&quot; target=&quot;_blank&quot;&gt;One Drive&lt;/a&gt;、&lt;a href=&quot;https://mega.nz/#!wkJGGAJB!ZNpTNqRpEc6B6HL2QACF3cpyHTWqfXmMXCuKxC7q_Bs&quot; target=&quot;_blank&quot;&gt;Mega&lt;/a&gt;、&lt;a href=&quot;https://app.box.com/s/rep1tku8rgye1jc11y0r651dfd8fnc74&quot; target=&quot;_blank&quot;&gt;Box&lt;/a&gt;、&lt;a href=&quot;http://www.mediafire.com/file/20sy7igjxa3yuqq/20180518_PBL.pptx/file&quot; target=&quot;_blank&quot;&gt;MediaFire&lt;/a&gt;、&lt;a href=&quot;https://www.slideshare.net/pulipulichen/20180518-pbl&quot; target=&quot;_blank&quot;&gt;SlideShare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這篇介紹的PBL問題導向學習環境，是以IDSR作為問題導向學習的鷹架。IDSR是指知(Identification)、行1 (Design)、行2 (Solve Problem)、思(Reflection)四個階段。每個階段都有對應的學習活動，而學生要前往下個階段之前，必須通過教師審查才能繼續。PBL一樣也有蒐集學生的學習歷程檔案來開發的應用，包括社會網路分析中的同儕推薦、小組成員識別與組合的推薦。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;結語 / In closing&lt;/h2&gt;
&lt;p&gt;我們實驗室中的KALS跟PBLS已經是相當長久的研究平臺。這次因應工作坊的時間，投影片裡面只有簡短的介紹。如果有興趣的話，可以看看我之前撰寫的「&lt;a href=&quot;http://blog.pulipuli.info/2014/07/kals-introduce-kals.html&quot; target=&quot;_blank&quot;&gt;KALS 閱讀知識合作標註學習系統介紹&lt;/a&gt;」以及&lt;a href=&quot;https://ah.lib.nccu.edu.tw/scholar?id=209&amp;amp;title=items&amp;amp;subtitle=jornal#mainContent&quot; target=&quot;_blank&quot;&gt;陳志銘老師發表的研究&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-F4uiVZ8V8Ec/XZSXsgqelkI/AAAAAAAEY5Q/YwbKNEysTnYynHmjUqrZ7ik6HvaLxt5OwCK4BGAYYCw/s1600/2019-1002-200039-CATE-LL-LZR-ER-File-Upload-Upload.png&quot;&gt;
    &lt;img src=&quot;//3.bp.blogspot.com/-F4uiVZ8V8Ec/XZSXsgqelkI/AAAAAAAEY5Q/YwbKNEysTnYynHmjUqrZ7ik6HvaLxt5OwCK4BGAYYCw/s450/2019-1002-200039-CATE-LL-LZR-ER-File-Upload-Upload.png&quot; title=&quot;2019-1002-200039-CATE-LL-LZR-ER-File-Upload-Upload.png&quot; alt=&quot;2019-1002-200039-CATE-LL-LZR-ER-File-Upload-Upload.png&quot; width=&quot;450&quot; height=&quot;426&quot;&gt;
  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此外，跟內容沒有關係的是，我寫這篇同時也是為了修正&lt;a href=&quot;https://github.com/pulipulichen/Blogger-Editor&quot; target=&quot;_blank&quot;&gt;Blogger Editor&lt;/a&gt;的檔案上傳功能。這個檔案上傳功能是在Blogger Editor開發中相當早期就做出來的功能，但後來因為有其他更重要的功能必須先測試，所以它做完後就一直被我放著、沒實際拿來用。現在為了上傳投影片而用到檔案上傳功能的時候，果不其然的就遇到了許多問題，我就一一修正、讓Blogger Editor越用越順手吧。



&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那麼這次對於KALS和PBL的介紹就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;你用過數位學習平臺學習的經驗嗎？&lt;/li&gt;
  &lt;li&gt;你用過那種數位學習平臺呢？&lt;a href=&quot;https://moodle.org&quot; target=&quot;_blank&quot;&gt;Moodle&lt;/a&gt;？&lt;a href=&quot;https://www.wikiwand.com/en/Blackboard_Inc.&quot; target=&quot;_blank&quot;&gt;Blackboard&lt;/a&gt;？&lt;a href=&quot;http://www.sun.net.tw/&quot; target=&quot;_blank&quot;&gt;旭聯的智慧大師&lt;/a&gt;？&lt;/li&gt;
  &lt;li&gt;你在使用數位學習平臺的時候，讓你印象最深刻的經驗是什麼呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/331429868822941321/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/10/kalspbl-introducing-to-online-learning.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/331429868822941321'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/331429868822941321'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/10/kalspbl-introducing-to-online-learning.html' title='數位學習平臺介紹：KALS和PBL / Introducing to Online Learning Environments: KALS and PBL'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//3.bp.blogspot.com/-yssTQWrjsPg/XZSXyTznuwI/AAAAAAAEY5g/D9MIVxFA1pwONlnSpPmELYe3_IEw4Rv5ACK4BGAYYCw/s72-c/10-KALS_PBL_IDSR_Introducing_to_KALS.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-7573736174730314284</id><published>2019-10-01T00:32:00.003+08:00</published><updated>2019-10-01T00:34:51.542+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="程式語言/JavaScript"/><title type='text'>如何建構響應式的HTML表格：表格縮圖響應式設計方案 / How to Create a Responsive Table using Table Thumbnail</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-p7ffIzWUpuY/XZItwNqSVRI/AAAAAAAEYlY/qrosK08jquso5lpRIMfebUmsnTFtwrhVwCK4BGAYYCw/s1600/7-HTML_How_to_Create_a_Responsive.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-p7ffIzWUpuY/XZItwNqSVRI/AAAAAAAEYlY/qrosK08jquso5lpRIMfebUmsnTFtwrhVwCK4BGAYYCw/s1600/7-HTML_How_to_Create_a_Responsive.png&quot; title=&quot;7-HTML_How_to_Create_a_Responsive.png&quot; alt=&quot;7-HTML_How_to_Create_a_Responsive.png&quot; class=&quot;original-size&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;啊囉哈~~這裡是剛剛才發現在&lt;a href=&quot;http://typhoon.ws/lifeinfo/stop_working&quot; target=&quot;_blank&quot;&gt;米塔颱風&lt;/a&gt;中曬衣服是不行的布丁。&lt;/p&gt;
&lt;p&gt;為了因應大小不一的螢幕尺寸，現代的網頁都強調必須具備&lt;a href=&quot;https://www.w3schools.com/html/html_responsive.asp&quot; target=&quot;_blank&quot;&gt;響應式設計(responsive web design)&lt;/a&gt;。響應式設計可以讓網頁在大螢幕上面看起來很自然，在小螢幕裡面也不會看起來太過彆扭。網頁上各種不同的元素都有其響應式設計的做法。其中最具爭議性的，就是表格元素&amp;lt;table&amp;gt;的響應式處理。&lt;/p&gt;
&lt;p&gt;有別於主流的捲軸方案或是&lt;a href=&quot;https://css-tricks.com/responsive-data-tables/&quot; target=&quot;_blank&quot;&gt;重新排版的CSS方案&lt;/a&gt;，這邊我要提出一種特別適合部落格文章的&lt;a href=&quot;https://github.com/pulipulichen/20190930-RWD-Table-to-SVG&quot; target=&quot;_blank&quot;&gt;表格縮圖響應式設計方案&lt;/a&gt;。此做法是在小螢幕時以表格縮圖取代原本的表格，而使用者點選表格縮圖時，就會開啟一個新網頁，裡面呈現完整的表格內容。下面就讓我們來看看表格縮圖響應式設計方案怎麽運作的吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;&lt;hr&gt;&lt;h2&gt;實例展示 / Demonstration&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-6tN-hY5NP9Y/XZItvtoS5sI/AAAAAAAEYlc/TWU2pmzi5jM0zjolC5mQcVZoC3vXtCikQCK4BGAYYCw/s1600/2019-0930-220607-Open-table-html-Table-in-width-TE.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-6tN-hY5NP9Y/XZItvtoS5sI/AAAAAAAEYlc/TWU2pmzi5jM0zjolC5mQcVZoC3vXtCikQCK4BGAYYCw/s450/2019-0930-220607-Open-table-html-Table-in-width-TE.png&quot; title=&quot;2019-0930-220607-Open-table-html-Table-in-width-TE.png&quot; alt=&quot;2019-0930-220607-Open-table-html-Table-in-width-TE.png&quot; width=&quot;450&quot; height=&quot;429&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://pulipulichen.github.io/20190930-RWD-Table-to-SVG/&quot; target=&quot;_blank&quot;&gt;各尺寸展示網頁&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://pulipulichen.github.io/20190930-RWD-Table-to-SVG/table.html&quot; target=&quot;_blank&quot;&gt;表格展示網頁&lt;/a&gt;&lt;/li&gt;&lt;li&gt;GitHub程式碼保存庫：&lt;a href=&quot;https://github.com/pulipulichen/20190930-RWD-Table-to-SVG&quot; target=&quot;_blank&quot;&gt;https://github.com/pulipulichen/20190930-RWD-Table-to-SVG&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在表格縮圖響應式設計方案的預設設定中，在螢幕寬度超過640像素時，表格會以原始樣式呈現。而螢幕寬度在640像素以下時，就改以表格縮圖呈現。該縮圖預設是以寬度800像素來截圖，而縮圖會隨著網頁寬度，以維持長寬比例縮放。&lt;/p&gt;
&lt;h3&gt;原始的表格 / Original table layout&lt;/h3&gt;&lt;p&gt;這邊我以一個&lt;a href=&quot;https://pulipulichen.github.io/20190930-RWD-Table-to-SVG/table.html&quot; target=&quot;_blank&quot;&gt;蠻大的表格&lt;/a&gt;為例子，以下讓我們來看看不同螢幕寬度尺寸中，該表格所呈現的樣子。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-mlK4WEnhnPs/XZItvb4TppI/AAAAAAAEYlE/ePfUuuN-BXEG0x0QPIDU13rTrsAMiJ-ZACK4BGAYYCw/s1600/2019-0930-221124-Responsive-Online-erases-EnzaMgxi.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-mlK4WEnhnPs/XZItvb4TppI/AAAAAAAEYlE/ePfUuuN-BXEG0x0QPIDU13rTrsAMiJ-ZACK4BGAYYCw/s450/2019-0930-221124-Responsive-Online-erases-EnzaMgxi.png&quot; title=&quot;2019-0930-221124-Responsive-Online-erases-EnzaMgxi.png&quot; alt=&quot;2019-0930-221124-Responsive-Online-erases-EnzaMgxi.png&quot; width=&quot;450&quot; height=&quot;209&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這是在1200x480的螢幕大小中，表格所呈現的樣子。這個表格的寬度不到1200像素，在此螢幕大小中，表格能夠完整呈現。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-VRi_vLe4cps/XZItvbmymOI/AAAAAAAEYlU/CCAksDqYJ9sG4RZoCeP9XshHFTpGZRGJgCK4BGAYYCw/s1600/2019-0930-221348-Responsive-Xu-Online-ak-Fale-wemwemdevenmmzs.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-VRi_vLe4cps/XZItvbmymOI/AAAAAAAEYlU/CCAksDqYJ9sG4RZoCeP9XshHFTpGZRGJgCK4BGAYYCw/s450/2019-0930-221348-Responsive-Xu-Online-ak-Fale-wemwemdevenmmzs.png&quot; title=&quot;2019-0930-221348-Responsive-Xu-Online-ak-Fale-wemwemdevenmmzs.png&quot; alt=&quot;2019-0930-221348-Responsive-Xu-Online-ak-Fale-wemwemdevenmmzs.png&quot; width=&quot;450&quot; height=&quot;346&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這是在700x480的螢幕大小中，表格所呈現的樣子。由於螢幕尺寸較小，表格內的文字會自動換行來適應螢幕的寬度。在這個寬度下表格仍然可以正常閱讀。&lt;/p&gt;
&lt;h3&gt;小螢幕中原始的表格 / Original table in small screen&lt;/h3&gt;&lt;p&gt;接下來讓我們先看看沒有響應式表格縮圖中，原始的表格是怎麼呈現的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-E0nx1QM_U7Q/XZItvX11brI/AAAAAAAEYlQ/YEu0zh0qBVIAuW2_lkeQjJwYZI8zmZaXwCK4BGAYYCw/s1600/2019-0930-222035-Responsive-Online-adecUive-FER-BRAS.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-E0nx1QM_U7Q/XZItvX11brI/AAAAAAAEYlQ/YEu0zh0qBVIAuW2_lkeQjJwYZI8zmZaXwCK4BGAYYCw/s450/2019-0930-222035-Responsive-Online-adecUive-FER-BRAS.png&quot; title=&quot;2019-0930-222035-Responsive-Online-adecUive-FER-BRAS.png&quot; alt=&quot;2019-0930-222035-Responsive-Online-adecUive-FER-BRAS.png&quot; width=&quot;336&quot; height=&quot;450&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這是在400x480的螢幕大小中，表格所呈現的樣子。因為螢幕尺寸非常的小，表格內文為了能夠適應螢幕的寬度，被強迫換行的文字把表格拉得非常的長。在這個例子中的表格還算是可以閱讀，不過如果表格更大、更複雜的情況下，這個表格不僅難以瀏覽，還會讓網頁長到不像話。&lt;/p&gt;
&lt;h3&gt;小螢幕中的響應式表格 / Table with RWD in small screen&lt;/h3&gt;&lt;p&gt;看完了原始的表格，再來看看加入表格縮圖響應式設計方案的表格吧：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-duOm6Y3GSdE/XZItve72BaI/AAAAAAAEYlI/FGHPhznwVfkAYHYO6vMC7CwAuI7WhDPXQCK4BGAYYCw/s1600/2019-0930-221524-Sammas-kexv-omsr-ueaam-fo-errors.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-duOm6Y3GSdE/XZItve72BaI/AAAAAAAEYlI/FGHPhznwVfkAYHYO6vMC7CwAuI7WhDPXQCK4BGAYYCw/s450/2019-0930-221524-Sammas-kexv-omsr-ueaam-fo-errors.png&quot; title=&quot;2019-0930-221524-Sammas-kexv-omsr-ueaam-fo-errors.png&quot; alt=&quot;2019-0930-221524-Sammas-kexv-omsr-ueaam-fo-errors.png&quot; width=&quot;340&quot; height=&quot;450&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這是在400x480的螢幕大小中，表格所呈現的樣子。預設在螢幕大小為640像素以下時，表格就改以SVG格式的向量縮圖呈現。該縮圖是以預設寬度800像素的狀態下為表格所截取的畫面。該縮圖加上了響應式設計，會隨著螢幕寬度放大和縮小，並且維持表格的長寬比例。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-r66byBBub8I/XZIuD2OdEAI/AAAAAAAEYmA/HdUvDoD6KrQZCoSVsnBuMncvCDG5QO9LwCK4BGAYYCw/s1600/2019-0930-222907-wwwwes-fr-bh-wen-wes-meswamdeavenmimss.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-r66byBBub8I/XZIuD2OdEAI/AAAAAAAEYmA/HdUvDoD6KrQZCoSVsnBuMncvCDG5QO9LwCK4BGAYYCw/s450/2019-0930-222907-wwwwes-fr-bh-wen-wes-meswamdeavenmimss.png&quot; title=&quot;2019-0930-222907-wwwwes-fr-bh-wen-wes-meswamdeavenmimss.png&quot; alt=&quot;2019-0930-222907-wwwwes-fr-bh-wen-wes-meswamdeavenmimss.png&quot; width=&quot;450&quot; height=&quot;326&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;為了讓使用者瀏覽完整的表格內容，只要點選表格縮圖，網頁就會開啟新視窗，並把完整的表格內容繪製在該視窗中。該視窗預設並沒有為表格做任何響應式設計，不過開發者可以選擇額外加入CSS樣式表，美化開新視窗中的完整表格。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;安裝與使用方式 / Usage instruction&lt;/h2&gt;&lt;p&gt;要使用表格縮圖響應式設計方案，請在你的HTML網頁裡面引入必要的函式庫：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;script src=&quot;https://pulipulichen.github.io/20190930-RWD-Table-to-SVG/vandors/jquery/jquery-3.4.1.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;https://pulipulichen.github.io/20190930-RWD-Table-to-SVG/vandors/dom-to-image/dom-to-image.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;nbsp;src=&quot;https://pulipulichen.github.io/20190930-RWD-Table-to-SVG/table-thumbnail-rwd.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你的網頁已經有&lt;a href=&quot;https://code.jquery.com&quot; target=&quot;_blank&quot;&gt;jQuery&lt;/a&gt;或&lt;a href=&quot;https://github.com/tsayen/dom-to-image&quot; target=&quot;_blank&quot;&gt;dom-to-image&lt;/a&gt;，則可以選擇省略引用它們。&lt;/p&gt;
&lt;p&gt;接著請在你的網頁中為表格加上表格縮圖響應式設計的功能，JavaScript程式碼如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;$(()&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;$(&#39;table&#39;).each((i,&amp;nbsp;table)&amp;nbsp;=&amp;gt;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TableThumbnailRWD(table,&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;options...&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;br&gt;&amp;nbsp;&amp;nbsp;})&lt;br&gt;})&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;這樣就完成了。&lt;/p&gt;
&lt;h3&gt;選項 / Options&lt;/h3&gt;&lt;p&gt;表格縮圖響應式設計有四個額外選項可以設定。你可以在第二個參數中，以JSON格式加入要設定的內容。JavaScript語法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;TableThumbnailRWD(table,&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;showThumbnailWidthPX:&amp;nbsp;640,&lt;br&gt;&amp;nbsp;&amp;nbsp;thumbnailMinWidth:&amp;nbsp;&#39;800px&#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;thumbnailTitle:&amp;nbsp;&#39;Open&amp;nbsp;table&amp;nbsp;in&amp;nbsp;new&amp;nbsp;window&#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;popupCssURL:&amp;nbsp;&#39;//pulipulichen.github.io/20190930-RWD-Table-to-SVG/popup.css&#39;&lt;br&gt;})&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;這四個選項的意思是：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;showThumbnailWidthPX：顯示表格縮圖的螢幕寬度。資料形態為數字，單位是像素，預設是640。&lt;/li&gt;&lt;li&gt;thumbnailMinWidth：為多少寬度的表格建立表格縮圖。資料形態為字串，預設是「&#39;800px&#39;」。&lt;/li&gt;&lt;li&gt;thumbnailTitle：滑鼠放上表格縮圖時所顯示的提示訊息。資料形態為字串，預設是「&#39;Open table in new window&#39;」。&lt;/li&gt;&lt;li&gt;popupCssURL: 點選表格縮圖開啟新視窗呈現完整表格時，為可為完整表格加上額外的CSS樣式表。預設值為「null」，表示不插加入任何CSS樣式表。但你也可以設定為「&#39;//pulipulichen.github.io/20190930-RWD-Table-to-SVG/popup.css&#39;」，則呈現完整表格時就會有&lt;a href=&quot;https://pulipulichen.github.io/20190930-RWD-Table-to-SVG/popup.css&quot; target=&quot;_blank&quot;&gt;popup.css&lt;/a&gt;這個CSS樣式表的效果。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;請依據自己的需求自行調整設定吧。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;使用時機 / When to use&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-jvUUiqPTKcA/XZIuEGlHdrI/AAAAAAAEYmc/EOUPu_J44L41_G1uhpnkt79xweQeK_r8ACK4BGAYYCw/s1600/Samsung_with_laptop_and_notepad.jpg&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-jvUUiqPTKcA/XZIuEGlHdrI/AAAAAAAEYmc/EOUPu_J44L41_G1uhpnkt79xweQeK_r8ACK4BGAYYCw/s450/Samsung_with_laptop_and_notepad.jpg&quot; title=&quot;Samsung_with_laptop_and_notepad.jpg&quot; alt=&quot;Samsung_with_laptop_and_notepad.jpg&quot; width=&quot;450&quot; height=&quot;299&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁樣板：&lt;a href=&quot;https://smartmockups.com/mockup/samsung-with-laptop-and-notepad-TAHxqL7yQ&quot; target=&quot;_blank&quot;&gt;SMARTMOCKUPS&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;表格縮圖響應式設計這個方案看起來在小螢幕時也能呈現表格，不過它也有目前無法克服的缺點，並不是所有情況都適用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-TYO46-H5ISo/XZIuESxE-wI/AAAAAAAEYmg/faoQASzbzqInuxc8p8WfpI4NctcgGqouACK4BGAYYCw/s1600/Screenshot_20190930-230121-CE-FRE-RA-LJ-LJ-oO-iE-mE-NA-pon.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-TYO46-H5ISo/XZIuESxE-wI/AAAAAAAEYmg/faoQASzbzqInuxc8p8WfpI4NctcgGqouACK4BGAYYCw/s450/Screenshot_20190930-230121-CE-FRE-RA-LJ-LJ-oO-iE-mE-NA-pon.png&quot; title=&quot;Screenshot_20190930-230121-CE-FRE-RA-LJ-LJ-oO-iE-mE-NA-pon.png&quot; alt=&quot;Screenshot_20190930-230121-CE-FRE-RA-LJ-LJ-oO-iE-mE-NA-pon.png&quot; width=&quot;253&quot; height=&quot;450&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;表格縮圖響應式設計方案最適合用於「&lt;b&gt;&lt;font color=&quot;#ff0000&quot;&gt;以文字為主、表格為輔&lt;/font&gt;&lt;/b&gt;」的網頁中，例如你現在閱讀的部落格文章、或是用網頁呈現論文中的表格。在這個情境中，讀者以閱讀文字為主，表格僅作為文字的輔助，常常會以略讀快速一撇表格的樣貌，不會一字一句細讀表格的內容。&lt;/p&gt;
&lt;p&gt;如果讀者想要瞭解表格的細節內容，那就點下表格縮圖，在獨立開啟完整表格。這時候就可以用網頁瀏覽器提供的搜尋功能來找尋需要的資訊，或是對表格放大、縮小，而不會影響本來閱讀網頁的排版。&lt;/p&gt;
&lt;h3&gt;缺點 / Drawback&lt;/h3&gt;&lt;p&gt;表格縮圖響應式設計方案並不適合用於主要以表格呈現資訊的網頁中。很多大型報表、資料庫查詢結果，都是以表格來呈現資訊。讀者使用這些網頁的重點就是查看表格的內容，因此並不適合將表格以縮圖呈現。&lt;/p&gt;
&lt;p&gt;以縮圖呈現表格的另一個問題就是直接難以複製。雖然表格縮圖響應式設計方案提供了點選後開新視窗的功能，但是習慣上，讀者會在瀏覽表格縮圖內容時，就嘗試選擇文字並複製。可惜的是，在此方案中，這時候只會打開新視窗，重頭顯示完整表格內容。讀者這時候會覺得很洩氣，剛剛才在縮圖上找了好久的資訊，現在又要重新找起。&lt;/p&gt;
&lt;p&gt;這連帶的會造成另一個問題：難以搜尋。在呈現表格縮圖的時候，原始的表格會被隱藏起來。這時候網頁瀏覽器的搜尋功能，是沒辦法找到網頁縮圖上的文字。&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-weight: 700;&quot;&gt;其他響應式表格方案 / Other solutions&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-3s0rTRMaYuo/XZIuEAwpbNI/AAAAAAAEYmQ/GKjC2Txjv6ghEYgZb-ga_vJjKpMXXB7vgCK4BGAYYCw/s1600/bootstrap-table-rwd_00.jpg&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-3s0rTRMaYuo/XZIuEAwpbNI/AAAAAAAEYmQ/GKjC2Txjv6ghEYgZb-ga_vJjKpMXXB7vgCK4BGAYYCw/s450/bootstrap-table-rwd_00.jpg&quot; title=&quot;bootstrap-table-rwd_00.jpg&quot; alt=&quot;bootstrap-table-rwd_00.jpg&quot; width=&quot;450&quot; height=&quot;316.797&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.minwt.com/webdesign-dev/html/14066.html&quot; target=&quot;_blank&quot;&gt;梅問題教學網&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;如果你的網頁是以表格為主來呈現資訊，比較推薦的做法是採用CSS框架提供的CSS方案，例如這篇「&lt;a href=&quot;https://www.minwt.com/webdesign-dev/html/14066.html&quot; target=&quot;_blank&quot;&gt;Bootstrap教學－實現Table表格也支援RWD自適應效果&lt;/a&gt;」。此外，「&lt;a href=&quot;https://www.liquidlight.co.uk/blog/tables-in-responsive-design/&quot; target=&quot;_blank&quot;&gt;Tables in responsive design&lt;/a&gt;」這篇也回顧了6種不同的表格響應式設計，而作者最推薦的就是CSS方案。&lt;/p&gt;
&lt;h3&gt;完整的表格呈現方案：Handsontable / Display a full features spreadsheet: Handsontable&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-pZx-hKc3aqQ/XZIuD_N5NtI/AAAAAAAEYl4/ui7ll-sWRj48kJxdAA2JXE_HNtmxAr45gCK4BGAYYCw/s1600/2019-0930-232142-ID-Country-Code-Currency-Level-Ew.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-pZx-hKc3aqQ/XZIuD_N5NtI/AAAAAAAEYl4/ui7ll-sWRj48kJxdAA2JXE_HNtmxAr45gCK4BGAYYCw/s450/2019-0930-232142-ID-Country-Code-Currency-Level-Ew.png&quot; title=&quot;2019-0930-232142-ID-Country-Code-Currency-Level-Ew.png&quot; alt=&quot;2019-0930-232142-ID-Country-Code-Currency-Level-Ew.png&quot; width=&quot;450&quot; height=&quot;231&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://jsfiddle.net/api/post/library/pure/&quot; target=&quot;_blank&quot;&gt;Handsontable Example&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;如果你要呈現更複雜的表格，我強力推薦大家引入表格函式庫，例如&lt;a href=&quot;https://handsontable.com/examples?manual-resize&amp;amp;manual-move&amp;amp;conditional-formatting&amp;amp;context-menu&amp;amp;filters&amp;amp;dropdown-menu&amp;amp;headers&quot; target=&quot;_blank&quot;&gt;Handsontable&lt;/a&gt;。Handsontable就像是我們常用的試算表工具，它可以提供像是固定表頭、首欄等功能，也能夠提供篩選、搜尋等功能。開發者可以依據使用者的需求加入所需功能、或移除不會用到的多餘功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-x7UywvbxG4g/XZIuEIU2uNI/AAAAAAAEYmY/nSwMxgTx_ycHSx1-6H-uwETm6bIl7SHuQCK4BGAYYCw/s1600/Handsontable_Example.png&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-x7UywvbxG4g/XZIuEIU2uNI/AAAAAAAEYmY/nSwMxgTx_ycHSx1-6H-uwETm6bIl7SHuQCK4BGAYYCw/s450/Handsontable_Example.png&quot; title=&quot;Handsontable_Example.png&quot; alt=&quot;Handsontable_Example.png&quot; width=&quot;253&quot; height=&quot;450&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://handsontable.com/examples?manual-resize&amp;amp;manual-move&amp;amp;conditional-formatting&amp;amp;context-menu&amp;amp;filters&amp;amp;dropdown-menu&amp;amp;headers&quot; target=&quot;_blank&quot;&gt;Handsontable Demo&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;當然，在小尺寸的手機上，Handsontable的運作也如大螢幕的桌面一樣穩定。這比起單純的HTML表格來說，Handsontable能夠帶給使用者更親切的操作體驗。我自己還&lt;a href=&quot;http://blog.pulipuli.info/2019/09/autoitelectron-diy-tools-from-autoit-to.html#postcataautoitelectron-diy-tools-from-autoit-to.html0_anchor9&quot; target=&quot;_blank&quot;&gt;用Handsontable做了試算表應用程式&lt;/a&gt;呢。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;結語 / Wrap up&lt;/h2&gt;&lt;p&gt;表格縮圖響應式設計方案是我在整理「&lt;a href=&quot;http://blog.pulipuli.info&quot; target=&quot;_blank&quot;&gt;布丁布丁吃什麼？&lt;/a&gt;」的網站功能時，為了能夠在因應小螢幕上顯示表格所整理而成的做法。整理的時候，我發現在網路上好像很少人提到這種做法，所以特別把它抽取出來，彙整成一個獨立的&lt;a href=&quot;https://github.com/pulipulichen/20190930-RWD-Table-to-SVG&quot; target=&quot;_blank&quot;&gt;GitHub程式碼保存庫&lt;/a&gt;，提供有需要的人使用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-3ENi19K1XtM/XZIuHGjMPjI/AAAAAAAEYmo/FoTuN9YhkVswkdnDbos_58Q1mVBQbsT-ACK4BGAYYCw/s1600/taptoviewtable.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-3ENi19K1XtM/XZIuHGjMPjI/AAAAAAAEYmo/FoTuN9YhkVswkdnDbos_58Q1mVBQbsT-ACK4BGAYYCw/s450/taptoviewtable.png&quot; title=&quot;taptoviewtable.png&quot; alt=&quot;taptoviewtable.png&quot; width=&quot;450&quot; height=&quot;396&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://css-tricks.com/responsive-data-tables/&quot; target=&quot;_blank&quot;&gt;Responsive Data Tables&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;在研究響應式表格的相關方案中，Scott跟Todd Parker所提出的做法跟我比較類似。他們的做法一樣是在小螢幕時提供表格的縮圖，不過這個縮圖只有框線，以及「Table: Tap to view」的提示。使用者點選縮圖之後，會在同一個網頁上呈現完整表格，再點一次完整表格即可關閉。你可以&lt;a href=&quot;http://output.jsbin.com/apane6/14/&quot; target=&quot;_blank&quot;&gt;點此開啟實機展示網頁&lt;/a&gt;，記得用小螢幕體驗一下這個做法。&lt;/p&gt;
&lt;p&gt;跟我提出的表格縮圖響應式設計方案相比，他們的方案並不是提供的縮圖只有框線、沒有文字，讀者難以靠縮圖略讀表格的概況。此外，他們的方案點開後的完整表格，也不能選取、複製。我個人還是比較喜歡開新網頁，這樣子使用者比較容易操控完整表格的內容。&lt;/p&gt;
&lt;p&gt;最後還是要提醒大家，我提出的表格縮圖響應式設計方案有其優缺點，請依照你的需求決定是否採用。如果有不同的看法或建議，歡迎在下面留言處提出你的問題喔



。&lt;/p&gt;
&lt;hr&gt;&lt;p&gt;好啦，那麼這次的表格縮圖響應式設計方案的說明就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作為使用者，你會用手機、平板等較小的螢幕瀏覽網頁上的表格嗎？你通常會在什麼網站上瀏覽表格的內容呢？用小螢幕瀏覽表格時，你覺得有什麼問題需要改善呢？&lt;/li&gt;&lt;li&gt;作為開發者，你所建構的網站會為小螢幕提供響應式設計嗎？你是怎麽實作你的響應式設計？你對網頁中的表格，有什麼響應式設計的做法呢？&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/7573736174730314284/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/10/html-how-to-create-responsive-table.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/7573736174730314284'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/7573736174730314284'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/10/html-how-to-create-responsive-table.html' title='如何建構響應式的HTML表格：表格縮圖響應式設計方案 / How to Create a Responsive Table using Table Thumbnail'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//3.bp.blogspot.com/-p7ffIzWUpuY/XZItwNqSVRI/AAAAAAAEYlY/qrosK08jquso5lpRIMfebUmsnTFtwrhVwCK4BGAYYCw/s72-c/7-HTML_How_to_Create_a_Responsive.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-2011264714529118552</id><published>2019-09-27T19:24:00.002+08:00</published><updated>2019-09-27T20:42:35.151+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/JavaScript"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/Svelte"/><category scheme="http://www.blogger.com/atom/ns#" term="程式語言/JavaScript"/><title type='text'>初探網頁前端框架Svelte / Preliminary Study of Svelte, a Front-end Framework</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-iGFekRItwD0/XY3xOMe_CCI/AAAAAAAEYfU/fs2mj1VV3uImKNXejgIAnP2W64vyCgTsgCK4BGAYYCw/s1600/6-Svelte_Preliminary_Study_of_Svelte.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-iGFekRItwD0/XY3xOMe_CCI/AAAAAAAEYfU/fs2mj1VV3uImKNXejgIAnP2W64vyCgTsgCK4BGAYYCw/s1600/6-Svelte_Preliminary_Study_of_Svelte.png&quot; title=&quot;6-Svelte_Preliminary_Study_of_Svelte.png&quot; alt=&quot;6-Svelte_Preliminary_Study_of_Svelte.png&quot; class=&quot;original-size&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近嘗試摸索了號稱&lt;a href=&quot;https://svelte.dev/blog/write-less-code&quot; target=&quot;_blank&quot;&gt;簡短程式碼就能運作&lt;/a&gt;的&lt;a href=&quot;https://svelte.dev/&quot; target=&quot;_blank&quot;&gt;網頁前端框架Svelte&lt;/a&gt;，一開始我的確為它的簡潔所吸引，嘗試架了一個&lt;a href=&quot;https://github.com/pulipulichen/20190927-SvelteJS-Webpack-Test&quot; target=&quot;_blank&quot;&gt;Svelte專案&lt;/a&gt;來跑跑看。不過實際摸索後，若從開發大型複雜專案的角度來看，Svelte無法將腳本與樣式拆開成獨立檔案、也難以抽出額外的圖片檔案等不足，使得它仍然比不上&lt;a href=&quot;https://vuejs.org&quot; target=&quot;_blank&quot;&gt;Vue.js&lt;/a&gt;好用。&lt;/p&gt;
&lt;p&gt;這篇先給大家準備一個我嘗試Svelte的試作專案，再來談談我對Svelte的使用感想。如果對Svelte有興趣的人，說不定也能基於我的試作專案再來改造，改善我對Svelte的批評呢。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;&lt;hr&gt;&lt;h2&gt;網頁前端框架：Svelte / Front-end MVVM framework: Svelte&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-0cwSaWFZBxo/XY3xNJAsWxI/AAAAAAAEYfA/1d5ZQqjaaPEd6QYjysqJl3nwfK4Ui06IQCK4BGAYYCw/s1600/svelte_logo.png&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px;&quot;&gt;&lt;img src=&quot;//4.bp.blogspot.com/-0cwSaWFZBxo/XY3xNJAsWxI/AAAAAAAEYfA/1d5ZQqjaaPEd6QYjysqJl3nwfK4Ui06IQCK4BGAYYCw/s400/svelte_logo.png&quot; title=&quot;svelte_logo.png&quot; alt=&quot;svelte_logo.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://github.com/sveltejs/template-webpack&quot; target=&quot;_blank&quot;&gt;sveltejs/template-webpack&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Svelte是一個嶄新的使用者介面建構方案。跟React和Vue這種傳統的網頁前端MVVM框架不同，他們往往是在瀏覽器上建構應用程式，Svelte則是強調在&lt;i&gt;&lt;b&gt;編譯&lt;/b&gt;&lt;/i&gt;階段就建構好應用程式。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-8pqImrC6jwY/XY4DjXJHYRI/AAAAAAAEYhM/ZtfNp3PsP1oDVK7lvhYdQIL_0chVVJOkACK4BGAYYCw/s1600/svelte_exampel.gif&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-8pqImrC6jwY/XY4DjXJHYRI/AAAAAAAEYhM/ZtfNp3PsP1oDVK7lvhYdQIL_0chVVJOkACK4BGAYYCw/s450/svelte_exampel.gif&quot; title=&quot;svelte_exampel.gif&quot; alt=&quot;svelte_exampel.gif&quot; width=&quot;450&quot; height=&quot;194&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(範例來源：&lt;a href=&quot;https://svelte.dev&quot; target=&quot;_blank&quot;&gt;Svelte&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;而且Svelte希望建構一個&lt;a href=&quot;https://svelte.dev/blog/frameworks-without-the-framework&quot; target=&quot;_blank&quot;&gt;不需要框架的框架(frameworks without framework)&lt;/a&gt;，它可以用&lt;a href=&quot;https://svelte.dev/blog/write-less-code&quot; target=&quot;_blank&quot;&gt;相當少的程式碼&lt;/a&gt;，以類似於原生JavaScript程式的方式開發，就能做到跟其他網頁前端框架類似的功能。它要撰寫的程式碼遠比其他框架少了許多。&lt;/p&gt;
&lt;p&gt;此外，Svelte也不使用虛擬DOM(virtual DOM)差異化的技術，它認為&lt;a href=&quot;https://svelte.dev/blog/virtual-dom-is-pure-overhead&quot; target=&quot;_blank&quot;&gt;虛擬DOM只是多餘的操作&lt;/a&gt;。Svelte做法更直接：變更DOM的內容，而在2018年&lt;a href=&quot;https://medium.com/@ajmeyghani/javascript-frameworks-performance-comparison-c566d19ab65b&quot; target=&quot;_blank&quot;&gt;AJ Meyghani&lt;/a&gt;的評測中，Svelte的效率跟其他框架相比也毫不遜色。因為Svelte更強調在編譯時期就建構應用程式，它的記憶體程度明顯比其他框架更少，對低階硬體來說更為友善。&lt;/p&gt;
&lt;p&gt;Svelte雖然一般會被當作是網頁前端框架，但實際運作時，不能只靠瀏覽器就建構應用程式，必須搭配編譯器才行。以下我就準備一個試作專案，以此作為探索Svelte的起點吧。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;試作專案 / Demonstration project&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-8w9Z8ZoxMXE/XY3xNU8dMGI/AAAAAAAEYfM/RNY4zsaM0M8BAAk0nTSJ9l37vreqhxsngCK4BGAYYCw/s1600/2019-0927-140920-Pull-requests-Issues-Marketplace.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-8w9Z8ZoxMXE/XY3xNU8dMGI/AAAAAAAEYfM/RNY4zsaM0M8BAAk0nTSJ9l37vreqhxsngCK4BGAYYCw/s450/2019-0927-140920-Pull-requests-Issues-Marketplace.png&quot; title=&quot;2019-0927-140920-Pull-requests-Issues-Marketplace.png&quot; alt=&quot;2019-0927-140920-Pull-requests-Issues-Marketplace.png&quot; width=&quot;450&quot; height=&quot;338&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://github.com/pulipulichen/20190927-SvelteJS-Webpack-Test&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;GitHub儲存庫：&lt;a href=&quot;https://github.com/pulipulichen/20190927-SvelteJS-Webpack-Test&quot; target=&quot;_blank&quot;&gt;https://github.com/pulipulichen/20190927-SvelteJS-Webpack-Test&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-0cwSaWFZBxo/XY3xNJAsWxI/AAAAAAAEYfA/1d5ZQqjaaPEd6QYjysqJl3nwfK4Ui06IQCK4BGAYYCw/s1600/svelte_logo.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-0cwSaWFZBxo/XY3xNJAsWxI/AAAAAAAEYfA/1d5ZQqjaaPEd6QYjysqJl3nwfK4Ui06IQCK4BGAYYCw/s400/svelte_logo.png&quot; title=&quot;svelte_logo.png&quot; alt=&quot;svelte_logo.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://github.com/sveltejs/template-webpack&quot; target=&quot;_blank&quot;&gt;sveltejs/template-webpack&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;一開始我本來打算照Svelte教的方式，從&lt;a href=&quot;https://github.com/sveltejs/template&quot; target=&quot;_blank&quot;&gt;sveltejs/template範本&lt;/a&gt;來建立Svelte專案。不過我在第一個指令「npx degit sveltejs/template my-svelte-project」就卡住了，發生錯誤「! could not find commit hash for master」，看了下&lt;a href=&quot;https://github.com/Rich-Harris/degit/issues/37&quot; target=&quot;_blank&quot;&gt;其他人對問題的討論&lt;/a&gt;，也沒找到合適的解法，最後索性找尋其他方案。&lt;/p&gt;
&lt;p&gt;事後想想，這時候似乎只要直接分歧(fork)sveltejs/template範本，然後再複製(clone)分歧的專案到本機端來運作，這樣就可以了喔？&lt;/p&gt;
&lt;p&gt;事後發現，執行「npx degit sveltejs/template my-svelte-project」卻發生錯誤「! could not find commit hash for master」的情況，這是因為電腦裡面沒有&lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot;&gt;安裝Git&lt;/a&gt;所引起的問題。後來我安裝Git之後就能順利執行了&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-WBAzRWCUIpw/XY3xNEWdNuI/AAAAAAAEYfI/i8m9jXqkFgsrOnbs0Irxn0NnifdN0J1IwCK4BGAYYCw/s1600/webpack_logo.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-WBAzRWCUIpw/XY3xNEWdNuI/AAAAAAAEYfI/i8m9jXqkFgsrOnbs0Irxn0NnifdN0J1IwCK4BGAYYCw/s450/webpack_logo.png&quot; title=&quot;webpack_logo.png&quot; alt=&quot;webpack_logo.png&quot; width=&quot;450&quot; height=&quot;450&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://webpack.js.org/branding/&quot; target=&quot;_blank&quot;&gt;webpack&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;總之，我還是換了另一個方案：基於使用&lt;a href=&quot;https://webpack.js.org/&quot; target=&quot;_blank&quot;&gt;Webpack&lt;/a&gt;來編譯Svelte的&lt;a href=&quot;https://github.com/sveltejs/template-webpack&quot; target=&quot;_blank&quot;&gt;sveltejs/template-webpack&lt;/a&gt;。以這個專案為基底，因為我比較熟悉Webpack，很快就能編譯Svelte並且看到成果。除此之外，我還嘗試了以下功能：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;以&lt;a href=&quot;https://github.com/sveltejs/template-webpack&quot; target=&quot;_blank&quot;&gt;Webpack編譯Svelte&lt;/a&gt;之上，再搭配&lt;a href=&quot;https://www.npmjs.com/package/concurrently&quot; target=&quot;_blank&quot;&gt;concurrently&lt;/a&gt;套件，讓編譯和伺服器同時運作。&lt;/li&gt;&lt;li&gt;展現Svelte的&lt;a href=&quot;https://svelte.dev/tutorial/writable-stores&quot; target=&quot;_blank&quot;&gt;Store / Writable stores運作教學&lt;/a&gt;&lt;/li&gt;&lt;li&gt;加入&lt;span class=&quot;&quot;&gt;&lt;a href=&quot;https://github.com/kaisermann/svelte-i18n&quot; target=&quot;_blank&quot;&gt;svelte-i18n&lt;/a&gt;&lt;/span&gt;的多國語言翻譯功能&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果你也想要試試看的話，可以用以下方法安裝這個範例。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;環境配置 / Environment setup&lt;/h2&gt;&lt;p&gt;初次使用之前，請先先執行一次環境配置。&lt;/p&gt;
&lt;h3&gt;程式語言環境 Node.js / Environment: Node.js&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-4hIOmLNpbpk/XY3xNCcxDaI/AAAAAAAEYfE/qCWHV8fBdrUmlayBqYPjG7TKXYblNLSpwCK4BGAYYCw/s1600/nodejslogo.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-4hIOmLNpbpk/XY3xNCcxDaI/AAAAAAAEYfE/qCWHV8fBdrUmlayBqYPjG7TKXYblNLSpwCK4BGAYYCw/s450/nodejslogo.png&quot; title=&quot;nodejslogo.png&quot; alt=&quot;nodejslogo.png&quot; width=&quot;450&quot; height=&quot;450&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://www.codementor.io/teodeleanu/node-js-12-is-out-there-udhtjihhe&quot; target=&quot;_blank&quot;&gt;Codementor&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;我目前Windows 7 64位元作業系統上運作的是Node.js v10.16.1。請確保你的電腦有安裝10版以上的Node.js。你也可以到以下網址下載Node.js：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Node.js下載：&lt;a href=&quot;https://nodejs.org/en/download/&quot; target=&quot;_blank&quot;&gt;https://nodejs.org/en/download/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;版本控制 Git / Version control: Git&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-Xxv9Lpia9lc/XY3xNOwzyjI/AAAAAAAEYes/9BSO4wlMfPgp0g-KoIqKdVf_4yP-SUXAACK4BGAYYCw/s1600/git.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-Xxv9Lpia9lc/XY3xNOwzyjI/AAAAAAAEYes/9BSO4wlMfPgp0g-KoIqKdVf_4yP-SUXAACK4BGAYYCw/s450/git.png&quot; title=&quot;git.png&quot; alt=&quot;git.png&quot; width=&quot;450&quot; height=&quot;188&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖片來源：&lt;a href=&quot;https://blog.techbridge.cc/2018/01/17/learning-programming-and-coding-with-python-git-and-github-tutorial/&quot; target=&quot;_blank&quot;&gt;TechBridge&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;以下操作會用到版本控制Git。如果你有習慣操作的整合開發環境IDE，那它通常都已經內建了Git的功能，例如NetBeans的「&lt;a href=&quot;http://blog.pulipuli.info/2014/08/gitnetbeansnetbeansgit-clone-git.html&quot; target=&quot;_blank&quot;&gt;Git合作開發從NetBeans開始！NetBeans複製git專案教學&lt;/a&gt;」。&lt;/p&gt;
&lt;p&gt;此外，我也建議你在作業系統安裝好Git。畢竟Node.js裡面很多指令都會用到Git：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Git下載：&lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot;&gt;https://git-scm.com/downloads&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;準備好Node.js跟Git之後，接下來就來處理專案吧。&lt;/p&gt;
&lt;h3&gt;複製儲存庫 / Clone repository&lt;/h3&gt;&lt;p&gt;接下來我們要把位在GitHub上的&lt;a href=&quot;https://github.com/pulipulichen/20190927-SvelteJS-Webpack-Test&quot; target=&quot;_blank&quot;&gt;保存庫pulipulichen/20190927-SvelteJS-Webpack-Test&lt;/a&gt;複製到你的本機端中。&lt;/p&gt;
&lt;p&gt;請開啟你電腦的命令列，移動到合適的位置，然後執行以下指令：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;git&amp;nbsp;clone&amp;nbsp;https://github.com/pulipulichen/20190927-SvelteJS-Webpack-Test.git&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;稍待片刻，就能順利將GitHub保存庫裡面的程式碼下載到你的電腦中，保存在「20190927-SvelteJS-Webpack-Test」資料夾裡面。&lt;/p&gt;
&lt;p&gt;然後我們要移動到該目錄底下，請執行以下指令：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;cd&amp;nbsp;20190927-SvelteJS-Webpack-Test&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後我們就進行下一步吧。&lt;/p&gt;
&lt;h3&gt;安裝套件Install packages&lt;/h3&gt;&lt;p&gt;我們現在要移動到專案資料夾底下，並且安裝專案所需要的套件。&lt;/p&gt;
&lt;p&gt;請開啟你電腦的命令列，並執行以下指令：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;cd&amp;nbsp;20190927-SvelteJS-Webpack-Test
npm i&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-4KqzMrhaCcE/XY3xRwMVbMI/AAAAAAAEYf4/B-7x3yK-LNAU4CkwHWZ2mvJEkf31a3oNgCK4BGAYYCw/s1600/2019-0927-152759-ciwedoouowwyewdsw-je-TS-THe-ER-NTR.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-4KqzMrhaCcE/XY3xRwMVbMI/AAAAAAAEYf4/B-7x3yK-LNAU4CkwHWZ2mvJEkf31a3oNgCK4BGAYYCw/s450/2019-0927-152759-ciwedoouowwyewdsw-je-TS-THe-ER-NTR.png&quot; title=&quot;2019-0927-152759-ciwedoouowwyewdsw-je-TS-THe-ER-NTR.png&quot; alt=&quot;2019-0927-152759-ciwedoouowwyewdsw-je-TS-THe-ER-NTR.png&quot; width=&quot;450&quot; height=&quot;294&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這樣子環境就配置好了。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;啟動服務 / Start up service&lt;/h2&gt;&lt;p&gt;現在我們要啟動Webpack，讓它編譯Svelte，並且運作測試用的伺服器。&lt;/p&gt;
&lt;p&gt;請開啟你電腦的命令列，並執行以下指令：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;npm&amp;nbsp;run&amp;nbsp;demo&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-uWKjVpeVS28/XY3xRyo9USI/AAAAAAAEYfo/DhxUjxhIVj40MHHxW2gO4ROj-N_z3gcmgCK4BGAYYCw/s1600/2019-0927-152911-upn-LS-build-Built-at-PM-Size-Chunks.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-uWKjVpeVS28/XY3xRyo9USI/AAAAAAAEYfo/DhxUjxhIVj40MHHxW2gO4ROj-N_z3gcmgCK4BGAYYCw/s450/2019-0927-152911-upn-LS-build-Built-at-PM-Size-Chunks.png&quot; title=&quot;2019-0927-152911-upn-LS-build-Built-at-PM-Size-Chunks.png&quot; alt=&quot;2019-0927-152911-upn-LS-build-Built-at-PM-Size-Chunks.png&quot; width=&quot;450&quot; height=&quot;294&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然後打開你的瀏覽器，進入以下網址：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;http://localhost:8080/&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-vc-Q-GEeIKo/XY3xR0dQuNI/AAAAAAAEYf8/aFc5AvlPCacUHg8jsOPbscMnpNw2OYBLwCK4BGAYYCw/s1600/2019-0927-153441-mm.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-vc-Q-GEeIKo/XY3xR0dQuNI/AAAAAAAEYf8/aFc5AvlPCacUHg8jsOPbscMnpNw2OYBLwCK4BGAYYCw/s450/2019-0927-153441-mm.png&quot; title=&quot;2019-0927-153441-mm.png&quot; alt=&quot;2019-0927-153441-mm.png&quot; width=&quot;450&quot; height=&quot;303&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這樣就表示整個專案順利運作了。&lt;/p&gt;
&lt;h3&gt;&lt;b&gt;修改專案 /&amp;nbsp;&lt;/b&gt;Try to modify svelte files&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-iZWesP1hwag/XY3xRwMMXcI/AAAAAAAEYgA/3ONjeRTkd188RsNn_P9ANH0w22E5BnllQCK4BGAYYCw/s1600/2019-0927-153534-io-amgH-Organize-opm-New-der-Be.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-iZWesP1hwag/XY3xRwMMXcI/AAAAAAAEYgA/3ONjeRTkd188RsNn_P9ANH0w22E5BnllQCK4BGAYYCw/s450/2019-0927-153534-io-amgH-Organize-opm-New-der-Be.png&quot; title=&quot;2019-0927-153534-io-amgH-Organize-opm-New-der-Be.png&quot; alt=&quot;2019-0927-153534-io-amgH-Organize-opm-New-der-Be.png&quot; width=&quot;450&quot; height=&quot;277&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Svelte程式碼都放在「src」資料夾底下。你可以嘗試修改這些檔案，網頁伺服器上會立刻顯示修改完的結果。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-YI4aqDByROs/XY3xR-T1YFI/AAAAAAAEYgE/Z3fhJ3UWSOontxpJIbyRNy24i6iPJF6wgCK4BGAYYCw/s1600/2019-0927-153350-EF-ppsvele-Notepads-EE-BEE-REO-WAY.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-YI4aqDByROs/XY3xR-T1YFI/AAAAAAAEYgE/Z3fhJ3UWSOontxpJIbyRNy24i6iPJF6wgCK4BGAYYCw/s450/2019-0927-153350-EF-ppsvele-Notepads-EE-BEE-REO-WAY.png&quot; title=&quot;2019-0927-153350-EF-ppsvele-Notepads-EE-BEE-REO-WAY.png&quot; alt=&quot;2019-0927-153350-EF-ppsvele-Notepads-EE-BEE-REO-WAY.png&quot; width=&quot;450&quot; height=&quot;334&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;舉例來說，我在&lt;a href=&quot;https://github.com/pulipulichen/20190927-SvelteJS-Webpack-Test/blob/master/src/App.svelte&quot; target=&quot;_blank&quot;&gt;App.svelte&lt;/a&gt;樣式設定&amp;lt;style&amp;gt;中，將h1標籤的顏色改成綠色(green)，並儲存檔案。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-zKt5X4UaT30/XY3xR_t60GI/AAAAAAAEYf0/G4uO4ta_bRUxMjdetwUBHvgCdWVoHVkvwCK4BGAYYCw/s1600/2019-0927-153749-SUCHE-eoanea-localhost-TOT.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-zKt5X4UaT30/XY3xR_t60GI/AAAAAAAEYf0/G4uO4ta_bRUxMjdetwUBHvgCdWVoHVkvwCK4BGAYYCw/s450/2019-0927-153749-SUCHE-eoanea-localhost-TOT.png&quot; title=&quot;2019-0927-153749-SUCHE-eoanea-localhost-TOT.png&quot; alt=&quot;2019-0927-153749-SUCHE-eoanea-localhost-TOT.png&quot; width=&quot;450&quot; height=&quot;303&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;回到瀏覽器來看，你會看到h1標籤的字體顏色立刻更新了。這種即時更新的效果就是&lt;a href=&quot;https://github.com/sveltejs/svelte-loader&quot; target=&quot;_blank&quot;&gt;Svelte熱重載(HotReload)&lt;/a&gt;的功能，我們就能自由修改Svelte程式，並立即檢視效果了。&lt;/p&gt;
&lt;p&gt;附帶一提，如果程式寫錯的話，畫面會出現一片白喔。這時候我們可以在剛剛執行啟動服務的命令列裡面看看錯誤訊息。&lt;/p&gt;
&lt;p&gt;到這裡為止，基本的Svelte已經可以正常運作了，我們也能自由修改想要的功能囉。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;Svelte的使用感想 / Thoughts to Svelte&lt;/h2&gt;&lt;p&gt;我之前幾個專案都是用&lt;a href=&quot;http://blog.pulipuli.info/2019/09/autoitelectron-diy-tools-from-autoit-to.html&quot; target=&quot;_blank&quot;&gt;Vue.js加上Webpack&lt;/a&gt;開發，現在摸索Svelte的時候，自然就會把它跟Vue.js來做比較。Svelte能夠做到Vue.js的許多功能，例如最基本的元件封裝和元件之間的資料交換。但Vue.js有些能協助大型專案開發的功能，卻是Svelte所欠缺的弱項。&lt;/p&gt;
&lt;p&gt;以下先從強項的地方開始聊起，再來談談我覺得Svelte的不足之處。&lt;/p&gt;
&lt;h3&gt;強項 / Strength&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-ppeDiEweZ6A/XY3xVtbM2UI/AAAAAAAEYgU/U2Pi3slwa7MLZOU8ZVTK9uLnA18UNSArwCK4BGAYYCw/s1600/2019-0927-155555-BE-Smw-uuy-MagcKoK-IGKoK-import.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-ppeDiEweZ6A/XY3xVtbM2UI/AAAAAAAEYgU/U2Pi3slwa7MLZOU8ZVTK9uLnA18UNSArwCK4BGAYYCw/s450/2019-0927-155555-BE-Smw-uuy-MagcKoK-IGKoK-import.png&quot; title=&quot;2019-0927-155555-BE-Smw-uuy-MagcKoK-IGKoK-import.png&quot; alt=&quot;2019-0927-155555-BE-Smw-uuy-MagcKoK-IGKoK-import.png&quot; width=&quot;450&quot; height=&quot;342&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Svelte最大的特點就是「&lt;a href=&quot;https://svelte.dev/blog/write-less-code&quot; target=&quot;_blank&quot;&gt;Write less code&lt;/a&gt;」，需要撰寫的程式碼更少了。相較於&lt;a href=&quot;https://vuejs.org/v2/guide/single-file-components.html&quot; target=&quot;_blank&quot;&gt;Vue.js要求特定架構&lt;/a&gt;，像是data、prop、methods等等，Svelte的寫法更為直覺。這樣子可以降低上手的門檻，也可避免很多拼錯字等低級錯誤。&lt;/p&gt;
&lt;p&gt;要知道，我在Vue.js裡面常常把要寫在methods的方法寫到外面去，或是要新增一個變數時，還得找到data裡面設定，用起來欠缺彈性。這些問題不時困擾著我。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-uSDwfg9DP0M/XY3xVrVKDWI/AAAAAAAEYgQ/GAMTeTymyHw0nLfyBM6R-NPiLBo5O_i-ACK4BGAYYCw/s1600/anime.gif&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-uSDwfg9DP0M/XY3xVrVKDWI/AAAAAAAEYgQ/GAMTeTymyHw0nLfyBM6R-NPiLBo5O_i-ACK4BGAYYCw/s450/anime.gif&quot; title=&quot;anime.gif&quot; alt=&quot;anime.gif&quot; width=&quot;450&quot; height=&quot;284&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另一個強項就是即時熱重載(Hot Reload)的功能。理論上它並不是只是單純重新載入修改後的程式碼，而是可以保留現在程式運作的狀態，只更新我們改過的部分。不過實際上運作起來，好像還是會把整個網頁重新載入的樣子，不知道是我哪裡設定錯誤了。&lt;/p&gt;
&lt;p&gt;老實說，熱重載並不是Svelte的獨門特色，理論上&lt;a href=&quot;https://vue-loader-v14.vuejs.org/zh-cn/features/hot-reload.html&quot; target=&quot;_blank&quot;&gt;Vue.js應該也有熱重載的能力&lt;/a&gt;。但我之前研究了一陣子，並沒能在Webpack和Vue.js的組合下順利啟動熱重載。倒是NetBeans跟&lt;a href=&quot;https://chrome.google.com/webstore/detail/netbeans-connector/hafdlehgocfcodbgjnpecfajgkeejnaa&quot; target=&quot;_blank&quot;&gt;Chrome擴充套件&lt;/a&gt;搭配運作的&lt;a href=&quot;http://wiki.netbeans.org/LiveReload&quot; target=&quot;_blank&quot;&gt;LiveReload&lt;/a&gt;，就達到儲存時自動重新載入的效果。&lt;/p&gt;
&lt;h3&gt;弱項 / Weakness&lt;/h3&gt;&lt;p&gt;雖然Svelte初期寫起來很容易上手，但是要開發的大型專案的話，許多不足之處就浮現出來了。&lt;/p&gt;
&lt;p&gt;第一個問題是對於圖片檔案的整合。我們常常會在CSS或是HTML程式碼裡面用到圖片。在Webpack與Vue.js的組合中，我們可以把圖片抽取出來擺到其他地方、修改路徑，使得編譯完的檔案依然能夠順利連到該圖片。理論上換到Webpack跟Svelte之後，這件事情應該也要能夠順利運作，但我卻一直沒辦法成功。&lt;/p&gt;
&lt;p&gt;當然，我們也可以乾脆就固定圖片的路徑，一開始就以編譯後的位置來設定路徑，這樣就能避免這個問題。因此這個問題仍算是小事。&lt;/p&gt;
&lt;p&gt;第二個問題是樣式檔支援的語言。Svelte的樣式檔採用的是CSS，但我現在不太喜歡直接撰寫CSS語法，更偏好使用&lt;a href=&quot;http://lesscss.org/&quot; target=&quot;_blank&quot;&gt;LESS&lt;/a&gt;。我試著找了一陣子，目前Svelte的樣式檔似乎還沒支援LESS，只能用最基本的CSS，&lt;a href=&quot;https://svelte.dev/docs#style&quot; target=&quot;_blank&quot;&gt;搭配Svelte特有的語法來撰寫&lt;/a&gt;，但能夠提供的功能並不多。我看&lt;a href=&quot;https://stackoverflow.com/a/49277754/6645399&quot; target=&quot;_blank&quot;&gt;stackoverflow&lt;/a&gt;跟&lt;a href=&quot;https://github.com/sveltejs/svelte-loader/issues/41&quot; target=&quot;_blank&quot;&gt;svelte-loader&lt;/a&gt;有提到可以改用sass()的做法，不過還不確定這能不能用在LESS上。&lt;/p&gt;
&lt;p&gt;當然，這也許是Svelte希望我們把每個組件都做得很小，小到用基本的CSS就能搞定了。這樣好或不好就是見仁見智，至少我還是比較喜歡用LESS來撰寫樣式。&lt;/p&gt;
&lt;p&gt;第三個問題，也是目前我覺得比較麻煩的問題是，Svelte的邏輯腳本&amp;lt;script&amp;gt;、樣式&amp;lt;style&amp;gt;、HTML呈現的三個部分，目前仍不能拆開成獨立檔案。通常在開發比較複雜的專案時，我們需要來回比對邏輯腳本、樣式以及對應呈現之間的不同。如果只有一個檔案，那就得要拉動卷軸來回比對，或是要用能夠同時在不同視窗編輯同一個檔案的編輯器，實在是很麻煩。&lt;/p&gt;
&lt;p&gt;如果能夠把各個部分從Svelte中獨立成單一檔案的話，另一個好處是，整合開發環境IDE更能夠瞭解該檔案的架構。例如我在撰寫Vue.js的時候，喜歡將LESS樣式的部分獨立成.less檔案，而NetBeans能夠理解LESS的語法，提供標亮、大綱導航與語法自動補完的功能，非常方便。相較之下，在同一個檔案，NetBeans就無法完全理解Svelte的寫法，只能把它當作普通的HTML來看。&lt;/p&gt;
&lt;p&gt;最後一個問題是對於Svelte太過簡單的隱憂。我在撰寫Vue.js的時候，時常會用到一些Vue.js以外的JavaScript框架，例如&lt;a href=&quot;https://semantic-ui.com/&quot; target=&quot;_blank&quot;&gt;Semantic UI&lt;/a&gt;。因為Vue.js會複寫Semantic UI付與元素的事件，所以最好的方法，是把這些額外框架所產生的元素與事件，與Vue.js框架區隔開來，然後用Vue.js額外做管理。這種做法是因為Vue.js有明確的寫法和範圍，所以我們可以做到這件事情。但Svelte這種簡潔的寫法，我就不太確定能不能如法炮製。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;結語：Svelte仍有發展空間 / Conclusion:&amp;nbsp;Svelte still needs to develop&lt;/h2&gt;&lt;p&gt;2016年&lt;a href=&quot;https://svelte.dev/&quot; target=&quot;_blank&quot;&gt;Svelte&lt;/a&gt;誕生，2018年4月18日發佈第二版，而目前最新的Svelte第三版則是於2019年4月22發佈。相較之下，&lt;a href=&quot;https://www.wikiwand.com/zh-tw/Vue.js&quot; target=&quot;_blank&quot;&gt;Vue.js&lt;/a&gt;第一版於2014年2月發佈，&lt;a href=&quot;https://www.wikiwand.com/zh-tw/React&quot; target=&quot;_blank&quot;&gt;React&lt;/a&gt;第一版於2013年發佈，&lt;a href=&quot;https://www.wikiwand.com/zh-tw/Angular&quot; target=&quot;_blank&quot;&gt;Angular&lt;/a&gt;更是早在2010年就已經誕生。對比這些前端框架的老前輩們，Svelte有著年輕帶有的各種改革熱情，但也有許多不夠成熟的地方。&lt;/p&gt;
&lt;p&gt;評估至此，我目前仍決定還是繼續使用Vue.js跟Webpack的組合。不過，如果有朝一日Svelte能夠解決上述問題和疑慮的話，我會非常樂意轉用Svelte來開發。畢竟Svelte所強調的Write less code特色，正是符合&lt;a href=&quot;http://threevirtues.com/&quot; target=&quot;_blank&quot;&gt;程式設計師的三大美德(three great virtues of a programmer)&lt;/a&gt;中的怠惰(Laziness)和不耐煩(Impatience)呢。&lt;/p&gt;
&lt;hr&gt;&lt;p&gt;那麼這次對於Svelte的試作和看法就講到就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你用過那些網頁前端框架呢？Angular、React、Vue，還是其他的框架呢？&lt;/li&gt;&lt;li&gt;你喜歡網頁前端框架的什麼特色呢？資料雙向綁定？組件化？還是其他特色呢？&lt;/li&gt;&lt;li&gt;許多網頁前端框架都需要搭配編譯器或打包器，才能發揮它的最大能力。你通常是用什麼打包器呢？&lt;a href=&quot;https://webpack.js.org&quot; target=&quot;_blank&quot;&gt;Webpack&lt;/a&gt;？&lt;a href=&quot;https://gulpjs.com&quot; target=&quot;_blank&quot;&gt;Gulp&lt;/a&gt;？&lt;a href=&quot;https://parceljs.org&quot; target=&quot;_blank&quot;&gt;Parcel&lt;/a&gt;？&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/2011264714529118552/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/09/svelte-preliminary-study-of-svelte.html#comment-form' title='8 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/2011264714529118552'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/2011264714529118552'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/09/svelte-preliminary-study-of-svelte.html' title='初探網頁前端框架Svelte / Preliminary Study of Svelte, a Front-end Framework'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//3.bp.blogspot.com/-iGFekRItwD0/XY3xOMe_CCI/AAAAAAAEYfU/fs2mj1VV3uImKNXejgIAnP2W64vyCgTsgCK4BGAYYCw/s72-c/6-Svelte_Preliminary_Study_of_Svelte.png" height="72" width="72"/><thr:total>8</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-1190696194783481356</id><published>2019-09-26T00:44:00.001+08:00</published><updated>2019-09-26T00:44:12.452+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="AutoIt"/><category scheme="http://www.blogger.com/atom/ns#" term="Programming/AutoIt"/><title type='text'>打造獨特的EXE檔案：在AutoIt編譯時加上圖示 / Compile AutoIt into an EXE file with specific Icon</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-Ql-NeJaY3w8/XYuZAo1xW7I/AAAAAAAEYXE/_vXN5UZd-F4dv64MPqs8zXZIJtVcGjlWgCK4BGAYYCw/s1600/5-EXE_AutoIt_Compile_AutoIt_into_an.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-Ql-NeJaY3w8/XYuZAo1xW7I/AAAAAAAEYXE/_vXN5UZd-F4dv64MPqs8zXZIJtVcGjlWgCK4BGAYYCw/s1600/5-EXE_AutoIt_Compile_AutoIt_into_an.png&quot; title=&quot;5-EXE_AutoIt_Compile_AutoIt_into_an.png&quot; alt=&quot;5-EXE_AutoIt_Compile_AutoIt_into_an.png&quot; class=&quot;original-size&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;哈嚕~~我是非常喜歡&lt;a href=&quot;https://chrome.google.com/webstore/detail/user-javascript-and-css/nbhcbdghjpllgmfilhnhkllmkecfmpld&quot; target=&quot;_blank&quot;&gt;為各個網站加入特製腳本跟樣式表&lt;/a&gt;、讓網站用起來更順手的布丁。今天要來介紹的是如何為AutoIt編譯的exe檔案指定特定圖示的做法。做法很簡單，只要在開頭加上「&lt;u&gt;&lt;font color=&quot;#ff0000&quot;&gt;#pragma compile(Icon, &#39;icon.ico&#39;)&lt;/font&gt;&lt;/u&gt;」語法即可。讓我們以&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util/blob/3a5b143714f3e762fcfcf0d066ea7bc10a908985/archive-util-7z.au3#L7&quot; target=&quot;_blank&quot;&gt;archive-util-7z.au3&lt;/a&gt;為例子，看看怎麽在AutoIt程式裡面加上指定圖示的語法吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;&lt;hr&gt;&lt;h2&gt;AutoIt預設編譯圖示 / Default icon of AutoIt&#39;s exe file&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-aMPw2oi2o90/XYuZAOD1orI/AAAAAAAEYW4/eLmx_IhsVEkFVjFyLKyPVjy44svgKwRzwCK4BGAYYCw/s1600/2019-0925-234647.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-aMPw2oi2o90/XYuZAOD1orI/AAAAAAAEYW4/eLmx_IhsVEkFVjFyLKyPVjy44svgKwRzwCK4BGAYYCw/s119/2019-0925-234647.png&quot; title=&quot;2019-0925-234647.png&quot; alt=&quot;2019-0925-234647.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;預設AutoIt所編譯的exe檔案，並不帶圖示。產生出來的exe並沒有鑑別度，不能看圖示來判斷這是什麼程式，只能看檔案名稱而已。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-lXNP67WF9B8/XYuY_0-RJUI/AAAAAAAEYWw/YAsQBpMJfZMxi2BPgcl-efH2MBSe-iCQACK4BGAYYCw/s1600/2019-0925-234853-AutZExe-Aut-Script-to-EXE-Converter.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-lXNP67WF9B8/XYuY_0-RJUI/AAAAAAAEYWw/YAsQBpMJfZMxi2BPgcl-efH2MBSe-iCQACK4BGAYYCw/s450/2019-0925-234853-AutZExe-Aut-Script-to-EXE-Converter.png&quot; title=&quot;2019-0925-234853-AutZExe-Aut-Script-to-EXE-Converter.png&quot; alt=&quot;2019-0925-234853-AutZExe-Aut-Script-to-EXE-Converter.png&quot; width=&quot;450&quot; height=&quot;314&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;雖然AutoIt的&lt;a href=&quot;https://www.autoitscript.com/autoit3/docs/intro/compiler.htm&quot; target=&quot;_blank&quot;&gt;Aut2Exe&lt;/a&gt;裡面有Custom Icon的選項，可以讓我們將AutoIt的原始碼au3轉換成exe時，加入特定的&lt;a href=&quot;https://www.wikiwand.com/en/ICO_(file_format)#/targetText=The%20ICO%20file%20format%20is,they%20may%20be%20scaled%20appropriately.&quot; target=&quot;_blank&quot;&gt;ico格式圖示檔案&lt;/a&gt;。不過開發AutoIt的au3檔案時，我們通常是在&lt;a href=&quot;https://www.autoitscript.com/site/autoit-script-editor/&quot; target=&quot;_blank&quot;&gt;SciTE-Lite編輯器&lt;/a&gt;裡面進行編輯和編譯等工作。如果還要額外開啟Aut2Exe才能加入圖示，那就會拖慢開發效率了。&lt;/p&gt;
&lt;p&gt;還好，AutoIt提供了直接在程式裡面加入圖示的語法，這樣子我們就能在編輯器裡面直接編譯，不用再勞煩Aut2Exe了。&lt;/p&gt;
&lt;hr&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;在AutoIt中加入指定圖示的語法 / Compile AutoIt with specific icon&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-a4ZPsgf0bms/XYuY__TZ8hI/AAAAAAAEYWo/MS8LoeFM8f4cqPWRMQ58520nvhJGT-SOQCK4BGAYYCw/s1600/2019-0925-232914-pulpulichen-AutoH-Archive-UtI-Code.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-a4ZPsgf0bms/XYuY__TZ8hI/AAAAAAAEYWo/MS8LoeFM8f4cqPWRMQ58520nvhJGT-SOQCK4BGAYYCw/s450/2019-0925-232914-pulpulichen-AutoH-Archive-UtI-Code.png&quot; title=&quot;2019-0925-232914-pulpulichen-AutoH-Archive-UtI-Code.png&quot; alt=&quot;2019-0925-232914-pulpulichen-AutoH-Archive-UtI-Code.png&quot; width=&quot;450&quot; height=&quot;449&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util/blob/3a5b143714f3e762fcfcf0d066ea7bc10a908985/archive-util-7z.au3#L7&quot; target=&quot;_blank&quot;&gt;archive-util-7z.au3: 加入圖示語法&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果想要讓AutoIT的程式碼 (副檔名為au3) 在編譯時能夠產生具有特定圖示的exe執行檔，那只要在程式碼開頭加上一段語法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;autoit&quot;&gt;#pragma&amp;nbsp;compile(Icon,&amp;nbsp;&#39;&lt;font color=&quot;#ff0000&quot; style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;icon.ico&lt;/font&gt;&#39;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;紅字黃底的地方是.ico格式&lt;/font&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;圖示檔案的路徑&lt;/font&gt;，可以用跟此au3檔案的相對路徑來表示。&lt;/p&gt;
&lt;p&gt;舉例來說，我在archive-util-7z.au3中加入圖示的語法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;autoit&quot;&gt;#pragma&amp;nbsp;compile(Icon,&amp;nbsp;&#39;&lt;font color=&quot;#ff0000&quot; style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;icons/7zip.svg.ico&lt;/font&gt;&#39;)&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/pulipulichen/AutoIt-Archive-Util/blob/master/icons/7zip.svg.ico&quot; target=&quot;_blank&quot;&gt;GitHub儲存庫中的7zip.svg.ico&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;這個檔案我把它轉換成PNG格式之後呈現如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-fPaMOW8seGo/XYuZAPny1LI/AAAAAAAEYW0/zgbK1gZ9f9w-YzEgRdZdf6iGFqjQnc8EwCK4BGAYYCw/s1600/7zip.svg.png&quot;&gt;&lt;img src=&quot;//4.bp.blogspot.com/-fPaMOW8seGo/XYuZAPny1LI/AAAAAAAEYW0/zgbK1gZ9f9w-YzEgRdZdf6iGFqjQnc8EwCK4BGAYYCw/s256/7zip.svg.png&quot; title=&quot;7zip.svg.png&quot; alt=&quot;7zip.svg.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(圖示來源：&lt;a href=&quot;https://icons8.com/icon/55192/7zip&quot; target=&quot;_blank&quot;&gt;Icons&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;編譯成EXE檔案之後，呈現結果如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-Vjbp-9BkXqg/XYuZADO9C6I/AAAAAAAEYXA/QVCSuI-gIPw0xXm4_YfqBWpOjS8eb2JeACK4BGAYYCw/s1600/2019-0925-234248-archive-util-Tzex.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-Vjbp-9BkXqg/XYuZADO9C6I/AAAAAAAEYXA/QVCSuI-gIPw0xXm4_YfqBWpOjS8eb2JeACK4BGAYYCw/s126/2019-0925-234248-archive-util-Tzex.png&quot; title=&quot;2019-0925-234248-archive-util-Tzex.png&quot; alt=&quot;2019-0925-234248-archive-util-Tzex.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最後就能產生帶有獨特圖示的exe執行檔了。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;圖示檔的選擇 / How to choose icon?&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-norn1moxgs0/XYuZIr-9w1I/AAAAAAAEYXk/NuaYOjyzLDQVFWDwpVTM-BEdOTuGklJiACK4BGAYYCw/s1600/2019-09-26_000049.png&quot;&gt;&lt;img src=&quot;//1.bp.blogspot.com/-norn1moxgs0/XYuZIr-9w1I/AAAAAAAEYXk/NuaYOjyzLDQVFWDwpVTM-BEdOTuGklJiACK4BGAYYCw/s450/2019-09-26_000049.png&quot; title=&quot;2019-09-26_000049.png&quot; alt=&quot;2019-09-26_000049.png&quot; width=&quot;450&quot; height=&quot;363&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://findicons.com/search/7-zip#ajax&quot; target=&quot;_blank&quot;&gt;findicons&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;瞭解了AutoIt如何加上圖示之後，接下來我們可以來想想要加入什麼圖示。這邊我推薦大家可以先到開放自由的findicons圖示圖庫找尋合適的圖示：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;findicons:&amp;nbsp;&lt;a href=&quot;https://findicons.com/&quot; target=&quot;_blank&quot;&gt;https://findicons.com/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;為什麼選擇findicons呢？這是因為AutoIt所編譯的exe檔案是在Windows環境下運作，而早期的Windows (包括Windows 7)會用到的圖示解析度大概只有32x32、16x16。許多圖示圖庫網站所收錄的高解析度圖示，在Windows環境中縮小來看，反而會變得更為模糊。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-8eH-p34Yars/XYuZIm2PmZI/AAAAAAAEYXs/yKKra1HibFYbvcfz3P0EtNwd1PWg6KXDACK4BGAYYCw/s1600/2019-0926-000644.png&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px; font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-8eH-p34Yars/XYuZIm2PmZI/AAAAAAAEYXs/yKKra1HibFYbvcfz3P0EtNwd1PWg6KXDACK4BGAYYCw/s450/2019-0926-000644.png&quot; title=&quot;2019-0926-000644.png&quot; alt=&quot;2019-0926-000644.png&quot; width=&quot;450&quot; height=&quot;363&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;findicons提供了「Filter Menu」，可以篩選圖示尺寸(Size Range)，這可以讓我們很輕易找到32px大小以下的圖示。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-keFW74qdXec/XYuZIlQThPI/AAAAAAAEYXg/jHa72WXfTVIhCnav9Izt4DOMP3JhkiM8ACK4BGAYYCw/s1600/2019-0926-000848.png&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-keFW74qdXec/XYuZIlQThPI/AAAAAAAEYXg/jHa72WXfTVIhCnav9Izt4DOMP3JhkiM8ACK4BGAYYCw/s450/2019-0926-000848.png&quot; title=&quot;2019-0926-000848.png&quot; alt=&quot;2019-0926-000848.png&quot; width=&quot;450&quot; height=&quot;323&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此外，findicons的很多圖示也同時提供了ICO格式的下載檔案，省下檔案格式轉換的手續。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-zoaWefbjZRE/XYuZItmbR4I/AAAAAAAEYXw/hFGufH0UkUgNHBXW3K4uIp3baQH95hH_QCK4BGAYYCw/s1600/2019-0926-001030-or-Overview-Other-Size-Icon-Pack.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-zoaWefbjZRE/XYuZItmbR4I/AAAAAAAEYXw/hFGufH0UkUgNHBXW3K4uIp3baQH95hH_QCK4BGAYYCw/s450/2019-0926-001030-or-Overview-Other-Size-Icon-Pack.png&quot; title=&quot;2019-0926-001030-or-Overview-Other-Size-Icon-Pack.png&quot; alt=&quot;2019-0926-001030-or-Overview-Other-Size-Icon-Pack.png&quot; width=&quot;450&quot; height=&quot;323&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最後findicons最重要的特色，就是大部分圖示都是開放授權，可以免費自由下載與使用。每個圖示的授權條款可能不大相同，以&lt;a href=&quot;https://findicons.com/icon/88988/7zip&quot; target=&quot;_blank&quot;&gt;7Zip icons, free icons in QUIET, (Icon Search Engine)&lt;/a&gt;這個圖示為例，作者&lt;a href=&quot;http://tidav.deviantart.com/&quot; target=&quot;_blank&quot;&gt;Tidav&lt;/a&gt;為它設定的授權為Freeware 自由軟體，表示大家可以安心下載與使用。&lt;/p&gt;
&lt;h3&gt;如何將圖片轉換成ico圖示檔格式 / How to convert image to ico format&lt;/h3&gt;&lt;p&gt;AutoIt只能接受ico格式的圖片。如果你手邊的圖片格式不是ico，那就得要透過其他方法來將圖片轉換成ico格式。我在Windows本機端常用的&lt;a href=&quot;https://www.xnview.com/en/xnviewmp/&quot; target=&quot;_blank&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;圖片檢視器XnView MP&lt;/a&gt;可以將主流圖片格式轉換成ico格式，不過其實這件事情也不需要特地安裝軟體，只要使用線上的轉換器就可以做到了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-ZI-Lkt82kAs/XYuZIr5oJJI/AAAAAAAEYX0/YuIJYbvpSJosmmNFt8cHRhXPCl3U9TmWACK4BGAYYCw/s1600/2019-0926-001439-Converto-Convert-OCR-API-Pricing.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-ZI-Lkt82kAs/XYuZIr5oJJI/AAAAAAAEYX0/YuIJYbvpSJosmmNFt8cHRhXPCl3U9TmWACK4BGAYYCw/s450/2019-0926-001439-Converto-Convert-OCR-API-Pricing.png&quot; title=&quot;2019-0926-001439-Converto-Convert-OCR-API-Pricing.png&quot; alt=&quot;2019-0926-001439-Converto-Convert-OCR-API-Pricing.png&quot; width=&quot;450&quot; height=&quot;287&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://convertio.co/png-ico/&quot; target=&quot;_blank&quot;&gt;Convertio&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Convertio:&amp;nbsp;&lt;a href=&quot;https://convertio.co/png-ico/&quot;&gt;https://convertio.co/png-ico/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;這邊我推薦大家使用的是Convertio。介面美觀，操作直覺，簡單易用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-EAyIHTEIi3I/XYuZIgwrSlI/AAAAAAAEYXo/h9FmNN1-Fe8CtGeJmFfnZjf1q32M902NwCK4BGAYYCw/s1600/2019-0926-002120-Convero-Convert-OCR-API-Pricing.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-EAyIHTEIi3I/XYuZIgwrSlI/AAAAAAAEYXo/h9FmNN1-Fe8CtGeJmFfnZjf1q32M902NwCK4BGAYYCw/s450/2019-0926-002120-Convero-Convert-OCR-API-Pricing.png&quot; title=&quot;2019-0926-002120-Convero-Convert-OCR-API-Pricing.png&quot; alt=&quot;2019-0926-002120-Convero-Convert-OCR-API-Pricing.png&quot; width=&quot;450&quot; height=&quot;287&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我們可以直接把想要轉換的圖片拖曳到Convertio網頁上。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-ch1ewyc_xz8/XYuZQNRuNjI/AAAAAAAEYYI/wK6GXFzPb64mId2IB15TgtKqPex17ycnQCK4BGAYYCw/s1600/2019-0926-002223-Convertio-coer-ue-we-ne-uaw-aun.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-ch1ewyc_xz8/XYuZQNRuNjI/AAAAAAAEYYI/wK6GXFzPb64mId2IB15TgtKqPex17ycnQCK4BGAYYCw/s450/2019-0926-002223-Convertio-coer-ue-we-ne-uaw-aun.png&quot; title=&quot;2019-0926-002223-Convertio-coer-ue-we-ne-uaw-aun.png&quot; alt=&quot;2019-0926-002223-Convertio-coer-ue-we-ne-uaw-aun.png&quot; width=&quot;450&quot; height=&quot;142&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;拖曳上去的圖片會加入待轉換的列表中，請按下右下角的「Convert」按鈕。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-mak1Y46jlbA/XYuZQL1fPVI/AAAAAAAEYYE/tZi3u_EoT4Yd4DZCvw6q9x4h2A_qakzSACK4BGAYYCw/s1600/2019-0926-002322-Convertio-coer-ue-we-ne-uaw-San.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-mak1Y46jlbA/XYuZQL1fPVI/AAAAAAAEYYE/tZi3u_EoT4Yd4DZCvw6q9x4h2A_qakzSACK4BGAYYCw/s450/2019-0926-002322-Convertio-coer-ue-we-ne-uaw-San.png&quot; title=&quot;2019-0926-002322-Convertio-coer-ue-we-ne-uaw-San.png&quot; alt=&quot;2019-0926-002322-Convertio-coer-ue-we-ne-uaw-San.png&quot; width=&quot;450&quot; height=&quot;144&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;稍待片刻。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-J0OgJtV7Mnc/XYuZQQIsA6I/AAAAAAAEYYQ/Vl9PGTZS2pI-gmrjYBXTF_0IeEJZcP5oQCK4BGAYYCw/s1600/2019-0926-002420-Convertio-coer-ue-we-ne-wen-mw-ico.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-J0OgJtV7Mnc/XYuZQQIsA6I/AAAAAAAEYYQ/Vl9PGTZS2pI-gmrjYBXTF_0IeEJZcP5oQCK4BGAYYCw/s450/2019-0926-002420-Convertio-coer-ue-we-ne-wen-mw-ico.png&quot; title=&quot;2019-0926-002420-Convertio-coer-ue-we-ne-wen-mw-ico.png&quot; alt=&quot;2019-0926-002420-Convertio-coer-ue-we-ne-wen-mw-ico.png&quot; width=&quot;450&quot; height=&quot;135&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很快就轉換好了，接下來按「Download」就可以取得ico格式的圖檔囉。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;結語 / In closing&lt;/h2&gt;&lt;p&gt;這篇講的事情其實很小，可以用「AutoIt裡面加入『&lt;u&gt;&lt;font color=&quot;#ff0000&quot;&gt;#pragma compile(Icon, &#39;icon.ico&#39;)&lt;/font&gt;&lt;/u&gt;』語法就能在編譯時加入圖示」一句話來解決。&lt;/p&gt;
&lt;p&gt;那為什麼我要寫這篇呢？&lt;/p&gt;
&lt;p&gt;這是因為我常常忘記這個語法，而直接Google搜尋，又常常會找到一些似是而非的語法，像是「&lt;a href=&quot;https://www.autoitscript.com/forum/topic/113273-adding-an-icon-for-executable/?do=findComment&amp;amp;comment=792950&quot; target=&quot;_blank&quot;&gt;Adding an icon for executable?&lt;/a&gt;」的「#AutoIt3Wrapper_icon=your_icon.ico」，這個語法實際上沒有效果。其他網頁也很少看到正確的加入圖示語法。找來找去，最後我還是得回去翻以前寫的au3程式碼。&lt;/p&gt;
&lt;p&gt;最後我終於忍不住了，還是把這件事情寫成一篇文章。希望未來直接Google就能找到AutoIt加入圖示的正確教學，造福AutoIt的開發者吧。



&lt;/p&gt;
&lt;hr&gt;&lt;p&gt;那麼這次為AutoIt加上圖示的教學就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你用過AutoIt開發程式嗎？你都是怎麽把exe執行檔加上圖示呢？&lt;/li&gt;&lt;li&gt;你最常用的圖示資料庫是什麼呢？你覺得它哪裡好用呢？&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/1190696194783481356/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/09/exeautoit-compile-autoit-into-exe-file.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/1190696194783481356'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/1190696194783481356'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/09/exeautoit-compile-autoit-into-exe-file.html' title='打造獨特的EXE檔案：在AutoIt編譯時加上圖示 / Compile AutoIt into an EXE file with specific Icon'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//1.bp.blogspot.com/-Ql-NeJaY3w8/XYuZAo1xW7I/AAAAAAAEYXE/_vXN5UZd-F4dv64MPqs8zXZIJtVcGjlWgCK4BGAYYCw/s72-c/5-EXE_AutoIt_Compile_AutoIt_into_an.png" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-16607461.post-3443334703160112724</id><published>2019-09-24T23:28:00.003+08:00</published><updated>2019-09-24T23:28:43.605+08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="NetBeans"/><category scheme="http://www.blogger.com/atom/ns#" term="Software/NetBeans"/><category scheme="http://www.blogger.com/atom/ns#" term="Tool/NetBeans"/><title type='text'>NetBeans整合GitHub Issues / Integrate GitHub Issues into NetBeans Tasks</title><content type='html'>&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-fyriojvAgpU/XYo1gmOlWHI/AAAAAAAEYP4/qDTYU1zvKuE5rRSaon8wBcymdmZtf6EMgCK4BGAYYCw/s1600/3-NetBeans_GitHub_Issues_Integrate.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-fyriojvAgpU/XYo1gmOlWHI/AAAAAAAEYP4/qDTYU1zvKuE5rRSaon8wBcymdmZtf6EMgCK4BGAYYCw/s1600/3-NetBeans_GitHub_Issues_Integrate.png&quot; title=&quot;3-NetBeans_GitHub_Issues_Integrate.png&quot; alt=&quot;3-NetBeans_GitHub_Issues_Integrate.png&quot; class=&quot;original-size&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大家晚安，我是電腦重灌後很多設定一天沒還原到位，就一天覺得渾身不對勁的布丁。今天要跟大家介紹的是NetBeans跟GitHub Issues的整合：&lt;a href=&quot;http://plugins.netbeans.org/plugin/57646/github-issues&quot; target=&quot;_blank&quot;&gt;GitHub Issues外掛&lt;/a&gt;。NetBeans可以透過安裝GitHub Issues外掛，再並加上一些設定，就能讓GitHub Issues問題回報系統整合到NetBeans之中。如果你使用NetBeans做開發、也用GitHub做版本控制的話，非常推薦你試試看這個功能。讓我們來看看怎麽做吧。&lt;/p&gt;
&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;&lt;hr&gt;&lt;h2&gt;NetBeans整合開發環境 / NetBeans IDE&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-xvREZAf4a0M/XYo1f6_pTqI/AAAAAAAEYPw/_LVuTeGEv6IUUIVGAK_ECNTfQMm6r1VLgCK4BGAYYCw/s1600/2019-0924-210841-About-QO-APACHE-NetBeans-NetBeans.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-xvREZAf4a0M/XYo1f6_pTqI/AAAAAAAEYPw/_LVuTeGEv6IUUIVGAK_ECNTfQMm6r1VLgCK4BGAYYCw/s450/2019-0924-210841-About-QO-APACHE-NetBeans-NetBeans.png&quot; title=&quot;2019-0924-210841-About-QO-APACHE-NetBeans-NetBeans.png&quot; alt=&quot;2019-0924-210841-About-QO-APACHE-NetBeans-NetBeans.png&quot; width=&quot;334&quot; height=&quot;450&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;NetBeans:&amp;nbsp;&lt;a href=&quot;https://netbeans.apache.org&quot; target=&quot;_blank&quot;&gt;https://netbeans.apache.org&lt;/a&gt;&lt;/li&gt;&lt;li&gt;下載：&lt;a href=&quot;https://netbeans.apache.org/download/index.html&quot;&gt;https://netbeans.apache.org/download/index.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;NetBeans是比普通的文字編輯器還要強大的&lt;a href=&quot;https://www.wikiwand.com/zh-tw/集成开发环境&quot; target=&quot;_blank&quot;&gt;整合開發環境(Integrated Development Environment)&lt;/a&gt;。它提供了語法和語義上的程式碼標亮，讓開發者容易重構程式碼。同時它還擁有許多好用的工具，能夠用於開發Java、PHP、Node.js以及各種程式語言中。NetBeans可以安裝在各種支援Java的作業系統上，包括Linux、Windows、Mac OSX和BSD。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-DNXbGGn_WeA/XYo1f7nbl6I/AAAAAAAEYPQ/rPs9s0L1S5g3TUBm9vCB6AYIcs1dYho1QCK4BGAYYCw/s1600/2019-0924-211749-Plugins-Gi-Avot-Ze-Dove-sled-rts.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-DNXbGGn_WeA/XYo1f7nbl6I/AAAAAAAEYPQ/rPs9s0L1S5g3TUBm9vCB6AYIcs1dYho1QCK4BGAYYCw/s450/2019-0924-211749-Plugins-Gi-Avot-Ze-Dove-sled-rts.png&quot; title=&quot;2019-0924-211749-Plugins-Gi-Avot-Ze-Dove-sled-rts.png&quot; alt=&quot;2019-0924-211749-Plugins-Gi-Avot-Ze-Dove-sled-rts.png&quot; width=&quot;450&quot; height=&quot;279&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NetBeans是以模組化架構建構而成，所以可以輕易安裝各種外掛套件，並有統一的更新和管理外掛的功能。&lt;/p&gt;
&lt;p&gt;雖然目前NetBeans已經轉移給Apache軟體基金會管理，最新版本為2019年7月發佈的11版功能更新。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;Step 1. 下載與安裝外掛 / Plugin download and install&lt;/h2&gt;&lt;h3&gt;NetBeans外掛 / NetBeans Plugins&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;NetBeans Plugin Portal:&amp;nbsp;&lt;a href=&quot;http://plugins.netbeans.org/PluginPortal/&quot; style=&quot;font-weight: 400; background-color: rgb(255, 255, 255);&quot;&gt;http://plugins.netbeans.org/PluginPortal/&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;除了NetBeans在Plugins功能中提供的預設列表之外，我們還能從&lt;a href=&quot;http://plugins.netbeans.org/PluginPortal/&quot; target=&quot;_blank&quot;&gt;NetBeans Plugin Portal&lt;/a&gt;找到各種好用的外掛，其中一個外掛就是本文要講的&lt;a href=&quot;http://plugins.netbeans.org/plugin/57646/github-issues&quot; target=&quot;_blank&quot;&gt;GitHub Issues&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;GitHub Issues外掛是讓NetBeans能夠支援&lt;a href=&quot;https://help.github.com/en/articles/about-issues&quot; target=&quot;_blank&quot;&gt;GitHub Issue Tracker&lt;/a&gt;的功能。Issues一般被翻譯做「待解決的問題」，有點類似系統的待辦事項的感覺。不過翻譯做「問題」好像很怪，一般大家還是會直接用issue稱呼它。&lt;/p&gt;
&lt;p&gt;繼續回到GitHub Issues外掛上，它提供的功能包括了建立新的issue、編輯issue、建立條件搜尋、編輯和刪除issue的評論(comment)、建立&lt;a href=&quot;https://help.github.com/en/articles/applying-labels-to-issues-and-pull-requests&quot; target=&quot;_blank&quot;&gt;標籤(label)&lt;/a&gt;和&lt;a href=&quot;https://help.github.com/en/articles/about-milestones&quot; target=&quot;_blank&quot;&gt;里程碑(milestone)&lt;/a&gt;。這邊許多功能都是直接對應&lt;a href=&quot;https://help.github.com/en/articles/about-issues&quot; target=&quot;_blank&quot;&gt;GitHub Issues&lt;/a&gt;的內建功能，如果你對這些功能不熟悉的話，那把GitHub Issues當作單純的待辦事項和討論區也是很好用的。&lt;/p&gt;
&lt;h3&gt;GitHub Issues外掛下載和安裝 / Download and install GitHub Issues plugin&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-5MPkGsj0bYM/XYo1f6vPT3I/AAAAAAAEYP0/19Y4Jl8Uxs8LTQbJyB4pBrL4rn6z4pPJACK4BGAYYCw/s1600/2019-0924-205639-NetBeans-netseans-oe-NetBeans-Prato.png&quot; style=&quot;color: rgb(35, 82, 124); outline: 0px;&quot;&gt;&lt;img src=&quot;//3.bp.blogspot.com/-5MPkGsj0bYM/XYo1f6vPT3I/AAAAAAAEYP0/19Y4Jl8Uxs8LTQbJyB4pBrL4rn6z4pPJACK4BGAYYCw/s450/2019-0924-205639-NetBeans-netseans-oe-NetBeans-Prato.png&quot; title=&quot;2019-0924-205639-NetBeans-netseans-oe-NetBeans-Prato.png&quot; alt=&quot;2019-0924-205639-NetBeans-netseans-oe-NetBeans-Prato.png&quot; width=&quot;450&quot; height=&quot;254&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;GitHub Issues下載網址：&lt;a href=&quot;http://plugins.netbeans.org/plugin/57646/github-issues&quot; target=&quot;_blank&quot;&gt;http://plugins.netbeans.org/plugin/57646/github-issues&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;首先我們先開啟GitHub Issues外掛的網頁，按下中間的「Download」下載外掛檔案nbm。它的檔案名稱可能會像是「1568024974_netbeans-github-issues-0.5.1.nbm」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-mBzP5fPnRBs/XYo1fzhYOWI/AAAAAAAEYPo/tR8jQ7Iim1sTO2J5g2GGa3LqONbhljN3QCK4BGAYYCw/s1600/2019-0924-213357-File-Edit-View-Navigate-Source-Refactor.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-mBzP5fPnRBs/XYo1fzhYOWI/AAAAAAAEYPo/tR8jQ7Iim1sTO2J5g2GGa3LqONbhljN3QCK4BGAYYCw/s450/2019-0924-213357-File-Edit-View-Navigate-Source-Refactor.png&quot; title=&quot;2019-0924-213357-File-Edit-View-Navigate-Source-Refactor.png&quot; alt=&quot;2019-0924-213357-File-Edit-View-Navigate-Source-Refactor.png&quot; width=&quot;450&quot; height=&quot;297&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再來打開NetBeans，從工具列的「Tools」開啟「Plugins」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-dYzpUDxMlyA/XYo1fwoIxqI/AAAAAAAEYPk/r2BC3aFPf6MEfToH_OJOuQwqN9GoXV4dACK4BGAYYCw/s1600/2019-0924-213639.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-dYzpUDxMlyA/XYo1fwoIxqI/AAAAAAAEYPk/r2BC3aFPf6MEfToH_OJOuQwqN9GoXV4dACK4BGAYYCw/s450/2019-0924-213639.png&quot; title=&quot;2019-0924-213639.png&quot; alt=&quot;2019-0924-213639.png&quot; width=&quot;450&quot; height=&quot;279&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;進入上面頁籤「Downloaded」，然後按下「Add Plugins...」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-XBKKggBPBco/XYo1kh2kVTI/AAAAAAAEYQk/nvE3a8lAJ00BG5MZuR-xzN3Hn7mCWJeowCK4BGAYYCw/s1600/2019-0924-213828-Lookin-lei-meimenl-Rice-Recent-Items.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-XBKKggBPBco/XYo1kh2kVTI/AAAAAAAEYQk/nvE3a8lAJ00BG5MZuR-xzN3Hn7mCWJeowCK4BGAYYCw/s450/2019-0924-213828-Lookin-lei-meimenl-Rice-Recent-Items.png&quot; title=&quot;2019-0924-213828-Lookin-lei-meimenl-Rice-Recent-Items.png&quot; alt=&quot;2019-0924-213828-Lookin-lei-meimenl-Rice-Recent-Items.png&quot; width=&quot;450&quot; height=&quot;311&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;選擇剛剛下載的nbm檔案，開啟它。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-msjCxcLwuyk/XYo1khIl5vI/AAAAAAAEYQg/IeZP_jDYdbw55AKbDlOrEUgRD65t1Y1ZwCK4BGAYYCw/s1600/2019-0924-213921-Plugins-ul-tins-ouch-fo-um-Ho-FETE.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-msjCxcLwuyk/XYo1khIl5vI/AAAAAAAEYQg/IeZP_jDYdbw55AKbDlOrEUgRD65t1Y1ZwCK4BGAYYCw/s450/2019-0924-213921-Plugins-ul-tins-ouch-fo-um-Ho-FETE.png&quot; title=&quot;2019-0924-213921-Plugins-ul-tins-ouch-fo-um-Ho-FETE.png&quot; alt=&quot;2019-0924-213921-Plugins-ul-tins-ouch-fo-um-Ho-FETE.png&quot; width=&quot;450&quot; height=&quot;279&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候會看到GitHub Issues外掛已經出現在列表中，預設會幫你打勾起來。請按下左下角的「Install」安裝。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-ba98r1JRQhU/XYo1kq9loEI/AAAAAAAEYQo/CQYAOkbj834xQDxHDwzJLc5ujEGaUOMJwCK4BGAYYCw/s1600/2019-0924-214028-NetBeans-DE-Installer-Welcome-to.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-ba98r1JRQhU/XYo1kq9loEI/AAAAAAAEYQo/CQYAOkbj834xQDxHDwzJLc5ujEGaUOMJwCK4BGAYYCw/s450/2019-0924-214028-NetBeans-DE-Installer-Welcome-to.png&quot; title=&quot;2019-0924-214028-NetBeans-DE-Installer-Welcome-to.png&quot; alt=&quot;2019-0924-214028-NetBeans-DE-Installer-Welcome-to.png&quot; width=&quot;450&quot; height=&quot;402&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先會列出你即將要安裝的外掛列表。請按下「Next」進入下一步。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-nJfVfbUZVs0/XYo1ksIeWHI/AAAAAAAEYQc/9p2HjEUmrb0wFoLBx1NjWYIQ7LN_sgvLACK4BGAYYCw/s1600/2019-0924-214127-NetBeans-DE-Installer-License-Agreement.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-nJfVfbUZVs0/XYo1ksIeWHI/AAAAAAAEYQc/9p2HjEUmrb0wFoLBx1NjWYIQ7LN_sgvLACK4BGAYYCw/s450/2019-0924-214127-NetBeans-DE-Installer-License-Agreement.png&quot; title=&quot;2019-0924-214127-NetBeans-DE-Installer-License-Agreement.png&quot; alt=&quot;2019-0924-214127-NetBeans-DE-Installer-License-Agreement.png&quot; width=&quot;450&quot; height=&quot;402.828&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著要確認授權條款。請勾選「I accept the terms in all of the license agreements.」，然後按下「Install」開始安裝。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-m_Mr7WsVeIo/XYo1kqTzsII/AAAAAAAEYQY/zqVp0EWUOH8X3vvRO3eMOxUmnNS9QjMfQCK4BGAYYCw/s1600/2019-0924-214337-CO-Very-Certicate-Be-eg-Pgs-Signed.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-m_Mr7WsVeIo/XYo1kqTzsII/AAAAAAAEYQY/zqVp0EWUOH8X3vvRO3eMOxUmnNS9QjMfQCK4BGAYYCw/s450/2019-0924-214337-CO-Very-Certicate-Be-eg-Pgs-Signed.png&quot; title=&quot;2019-0924-214337-CO-Very-Certicate-Be-eg-Pgs-Signed.png&quot; alt=&quot;2019-0924-214337-CO-Very-Certicate-Be-eg-Pgs-Signed.png&quot; width=&quot;450&quot; height=&quot;401&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;開始安裝之前會先請你確認憑證(certificate)。因為GitHub Issues是自己簽署自己的憑證，沒有第三方公正機構能夠保證它的安全性。如果你不是很介意這件事情的話，按下「Continue」繼續即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-uKYDQhzjKYg/XYo1kgBnJbI/AAAAAAAEYQU/b4WlXnd9BFErggKUtIJpqDAcGgi_mBWZwCK4BGAYYCw/s1600/2019-0924-214553-Installation-completed-successfully.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-uKYDQhzjKYg/XYo1kgBnJbI/AAAAAAAEYQU/b4WlXnd9BFErggKUtIJpqDAcGgi_mBWZwCK4BGAYYCw/s450/2019-0924-214553-Installation-completed-successfully.png&quot; title=&quot;2019-0924-214553-Installation-completed-successfully.png&quot; alt=&quot;2019-0924-214553-Installation-completed-successfully.png&quot; width=&quot;450&quot; height=&quot;401&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很快的外掛就安裝完成了，按下「Finish」吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-pjW8yBaa-p8/XYo1t7UWLUI/AAAAAAAEYRY/-31fiOKfBD0g2xG-5NUawdS-RmV7fnomwCK4BGAYYCw/s1600/2019-0924-214713-Fie-Edit-View-Navigate-Source-Refactor.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-pjW8yBaa-p8/XYo1t7UWLUI/AAAAAAAEYRY/-31fiOKfBD0g2xG-5NUawdS-RmV7fnomwCK4BGAYYCw/s450/2019-0924-214713-Fie-Edit-View-Navigate-Source-Refactor.png&quot; title=&quot;2019-0924-214713-Fie-Edit-View-Navigate-Source-Refactor.png&quot; alt=&quot;2019-0924-214713-Fie-Edit-View-Navigate-Source-Refactor.png&quot; width=&quot;390&quot; height=&quot;450&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;為了要能夠讓安裝的外掛生效，我們需要重新啟動NetBeans。至此GitHub Issues外掛的下載和安裝就完成了。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;Step 2. 取得GitHub的個人存取令牌 / Generate GitHub&#39;s personal access token&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-bwT0R07E_no/XYo1tyuTH4I/AAAAAAAEYRE/Mp7pHvq8HHgQLIIMuLfRH4395-HtnH-ggCK4BGAYYCw/s1600/2019-0924-221036-Pull-requests-Issues-Marketplace.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-bwT0R07E_no/XYo1tyuTH4I/AAAAAAAEYRE/Mp7pHvq8HHgQLIIMuLfRH4395-HtnH-ggCK4BGAYYCw/s450/2019-0924-221036-Pull-requests-Issues-Marketplace.png&quot; title=&quot;2019-0924-221036-Pull-requests-Issues-Marketplace.png&quot; alt=&quot;2019-0924-221036-Pull-requests-Issues-Marketplace.png&quot; width=&quot;450&quot; height=&quot;262&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;GitHub個人存取令牌：&lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;https://github.com/settings/tokens&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;為了能夠讓NetBeans能夠控制GitHub Issues，我們必須要在GitHub上產生一個獨一無二的密碼令牌，供NetBeans使用。&lt;/p&gt;
&lt;p&gt;首先讓我們開啟GitHub產生個人存取令牌(personal access tokens)功能的&lt;a href=&quot;https://github.com/settings/tokens&quot; target=&quot;_blank&quot;&gt;網址&lt;/a&gt;，按下「Generate new token」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-8UMLi-cbVyI/XYo1t_lZDdI/AAAAAAAEYRQ/xnuh9Nixa4g-CJ84iB96f5LWrMxZ0hOwwCK4BGAYYCw/s1600/2019-0924-221620-Pull-requests-Issues-Marketplace.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-8UMLi-cbVyI/XYo1t_lZDdI/AAAAAAAEYRQ/xnuh9Nixa4g-CJ84iB96f5LWrMxZ0hOwwCK4BGAYYCw/s450/2019-0924-221620-Pull-requests-Issues-Marketplace.png&quot; title=&quot;2019-0924-221620-Pull-requests-Issues-Marketplace.png&quot; alt=&quot;2019-0924-221620-Pull-requests-Issues-Marketplace.png&quot; width=&quot;450&quot; height=&quot;291&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下來會出現「New personal access token」設定新的個人存取令牌的頁面。請在Note處加入說明，例如「NetBeans GitHub Issues」。然後在下面的「Select scopes」裡面，勾選「repo」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-yBfyc6i1Ah4/XYo1t5eEubI/AAAAAAAEYRA/1r6i-1selwwTq4ofSHZBAwLQNTlrC3zkACK4BGAYYCw/s1600/2019-0924-221808-wuhux-Read-all-user-profile-data.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-yBfyc6i1Ah4/XYo1t5eEubI/AAAAAAAEYRA/1r6i-1selwwTq4ofSHZBAwLQNTlrC3zkACK4BGAYYCw/s450/2019-0924-221808-wuhux-Read-all-user-profile-data.png&quot; title=&quot;2019-0924-221808-wuhux-Read-all-user-profile-data.png&quot; alt=&quot;2019-0924-221808-wuhux-Read-all-user-profile-data.png&quot; width=&quot;450&quot; height=&quot;264.703&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然後再將網頁往下捲，按下「Generate token」的按鈕。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-xGEDbdFC8Ds/XYo1twgnXTI/AAAAAAAEYRM/EMudC4JwbJ4WpXn5tPdJPqw2mxaTxfI_QCK4BGAYYCw/s1600/2019-0924-222007-Pull-requests-Issues-Marketplace.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-xGEDbdFC8Ds/XYo1twgnXTI/AAAAAAAEYRM/EMudC4JwbJ4WpXn5tPdJPqw2mxaTxfI_QCK4BGAYYCw/s450/2019-0924-222007-Pull-requests-Issues-Marketplace.png&quot; title=&quot;2019-0924-222007-Pull-requests-Issues-Marketplace.png&quot; alt=&quot;2019-0924-222007-Pull-requests-Issues-Marketplace.png&quot; width=&quot;450&quot; height=&quot;262&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著會回到個人存取令牌的頁面，列表最上方出現了我們剛剛新增的令牌。令牌是以一連串英文與數字所組成的字串，每次產生的令牌都不一樣。舉例來說，我這串令牌的部分文字是「46ab......ee88」。&lt;/p&gt;
&lt;p&gt;請按下剪貼簿按鈕複製這串令牌，並好好保存在其他地方。必須注意的是，&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 0);&quot;&gt;這個令牌只會在此處顯示一次&lt;/span&gt;，如果你忘記或弄丟的話，就要重新產生令牌，而NetBeans也就要重新設定令牌。因為不能再次取得同樣的令牌字串，請務必好好將它保存在其他地方。&lt;/p&gt;
&lt;p&gt;到這邊為止，我們成功取得GitHub個人存取令牌了，讓我們進入下一步吧。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;Step 3. 連結GitHub Issues / Connect GitHub Issues&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-zvGWXXEUQfo/XYo1uEqMsNI/AAAAAAAEYRU/JirEE7pOdKE_GF8dqLVoMqigd4lZSwKgACK4BGAYYCw/s1600/2019-0924-222757-LU-blogger-editor-Apache-NetBeans.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-zvGWXXEUQfo/XYo1uEqMsNI/AAAAAAAEYRU/JirEE7pOdKE_GF8dqLVoMqigd4lZSwKgACK4BGAYYCw/s450/2019-0924-222757-LU-blogger-editor-Apache-NetBeans.png&quot; title=&quot;2019-0924-222757-LU-blogger-editor-Apache-NetBeans.png&quot; alt=&quot;2019-0924-222757-LU-blogger-editor-Apache-NetBeans.png&quot; width=&quot;450&quot; height=&quot;153&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;回到NetBeans上，我們要來開啟Tasks任務面板。請在上方工具列的「Window」中開啟「Tasks」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-jpNqiC3v8Jk/XYo1zKoherI/AAAAAAAEYSA/VE1KoiBwjOM1TUF_Dp5rTiLNBxsQS-OgACK4BGAYYCw/s1600/2019-0924-222838-LJ-blogger-editor-Apache-NetBeans.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-jpNqiC3v8Jk/XYo1zKoherI/AAAAAAAEYSA/VE1KoiBwjOM1TUF_Dp5rTiLNBxsQS-OgACK4BGAYYCw/s311/2019-0924-222838-LJ-blogger-editor-Apache-NetBeans.png&quot; title=&quot;2019-0924-222838-LJ-blogger-editor-Apache-NetBeans.png&quot; alt=&quot;2019-0924-222838-LJ-blogger-editor-Apache-NetBeans.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然後在Tasks任務面板中找到「Repositories」，按下右邊的「Add Repository」新增儲存庫的圖示。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-mpnym6Kw4gY/XYo1zOzoM3I/AAAAAAAEYSE/HThIjezAKsg6Z4o-WMfu0-laF3K_7lj9QCK4BGAYYCw/s1600/2019-0924-223051-wmm-Gen-User-Name-must-be-set-or.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-mpnym6Kw4gY/XYo1zOzoM3I/AAAAAAAEYSE/HThIjezAKsg6Z4o-WMfu0-laF3K_7lj9QCK4BGAYYCw/s445/2019-0924-223051-wmm-Gen-User-Name-must-be-set-or.png&quot; title=&quot;2019-0924-223051-wmm-Gen-User-Name-must-be-set-or.png&quot; alt=&quot;2019-0924-223051-wmm-Gen-User-Name-must-be-set-or.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;開啟「Create Task Repository」對話視窗，請在「Connector」裡面選擇「GitHub Issues」，然後在OAuth Token裡面貼上前面所取得的令牌。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-cVcR0HT7QjY/XYo1zByQFvI/AAAAAAAEYRo/eIFbDSV-AF0nSUYLYcwBlgxKi9XSOoGNwCK4BGAYYCw/s1600/2019-0924-223227-hass-mi-ougd-ue-smsssssssd-El-tre.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-cVcR0HT7QjY/XYo1zByQFvI/AAAAAAAEYRo/eIFbDSV-AF0nSUYLYcwBlgxKi9XSOoGNwCK4BGAYYCw/s444/2019-0924-223227-hass-mi-ougd-ue-smsssssssd-El-tre.png&quot; title=&quot;2019-0924-223227-hass-mi-ougd-ue-smsssssssd-El-tre.png&quot; alt=&quot;2019-0924-223227-hass-mi-ougd-ue-smsssssssd-El-tre.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然後按下「Add Repository」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-Z4p458ZZViQ/XYo1zYlt_wI/AAAAAAAEYSI/_c7VmL7gJ7A4WBICM_GsUidxS4TKBtZgwCK4BGAYYCw/s1600/2019-0924-223318-Repositories-EE-SE-em.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-Z4p458ZZViQ/XYo1zYlt_wI/AAAAAAAEYSI/_c7VmL7gJ7A4WBICM_GsUidxS4TKBtZgwCK4BGAYYCw/s402/2019-0924-223318-Repositories-EE-SE-em.png&quot; title=&quot;2019-0924-223318-Repositories-EE-SE-em.png&quot; alt=&quot;2019-0924-223318-Repositories-EE-SE-em.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下來NetBeans會跳出一個下拉式選單，請你選擇要連結的GitHub儲存庫。這邊我以&lt;a href=&quot;https://github.com/pulipulichen/Electron-Sticky-Notes/issues&quot; target=&quot;_blank&quot;&gt;Electron Sticky Notes&lt;/a&gt;&lt;a href=&quot;https://github.com/pulipulichen/Electron-Sticky-Notes/issues&quot; target=&quot;_blank&quot;&gt;便利貼儲存庫&lt;/a&gt;為例。選好之後按下「OK」。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-9jnqpIqsznI/XYo1zPhj_nI/AAAAAAAEYRw/TnSXCthdQug-X8T4fnNBq4Fjr-hWCYl4wCK4BGAYYCw/s1600/2019-0924-223550.png&quot;&gt;&lt;img src=&quot;//4.bp.blogspot.com/-9jnqpIqsznI/XYo1zPhj_nI/AAAAAAAEYRw/TnSXCthdQug-X8T4fnNBq4Fjr-hWCYl4wCK4BGAYYCw/s444/2019-0924-223550.png&quot; title=&quot;2019-0924-223550.png&quot; alt=&quot;2019-0924-223550.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接著NetBeans會幫你把下面的空格填好對應的資訊。然後我們還要按下「Connect」按鈕，確認是否能夠順利存取。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-HrrI-t7leFk/XYo1zJZhF1I/AAAAAAAEYR8/FNYUDsKcGBEKsum6U4TEr9jASE7kvptzACK4BGAYYCw/s1600/2019-0924-223739-QJ-Create-Task-Repository-Comestor.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-HrrI-t7leFk/XYo1zJZhF1I/AAAAAAAEYR8/FNYUDsKcGBEKsum6U4TEr9jASE7kvptzACK4BGAYYCw/s444/2019-0924-223739-QJ-Create-Task-Repository-Comestor.png&quot; title=&quot;2019-0924-223739-QJ-Create-Task-Repository-Comestor.png&quot; alt=&quot;2019-0924-223739-QJ-Create-Task-Repository-Comestor.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;連結成功。請按下「OK」確定。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-xV1Igz2ZlNM/XYo15vD7jNI/AAAAAAAEYS8/pXfligNwMkUNC30CAW85Ws0Q05iPhEluACK4BGAYYCw/s1600/2019-0924-223838-ComwTakhweaey-Conmeotor-CGD-oes.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-xV1Igz2ZlNM/XYo15vD7jNI/AAAAAAAEYS8/pXfligNwMkUNC30CAW85Ws0Q05iPhEluACK4BGAYYCw/s445/2019-0924-223838-ComwTakhweaey-Conmeotor-CGD-oes.png&quot; title=&quot;2019-0924-223838-ComwTakhweaey-Conmeotor-CGD-oes.png&quot; alt=&quot;2019-0924-223838-ComwTakhweaey-Conmeotor-CGD-oes.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;設定完成。請按下「OK」離開。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-58OHyW7GUXM/XYo13ri4QjI/AAAAAAAEYSg/Xc6XW2xVCtAEaFyReqWdZryifLsbgVungCK4BGAYYCw/s1600/2019-0924-223942-LJ-blogger-editor-Apache-NetBeans.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-58OHyW7GUXM/XYo13ri4QjI/AAAAAAAEYSg/Xc6XW2xVCtAEaFyReqWdZryifLsbgVungCK4BGAYYCw/s450/2019-0924-223942-LJ-blogger-editor-Apache-NetBeans.png&quot; title=&quot;2019-0924-223942-LJ-blogger-editor-Apache-NetBeans.png&quot; alt=&quot;2019-0924-223942-LJ-blogger-editor-Apache-NetBeans.png&quot; width=&quot;299&quot; height=&quot;450&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這時候NetBeans的Tasks任務面板就會顯示已經連結的GitHub儲存庫的Issues，這邊列出了Electron Sticky Notes還有六個issues。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-oRtZ_26Ixfw/XYo13ls6hgI/AAAAAAAEYSs/Apsg98t5nhMN83JxjxDJKKQSgB810ttWwCK4BGAYYCw/s1600/2019-0924-224043-Pull-requests-Issues-Marketplace.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-oRtZ_26Ixfw/XYo13ls6hgI/AAAAAAAEYSs/Apsg98t5nhMN83JxjxDJKKQSgB810ttWwCK4BGAYYCw/s450/2019-0924-224043-Pull-requests-Issues-Marketplace.png&quot; title=&quot;2019-0924-224043-Pull-requests-Issues-Marketplace.png&quot; alt=&quot;2019-0924-224043-Pull-requests-Issues-Marketplace.png&quot; width=&quot;450&quot; height=&quot;304&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;對照到&lt;a href=&quot;https://github.com/pulipulichen/Electron-Sticky-Notes&quot; target=&quot;_blank&quot;&gt;Electron Sticky Notes的Issues&lt;/a&gt;，兩者都能列出一樣的issues。&lt;/p&gt;
&lt;p&gt;到這邊為止，我們成功讓NetBeans整合了GitHub Issues的功能囉。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;使用GitHub Issues外掛 / Instruction of GitHub Issues plugin&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;//1.bp.blogspot.com/-PfvaBfe9c5Q/XYo13zK1hmI/AAAAAAAEYSw/3ZkwgAMpb1w7PNLIiwVqnndsSWe_XcnFwCK4BGAYYCw/s1600/2019-0924-224808-ai-oy-SEES-Sehedul-This-Week-tot.png&quot;&gt;
      &lt;img src=&quot;//1.bp.blogspot.com/-PfvaBfe9c5Q/XYo13zK1hmI/AAAAAAAEYSw/3ZkwgAMpb1w7PNLIiwVqnndsSWe_XcnFwCK4BGAYYCw/s450/2019-0924-224808-ai-oy-SEES-Sehedul-This-Week-tot.png&quot; title=&quot;2019-0924-224808-ai-oy-SEES-Sehedul-This-Week-tot.png&quot; alt=&quot;2019-0924-224808-ai-oy-SEES-Sehedul-This-Week-tot.png&quot; width=&quot;450&quot; height=&quot;292&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NetBeans的GitHub Issues外掛要如何使用呢？我覺得最好用的功能，就是列出目前還沒解決的issue的編號。有了這個編號，例如我們要處理編號23的issue，我們就能在Git遞交(commit)的時候加上「#23」，表示這次遞交是跟編號23 issue相關。如果遞交訊息寫的是「close #23」，那麼在推送(push)到GitHub的時候，編號23 issue就會被設為已完成(closed)。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-sCj0u4a99D8/XYo13gdEmiI/AAAAAAAEYSo/7JuFsJftTh8wuxc-_pBOqpcK25tdEJelACK4BGAYYCw/s1600/2019-0924-225157-es-pullpulchen-opened-this-sue-days.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-sCj0u4a99D8/XYo13gdEmiI/AAAAAAAEYSo/7JuFsJftTh8wuxc-_pBOqpcK25tdEJelACK4BGAYYCw/s450/2019-0924-225157-es-pullpulchen-opened-this-sue-days.png&quot; title=&quot;2019-0924-225157-es-pullpulchen-opened-this-sue-days.png&quot; alt=&quot;2019-0924-225157-es-pullpulchen-opened-this-sue-days.png&quot; width=&quot;450&quot; height=&quot;304&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這是我其中一個&lt;a href=&quot;https://github.com/pulipulichen/Electron-Sticky-Notes/issues/24&quot; target=&quot;_blank&quot;&gt;已經完成的issue&lt;/a&gt;，你可以看到裡面有幾次遞交都跟這個issue相關，最後我在19天前的某次遞交中將該issue設為完成。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-REHHSjiw-w4/XYo13yM336I/AAAAAAAEYS0/8Xakf_olrjwzxljD4rkpaAszHUArAlTKACK4BGAYYCw/s1600/2019-0924-225454-Features-Project-Management-Code.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-REHHSjiw-w4/XYo13yM336I/AAAAAAAEYS0/8Xakf_olrjwzxljD4rkpaAszHUArAlTKACK4BGAYYCw/s450/2019-0924-225454-Features-Project-Management-Code.png&quot; title=&quot;2019-0924-225454-Features-Project-Management-Code.png&quot; alt=&quot;2019-0924-225454-Features-Project-Management-Code.png&quot; width=&quot;450&quot; height=&quot;324&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(網頁截圖：&lt;a href=&quot;https://github.com/features/project-management/&quot; target=&quot;_blank&quot;&gt;GitHub Features: Project management&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;這個小技巧能夠大幅度加速專案開發的效率。如果你也跟我一樣，用GitHub Issues作為專案管理工具的話，請務必學習在Git遞交時加上「#id」吧。&lt;/p&gt;
&lt;h3&gt;很難用的外掛 / GitHub Issues plugin: unfriendly UI&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;//3.bp.blogspot.com/-_KU3mYB704g/XYo1_A3O-II/AAAAAAAEYTQ/Qn4rtjhi6wc78G--GWaYwUQU5gV8FKPjwCK4BGAYYCw/s1600/2019-0924-225743-Lamawhagawiu-Fil-Edit-View-Navigate.png&quot;&gt;
      &lt;img src=&quot;//3.bp.blogspot.com/-_KU3mYB704g/XYo1_A3O-II/AAAAAAAEYTQ/Qn4rtjhi6wc78G--GWaYwUQU5gV8FKPjwCK4BGAYYCw/s450/2019-0924-225743-Lamawhagawiu-Fil-Edit-View-Navigate.png&quot; title=&quot;2019-0924-225743-Lamawhagawiu-Fil-Edit-View-Navigate.png&quot; alt=&quot;2019-0924-225743-Lamawhagawiu-Fil-Edit-View-Navigate.png&quot; width=&quot;450&quot; height=&quot;351&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;至於GitHub Issues外掛的其他功能嘛，我只能說是堪用。原本在GitHub Issues網頁上的功能，在外掛中大致上都有對應的功能。但GitHub Issues網頁寫得實在是太好了，這個用Java寫成的外掛，就相對覺得難用，不如直接開網頁來操作。&lt;/p&gt;
&lt;p&gt;不過裡面還是有幾個功能，是我覺得在NetBeans中操作會比在GitHub上操作還要快的功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//2.bp.blogspot.com/-uO9OM_xQXAA/XYo1-4Ruz8I/AAAAAAAEYTE/pM9LX4iyg9gsxb8nIDPeDzAjmiIblNVdwCK4BGAYYCw/s1600/2019-0924-230047-Osuadamemsosbuo-pw-sMidaaamy-OT.png&quot;&gt;
      &lt;img src=&quot;//2.bp.blogspot.com/-uO9OM_xQXAA/XYo1-4Ruz8I/AAAAAAAEYTE/pM9LX4iyg9gsxb8nIDPeDzAjmiIblNVdwCK4BGAYYCw/s340/2019-0924-230047-Osuadamemsosbuo-pw-sMidaaamy-OT.png&quot; title=&quot;2019-0924-230047-Osuadamemsosbuo-pw-sMidaaamy-OT.png&quot; alt=&quot;2019-0924-230047-Osuadamemsosbuo-pw-sMidaaamy-OT.png&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第一個是「Create new task」，就是開一個新的issue。很多時候我們會在開發過程中又遇到新的問題，這時候可以直接在這裡開一個新的issue，簡單用文字敘述一下即可。&lt;/p&gt;
&lt;p&gt;不過，如果要上傳圖片，用圖片來說明問題發生的地方的話，那就得要用GitHub Issues網頁版了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//4.bp.blogspot.com/-DOCaDE5OEv4/XYo1_JpjeXI/AAAAAAAEYTU/zr1Bsj9_XUUZHpT85pCrjUeQmKHfYGe9wCK4BGAYYCw/s1600/2019-0924-230424-Tak-EE-Report-New-Task-Oreste-Crea.png&quot;&gt;
      &lt;img src=&quot;//4.bp.blogspot.com/-DOCaDE5OEv4/XYo1_JpjeXI/AAAAAAAEYTU/zr1Bsj9_XUUZHpT85pCrjUeQmKHfYGe9wCK4BGAYYCw/s450/2019-0924-230424-Tak-EE-Report-New-Task-Oreste-Crea.png&quot; title=&quot;2019-0924-230424-Tak-EE-Report-New-Task-Oreste-Crea.png&quot; alt=&quot;2019-0924-230424-Tak-EE-Report-New-Task-Oreste-Crea.png&quot; width=&quot;450&quot; height=&quot;321&quot;&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另一個功能，就是「Show in browser」，開啟網頁版的GitHub Issues。說真的，與其用難用的GitHub Issues外掛，還不如直接用網頁版開啟比較簡單。&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;結語 / In closing&lt;/h2&gt;&lt;p&gt;其實我在2018年的時候就已經在NetBeans上使用GitHub Issues外掛。我本來在那時候有想過要寫一篇文章來介紹如何使用。畢竟你看，上面這一串下來，其實在NetBeans上安裝GitHub Issues外掛是有點複雜的。&lt;a href=&quot;https://github.com/junichi11/netbeans-github-issues-plugin&quot; target=&quot;_blank&quot;&gt;此外掛的作者junichi11有在GitHub儲存庫上介紹如何安裝&lt;/a&gt;，不過寫得也是挺簡單的，要架起來可還是要摸索好一陣子。&lt;/p&gt;
&lt;p&gt;但是這外掛用一陣子之後，有感於它的介面實在是比不上網頁版，後來我就打消了為它寫個介紹的念頭。直到最近我又在開發各種專案，時常頻繁使用GitHub Issues的功能，才想要把它裝回NetBeans使用。&lt;/p&gt;
&lt;p&gt;總之，雖然我抱怨了這麼多，但NetBeans跟GitHub的整合還是很方便的。希望有志於開發複雜系統的同道們，不妨也來試試看NetBeans吧。



&lt;/p&gt;
&lt;hr&gt;&lt;p&gt;那麼這次在NetBeans中整合GitHub Issues的教學就到這裡了。寫到最後，我有些問題想問問大家：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你用過issues tracker 問題追蹤器嗎？你是用那一種問題追蹤器呢？&lt;/li&gt;&lt;li&gt;你用過GitHub Issues嗎？你都是怎麽用它的呢？&lt;/li&gt;&lt;li&gt;GitHub Issues支援標籤(labels)和里程碑(milestone)，相當適合作為專案管理工具。你看過那個專案是用GitHub Issues作為專案管理的嗎？&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;歡迎在下面的留言處跟我們分享你的想法。大家的意見是我繼續分享的動力喔！如果你覺得我這篇教學實用的話，請幫我在AddThis分享工具按讚、將這篇分享到Facebook等社群媒體吧！&lt;/p&gt;
&lt;p&gt;感謝你的耐心閱讀，我是布丁，讓我們下一篇見。&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://blog.pulipuli.info/feeds/3443334703160112724/comments/default' title='張貼留言'/><link rel='replies' type='text/html' href='https://blog.pulipuli.info/2019/09/netbeansgithub-issues-integrate-github.html#comment-form' title='0 個意見'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3443334703160112724'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/16607461/posts/default/3443334703160112724'/><link rel='alternate' type='text/html' href='https://blog.pulipuli.info/2019/09/netbeansgithub-issues-integrate-github.html' title='NetBeans整合GitHub Issues / Integrate GitHub Issues into NetBeans Tasks'/><author><name>布丁布丁吃布丁</name><uri>http://www.blogger.com/profile/18000418899714977849</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//3.bp.blogspot.com/-J6d3GYuU8ms/XNPJfFWVxkI/AAAAAAAEPOM/BN1CAbYFfvA4wdB93SUeoMPhOOhKbA57QCK4BGAYYCw/s1600/1422855-big2.jpg'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="//4.bp.blogspot.com/-fyriojvAgpU/XYo1gmOlWHI/AAAAAAAEYP4/qDTYU1zvKuE5rRSaon8wBcymdmZtf6EMgCK4BGAYYCw/s72-c/3-NetBeans_GitHub_Issues_Integrate.png" height="72" width="72"/><thr:total>0</thr:total></entry></feed>